format-version: 1.0
date: 14:07:2008 13:11
saved-by: lenov
auto-generated-by: OBO-Edit 1.101
default-namespace: KISAO

[Term]
id: KISAO:0000000
name: kinetic simulation algorithm
def: "Algorithm used to instantiate a simulation from a mathematical model, where the variable values evolve over time." [dk:260508]

[Term]
id: KISAO:0000001
name: Gillespie-like approximate simulation method
is_a: KISAO:0000025 ! Gillespie-like stochastic simulation method

[Term]
id: KISAO:0000002
name: non-spatial tau-leaping method
is_a: KISAO:0000042 ! Non-spatial Gillespie-like methods

[Term]
id: KISAO:0000003
name: weigthed SSA
def: "The weighted Stochastic Simulation Algorithm manipulates the probabilities measure of biochemical systems by sampling, in order to increase the fraction of simulation runs exhibiting rare events.   \nKuwahara H, Mura I. (2008) An efficient and exact stochastic simulation method to analyze rare events in\nbiochemical systems.\nJ Chem Phys. 129(16):165101." [NLN:24JAN2009]
is_a: KISAO:0000034 ! optimized direct method


[Term]
id: KISAO:0000015
name: Gillespie's first reaction method
def: "Stochastic simulation algorithm using the next-reaction density function, giving the probaility that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm calculates a tentative reaction time for each reaction and then select the smallest.\nGillespie DT. A General Method for Numerically Simulating the Stochastic Time Evolution of Coupled Chemical Reactions. Journal of Computational Physics, Volume 2 , pages 403-434 (1976)." [nln:09OCT2007]
is_a: KISAO:0000034 ! optimized direct method

[Term]
id: KISAO:0000016
name: algorithm using discrete variables
def: "Algorithm that allows to change the values of a system's variables by discrete (integral) amounts." [NLN:08072008]
is_a: KISAO:0000000 ! kinetic simulation algorithm

[Term]
id: KISAO:0000017
name: multi-state agent-based simulation method
def: "The agent-based simulation method instantiates each molecule as an individual software object. The interactions between those objects are determined by interaction probabilities according to experimental data. The probability is depended on the state the molecule is in at that specific time (Molecules have multiple-state.). Additionally, ''pseudo-molecules'' are introduced to the system in order to simulate unimolecular reactions. For simulation, continuous time is broken down into disrete, independent ''slices''. During each time slice one molecule is selected randomly, a second molecule or pseudo-molecule is selected afterwards (leading to either a unimolecular or a bimolecular reaction). The reaction will only take place if a produced random number exceeds the reaction probability calculated beforehand. In that case, the system is updated after that reaction.\nMorton-Firth, C.J, Bray, D. Predicting temporal fluctuations in an intracellular signalling pathway. Journal of Theoretical Biology, volume 192, pages 117-128 (1998)." [pubmed:9628844]
comment: The agent-based simulation method is, for example, used in StochSim.
exact_synonym: "Morton-Firth" []
is_a: KISAO:0000016 ! algorithm using discrete variables
is_a: KISAO:0000026 ! algorithm using non-spatial description
is_a: KISAO:0000036 ! algorithm using stochastic rules
is_a: KISAO:0000037 ! algorithm using fixed timesteps

[Term]
id: KISAO:0000018
name: algorithm using continuous variables
def: "Algorithm that allows to change the values of a system's variables by continuous (non-integral) amounts." [NLN:08072008]
is_a: KISAO:0000000 ! kinetic simulation algorithm

[Term]
id: KISAO:0000019
name: code value ordinary differential equation solver
def: "The CVODE is a package written in C that solves initial value problems for ODEs. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton method and the Backward differentiation formula (BNF).\nCohen S, Hindmarsh C. Cvode, A Stiff/nonstiff Ode Solver In C. Computers in Physics, Vol. 10 (2), pages 138-143 (1996)." [dk:30OCT2007]
comment: The CVODE is a package written in C that solves initial value problems for ODEs. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton method and the Backward differentiation formula (BNF).
exact_synonym: "CVODE" []
is_a: KISAO:0000018 ! algorithm using continuous variables
is_a: KISAO:0000026 ! algorithm using non-spatial description
is_a: KISAO:0000035 ! algorithm using deterministic rules
is_a: KISAO:0000041 ! algorithm using adaptive timesteps

[Term]
id: KISAO:0000020
name: non-spatial description
def: "Byrne GD, Hindmarsh AC. PVODE, an ODE Solver for Parallel Computers. International Journal of High Performance Computing Applications, Vol. 13 (4), pages 354-365 (1999)." [DOI:<new dbxref> "10.1177/109434209901300405"]
exact_synonym: "parallel Code Value ODE solver" []
exact_synonym: "PVODE" []
exact_synonym: "well-stirred" []
is_a: KISAO:0000026 ! algorithm using non-spatial description

[Term]
id: KISAO:0000021
name: StochSim nearest-neighbour algorithm
def: "The nearest-neighbor algorithm allows for the representation of spatial information, by adding a two-dimensional lattice in the form of a probabilistic cellular automata. That way, nearest neighbor interactions do additionally influence reactions taking place in the systems. Reactions between entities are calculated using the agent-based simulation algorithm.\nLe Novere N, Shimizu TS. STOCHSIM: modelling of stochastic biomolecular processes. Bioinformatics, volume 17 (6), pages 575-576 (2001)." [pubmed:11395441]
comment: The nearest-neighbor algorithm is for example used in Stochsim 1.2 and more recent versions.
is_a: KISAO:0000016 ! algorithm using discrete variables
is_a: KISAO:0000023 ! algorithm using spatial description
is_a: KISAO:0000036 ! algorithm using stochastic rules
is_a: KISAO:0000037 ! algorithm using fixed timesteps

[Term]
id: KISAO:0000022
name: next-subvolume method
def: "Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [KISAO:0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [NRM, KISAO:0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s).\nElf J, Ehrenberg M. Spontaneous separation of bi-stable biochemical systems into spatial domains of opposite phases. Systems Biology, IEE Proceedings, volume 1 (2), pages 230-236 (2004)." [doi:10.1049/sb\:20045021]
exact_synonym: "Elf algorithm" []
exact_synonym: "NSM" []
is_a: KISAO:0000095 ! sub-volume stochastic reaction-diffusion algorithm

[Term]
id: KISAO:0000023
name: algorithm using spatial description
def: "Algorithm that takes into account the location of the reacting components." [NLN:08072008]
is_a: KISAO:0000000 ! kinetic simulation algorithm

[Term]
id: KISAO:0000024
name: partial differential equation method
def: "Partial differential equations are used to describe variations in concentrations over both, space and time." [NLN:08072008]
is_a: KISAO:0000018 ! algorithm using continuous variables
is_a: KISAO:0000023 ! algorithm using spatial description
is_a: KISAO:0000035 ! algorithm using deterministic rules

[Term]
id: KISAO:0000025
name: Gillespie-like stochastic simulation method
def: "Stochastic simulation algorithm using the an approach alike the one described in Gillespie's papers of 1976 and 1977." [NLN:08072008]
comment: This definition is dodgy, as is the name of the term. That will do for the moment, until we redesign the whole stochastic branch, based on algorithm details.
is_a: KISAO:0000016 ! algorithm using discrete variables
is_a: KISAO:0000036 ! algorithm using stochastic rules
is_a: KISAO:0000041 ! algorithm using adaptive timesteps

[Term]
id: KISAO:0000026
name: algorithm using non-spatial description
def: "Algorithms that considers the system to be simulated as made of well-stirred components, that is the activity of the components is the same independently of their location." [NLN:08072008]
is_a: KISAO:0000000 ! kinetic simulation algorithm

[Term]
id: KISAO:0000027
name: Gibson and Bruck's next reaction method
def: "As with the first reaction method [KISAO:0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.\nGibson MA, Bruck J. Efficient Exact Stochastic Simulation of Chemical Systems with Many Species and Many Channels. Journal of Physical Chemistry A, Vol. 104, pages 1876-1889 (2000)." [dk:10OCT2007]
exact_synonym: "Gibson and Bruck method" []
is_a: KISAO:0000034 ! optimized direct method

[Term]
id: KISAO:0000028
name: slow-scale stochastic simulation algorithm
def: "Attempt to overcome the problem of stiff systems by developing an ''approximate theory that allows one to stochastically advance the system in time by simulating the firings of only the slow reaction events''.\nCao Y, Gillespie DT, Petzold LR. The slow-scale stochastic simulation algorithm. Journal of Chemical Physics, Vol. 122, No. 1. (1 January 2005)." [pubmed:15638651]
exact_synonym: "slow-scale stochastic SSA" []
is_a: KISAO:0000001 ! Gillespie-like approximate simulation method
is_a: KISAO:0000042 ! Non-spatial Gillespie-like methods

[Term]
id: KISAO:0000029
name: Gillespie's direct method
def: "Stochastic simulation algorithm using the next-reaction density function, giving the probaility that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculate the identity of the reaction and the time it will fire.\nGillespie DT. Exact stochastic simulation of coupled chemical reactions. Journal of Physical Chemistry, Vol. 81, No. 25. (1977), pp. 2340-2361." [dk:10OCT2007]
related_synonym: "stochastic simulation algorithm" []
exact_synonym: "DM" []
exact_synonym: "SSA" []
is_a: KISAO:0000096 ! Gillespie-like exact stochastic simulation method

[Term]
id: KISAO:0000030
name: Euler forward method
def: "The Euler method is an explicit one-step method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t.\nPress WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes. Cambridge University Press, New York, 2nd edition (1992)." [dk:10OCT2007]
exact_synonym: "Euler method" []
is_a: KISAO:0000018 ! algorithm using continuous variables
is_a: KISAO:0000026 ! algorithm using non-spatial description
is_a: KISAO:0000035 ! algorithm using deterministic rules
is_a: KISAO:0000037 ! algorithm using fixed timesteps

[Term]
id: KISAO:0000031
name: Euler backward method
def: "The Euler backward method is an implicit one-step method for the numerical integration of ODES with a given initial value. The next state of a system is calculated by solving an equation that considers both, the current state of the system and the later one.\nPress WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes in Fortran 77. Cambridge University Press (2001)." [dk:02NOV2007]
is_a: KISAO:0000018 ! algorithm using continuous variables
is_a: KISAO:0000026 ! algorithm using non-spatial description
is_a: KISAO:0000035 ! algorithm using deterministic rules
is_a: KISAO:0000037 ! algorithm using fixed timesteps

[Term]
id: KISAO:0000032
name: explicit fourth-order Runge-Kutta method
def: "The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval).\nButcher JC. The Numerical Analysis of Ordinary Differential Equations: Runge-Kutta and General Linear Methods (1987)." [dk:12NOV2007]
exact_synonym: "RK4" []
exact_synonym: "Runge-Kutta method" []
is_a: KISAO:0000064 ! Runge-Kutta based method

[Term]
id: KISAO:0000033
name: Rosenbrock method
def: "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes. Cambridge University Press, New York, 2nd edition, pages 742-746 (1992).\nAND\nRosenbrock HH. Some general implicit processes for the numerical solution of differential equations. The Computer Journal, pages 329-330 (1963)." [dk:12NOV2007, doi:0.1093/comjnl/5.4.329]
comment: The Rosenbrock method is for example used in E-Cell.
exact_synonym: "generalized fourth order runge-kutta method" []
exact_synonym: "Kaps-Rentrop method" []
is_a: KISAO:0000064 ! Runge-Kutta based method

[Term]
id: KISAO:0000034
name: optimized direct method
def: "Algorithm aimed to speed-up Gillespie's direct method." [NLN:08072008]
is_a: KISAO:0000096 ! Gillespie-like exact stochastic simulation method

[Term]
id: KISAO:0000035
name: algorithm using deterministic rules
def: "Algorithm that simulates the temporal evolution of a system using determined descriptions, that from a precise initial state always provide the same ending state." [NLN:0807208]
is_a: KISAO:0000000 ! kinetic simulation algorithm

[Term]
id: KISAO:0000036
name: algorithm using stochastic rules
def: "Algorithm that simulates the temporal evolution of a system using probabilistic rules, that from a precise initial state may provide different ending state." [NLN:08072008]
is_a: KISAO:0000000 ! kinetic simulation algorithm

[Term]
id: KISAO:0000037
name: algorithm using fixed timesteps
def: "Algorithm that uses timesteps of constant length to update the state of a system during the whole simulation." [NLN:08072008]
is_a: KISAO:0000000 ! kinetic simulation algorithm

[Term]
id: KISAO:0000038
name: sorting direct method
def: "In order to overcome the problem of high complexity of the Stochastic Simulation Algorithm [KISAO:0000029] when simulating large systems, the sorting direct method ''maintains a loosely sorted order of the reactions as the simulation executes''.\nMcCollum J M, Peterson G D, Cox C D, Simpson M L, Samatova N F. The sorting direct method for stochastic simulation of biochemical systems with varying reaction execution behavior. Computational Biology and Chemistry, Volume 30 (1), pages 39-49 (2006)." [doi:10.1016/j.compbiolchem.2005.10.007]
is_a: KISAO:0000034 ! optimized direct method

[Term]
id: KISAO:0000039
name: tau-leaping method
def: "Approximate acceleration procedure of the Stochastic Simulation Algorithm [KISAO:0000029] that divides the time into subintervals and \"leap\" from one to another, firing all the reaction events in each sub-interval." [NLN:08072008]
is_a: KISAO:0000001 ! Gillespie-like approximate simulation method

[Term]
id: KISAO:0000040
name: explicit tau-leaping method with basic preleap check
def: "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section V." [doi:10.1063/1.1378322]
exact_synonym: "explicit tau-leaping" []
exact_synonym: "poisson tau-leaping" []
is_a: KISAO:0000079 ! explicit tau-leaping method

[Term]
id: KISAO:0000041
name: algorithm using adaptive timesteps
def: "Algorithm that does not use fixed timesteps to update the state of a system during the whole simulation, but on the contrary adapts the length of the timesteps to the local situation." [NLN:08072008]
is_a: KISAO:0000000 ! kinetic simulation algorithm

[Term]
id: KISAO:0000042
name: Non-spatial Gillespie-like methods
is_a: KISAO:0000026 ! algorithm using non-spatial description

[Term]
id: KISAO:0000044
name: Gillespie based method for stiff systems
is_obsolete: true

[Term]
id: KISAO:0000045
name: implicit tau-leaping based method
def: "Contrary to the (explicit) tau-leaping [KISAO:0000040], the implicit tau-leaping allows for much larger time-steps when simulating stiff systems.\nRathinam M, Petzold L R, Cao Y, Gillespie D T. Stiffness in stochastic chemically reacting systems: The implicit tau-leaping method. The Journal of Chemical Physics, Volume 119 (24), pages 12784-12794 (2003)." [dk:12OCT2007]
is_a: KISAO:0000083 ! implicit tau-leaping method

[Term]
id: KISAO:0000046
name: trapezoidal implicit tau-leaping based method
def: "Formula for accelerated discrete efficient stochastic simulation of chemically reacting system [which] has better accuracy and stiff stability properties than the explicit [KISAO:0000079] and implicit [KISAO:0000045] tau-leaping formulas for discrete stochastic systems, and it limits to the trapezoidal rule in the deterministic regime.\nCao Y, Petzold L. Trapezoidal tau-leaping formula for the stochastic simulation of biochemical systems. Foundations of Systems Biology in Engineering (FOSBE), pages 149-152 (2005)." [dk:16OCT2007]
is_a: KISAO:0000083 ! implicit tau-leaping method

[Term]
id: KISAO:0000048
name: adaptive explicit-implicit tau-leaping
def: "Modification of the original tau-selection strategy [KISAO:0000040], designed for explicit tau-leaping, is modified to apply to implicit tau-leaping, allowing for longer steps when the system is stiff. Further, an adaptive strategy is proposed that identifies stiffness and automatically chooses between the explicit and the (new) implicit tau-selection methods to achieve better efficiency.\nCao Y, Gillespie DT, Petzold LR. Adaptive explicit-implicit tau-leaping method with automatic tau selection. The Journal of Chemical Physics, Vol. 126 (22) (2007)." [doi:10.1063/1.2745299]
is_a: KISAO:0000083 ! implicit tau-leaping method

[Term]
id: KISAO:0000051
name: Bortz-Kalos-Liebowitz method
def: "The Bortz-Kalos-Liebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.\nBortz AB, Kalos MH, Lebowitz JL. A new algorithm for Monte Carlo simulation of Ising spin systems. Journal of Computational Physics, Vol. 17 (1), pages 10-18 (1975)." [doi:10.1016/0021-9991(75)90060-1]
exact_synonym: "BKL" []
exact_synonym: "kinetic monte carlo" []
exact_synonym: "kinetic monte carlo method" []
exact_synonym: "n-fold way" []
narrow_synonym: "dynamic monte carlo method" []
is_a: KISAO:0000016 ! algorithm using discrete variables
is_a: KISAO:0000026 ! algorithm using non-spatial description
is_a: KISAO:0000036 ! algorithm using stochastic rules
is_a: KISAO:0000041 ! algorithm using adaptive timesteps

[Term]
id: KISAO:0000056
name: Smoluchowski equation based method
def: "Methods based on the Smoluchowski equation, as published in: Smoluchowski M. Mathematical theory of the kinetics of the coagulation of colloidal solutions. Z. Phys. Chem, Vol. 92, No. 129. (1917)." [dk:29OCT2007]
is_a: KISAO:0000036 ! algorithm using stochastic rules

[Term]
id: KISAO:0000057
name: brownian diffusion Smoluchovski method
def: "In the Brownian diffusion Smoluchowski method,  \"each molecule is treated as a point-like particle that diffuses freely in three-dimensional space. When a pair of reactive molecules collide, such as an enzyme and its substrate, a reaction occurs and the simulated reactants are replaced by products. [..] Analytic solutions are presented for some simulation parameters while others are calculated using look-up tables.\" Supported chemical processes include molecular diffusion, treatment of surfaces, zeroth-order-, unimolecular-, and bimolecular reactions.\nAndrews SS, Bray D. Stochastic simulation of chemical reactions with spatial resolution and single molecule detail. Phys Biol, volume 1 (3-4), pages 137-151 (December 2004)." [PMID:16204833]
comment: Used for instance in Smoldyn.
is_a: KISAO:0000016 ! algorithm using discrete variables
is_a: KISAO:0000023 ! algorithm using spatial description
is_a: KISAO:0000037 ! algorithm using fixed timesteps
is_a: KISAO:0000056 ! Smoluchowski equation based method

[Term]
id: KISAO:0000058
name: Green's function reaction dynamics
def: "Method that simulates biochemical networks on particle level. It consideres both, changes in time and space by ''exploiting both the exact solution of the Smoluchowski Equation to set up an event-driven algorithm'' which allows for large jumps in time when the considered particles are far away from each other [in space] and thus cannot react. GFRD combines the propagation of particles in space with the reactions taking place between them in one simulation step.\nVan Zon JS, Ten Wolde PR. Green's-function reaction dynamics: A particle-based approach for simulating biochemical networks in time and space. Journal of Chemical Physics, Volume 123 (23) (2005)." [doi:10.1063/1.2137716]
exact_synonym: "GFRD" []
is_a: KISAO:0000016 ! algorithm using discrete variables
is_a: KISAO:0000023 ! algorithm using spatial description
is_a: KISAO:0000041 ! algorithm using adaptive timesteps
is_a: KISAO:0000056 ! Smoluchowski equation based method

[Term]
id: KISAO:0000064
name: Runge-Kutta based method
def: "Explicit or implicit method for the approximation of solutions for ordinary differential equations (ODEs). Runge-Kutta methods have been invented by Runge and Kutta in the 1900s.\nButcher JC. The Numerical Analysis of Ordinary Differential Equations: Runge-Kutta and General Linear Methods (1987)." [dk:12NOV2007]
related_synonym: "modified Euler method" []
is_a: KISAO:0000026 ! algorithm using non-spatial description
is_a: KISAO:0000035 ! algorithm using deterministic rules
is_a: KISAO:0000037 ! algorithm using fixed timesteps

[Term]
id: KISAO:0000068
name: deterministic cellular automata update algorithm
def: "A cellular automaton is a discrete model of a regular grid of cells with a finite number of dimensions. Each cell has a finite number of defined states. The automaton changes its state in a discrete manner, meaning that the state of a cell at time t is determined by a function of the states of its neighbors at time t - 1. These neighbors are a selection of cells relative to the specified cell. Famous examples for deterministic cellular automata are Conway's game of life or Wolfram's elementary cellular automata.\nBurks, Arthur W (Editor). Essays on Cellular Automata. University of Illinois Press (1970)." [dk:30OCT2007]
is_a: KISAO:0000016 ! algorithm using discrete variables
is_a: KISAO:0000023 ! algorithm using spatial description
is_a: KISAO:0000035 ! algorithm using deterministic rules
is_a: KISAO:0000037 ! algorithm using fixed timesteps

[Term]
id: KISAO:0000071
name: Livermore solver for ordinary differential equations
def: "''LSODE solves explicitly given ODE systems. [and] [..] is based on the GEAR and GEARB packages. It solves ODE systems given explicitly as dy/dt = f ( t , y )''.\nHindmarsh AC. LSODE and LSODI, two new initial value ordinary differential equation solvers. SIGNUM Newsletter, Volume 15 (4), pages 10-11 (1980).\nRadhakrishnan K, Hindmarsh AC. Description and Use of LSODE, the Livermore Solver for Ordinary Differential Equations. Lawrence Livermore National Laboratory Report, Vol. UCRL-ID-113855 (1993)." [dk:16NOV2007, doi:1218052.1218054]
exact_synonym: "LSODE" []
is_a: KISAO:0000094 ! Livermore solver

[Term]
id: KISAO:0000074
name: binomial tau-leap spatial stochastic simulation algorithm
def: "Coarse grained modified version of the next subvolume method [KISAO:0000022] that allows the user to consider both diffusion and reaction events in relatively long simulation time spans as compared with the original method and other commonly used fully stochastic computational methods.\nTatiana , Burrage K. Binomial tau-leap spatial stochastic simulation algorithm for applications in chemical kinetics. The Journal of Chemical Physics, Vol. 127 (10) (2007)." [dk:16OCT2007]
is_a: KISAO:0000002 ! non-spatial tau-leaping method
is_a: KISAO:0000023 ! algorithm using spatial description
is_a: KISAO:0000039 ! tau-leaping method

[Term]
id: KISAO:0000075
name: particle-based spatial stochastic method
def: "Combination of the multiparticle method for diffusion (Chopard et al. , 1994) and the kinetic Monte Carlo Method [KISAO:0000029].\nRodriguez VJ, Kaandorp JA, Dobrzynski M, Blom JG. Spatial stochastic modelling of the phosphoenolpyruvate-dependent phosphotransferase (PTS) pathway in Escherichia coli. Bioinformatics, Vol. 22 (15), pages 1895-1901 (2006)." [pubmed:16731694]
exact_synonym: "GMP" []
is_a: KISAO:0000023 ! algorithm using spatial description
is_a: KISAO:0000025 ! Gillespie-like stochastic simulation method

[Term]
id: KISAO:0000076
name: Stundzia and Lumsden method
def: "Sub-volume stochastic reaction-diffusion method that using Green's function to link the bulk diffusion coefficient D in Fick's differential law to the corresponding transition rate probability for diffusion of a particle between finite volume elements. This generalized stochastic algorithm enables to numerically calculate the time evolution of a spatially inhomogeneous mixture of reaction-diffusion species in a finite volume. The time step is stochastic and is generated by a probability distribution determined by the intrinsic reaction kinetics and diffusion dynamics.\nStundzia AB, Lumsden CJ. Stochastic simulation of coupled reaction-diffusion processes. J Comput Phys, Vol. 127 (1), pages 196-207 (1996)." [doi:10.1006/jcph.1996.0168]
exact_synonym: "reaction-diffusion stochastic simulation algorithm" []
is_a: KISAO:0000095 ! sub-volume stochastic reaction-diffusion algorithm

[Term]
id: KISAO:0000079
name: explicit tau-leaping method
is_a: KISAO:0000039 ! tau-leaping method

[Term]
id: KISAO:0000081
name: explicit tau-leaping method with estimated-mid point technique
def: "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section VI." [doi:10.1063/1.1378322]
is_a: KISAO:0000016 ! algorithm using discrete variables
is_a: KISAO:0000079 ! explicit tau-leaping method

[Term]
id: KISAO:0000082
name: k-alpha leaping method
def: "Alternative to the tau-leaping [KISAO:0000039], where one leaps a fixed number of reaction-events.\nGillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section VIII." [doi:10.1063/1.1378322]
is_a: KISAO:0000001 ! Gillespie-like approximate simulation method
is_a: KISAO:0000016 ! algorithm using discrete variables

[Term]
id: KISAO:0000083
name: implicit tau-leaping method
is_a: KISAO:0000002 ! non-spatial tau-leaping method
is_a: KISAO:0000039 ! tau-leaping method

[Term]
id: KISAO:0000084
name: modified poisson tau-leaping
def: "''The explicit tau-leaping procedure attempts to speed up the stochastic simulation of a chemically reacting system by approximating the number of firings of each reaction channel during a chosen time increment Tau as a Poisson random variable. Since the Poisson random variable can have arbitrarily large sample values, there is always the possibility that this procedure will cause one or more reaction channels to fire so many times during Tau that the population of some reactant species will be driven negative. Two recent papers have shown how that unacceptable occurrence can be avoided by replacing the Poisson random variables with binomial random variables, whose values are naturally bounded. This paper describes a modified Poisson tau-leaping procedure that also avoids negative populations, but is easier to implement than the binomial procedure. The new Poisson procedure also introduces a second control parameter, whose value essentially dials the procedure from the original Poisson tau-leaping at one extreme to the exact stochastic simulation algorithm at the other; therefore, the modified Poisson procedure will generally be more accurate than the original Poisson procedure''.\nCao Y, Gillespie DT, Petzold LR. Avoiding negative populations in explicit Poisson tau-leaping. Journal of Chemical Physics, Vol. 123, 4104 (2005)." [doi:10.1063/1.1992473]
is_a: KISAO:0000079 ! explicit tau-leaping method

[Term]
id: KISAO:0000086
name: Runge-Kutta-Fehlberg based method
def: "Takahashi K, Kaizu K, Hu B, Tomita M. A multi-algorithm, multi-timescale method for cell simulation. Bioinformatics volume 20(4), pages 538-46 (2004)." [pub:14990450]
comment: As used in E-Cell.
exact_synonym: "Fehlberg method" []
exact_synonym: "RKF45" []
is_a: KISAO:0000064 ! Runge-Kutta based method

[Term]
id: KISAO:0000087
name: Dormand-Prince 5(4) based method
def: "Dormand-Prince is an explicit method for the numerical integration of ODES with a given initial value.\nTakahashi K, Kaizu K, Hu B, Tomita M. A multi-algorithm, multi-timescale method for cell simulation. Bioinformatics volume 20(4), pages 538-46 (2004).\nDormand J, Prince P. A family of embedded Runge-Kutta formulae. Journal of Computational and Applied Mathematics, Volume 6, pages 19-26 (1980)." [dk:12NOV2007, PMID:14990450]
comment: As used, for example, in Matlab or in ECell3.
exact_synonym: "DP45" []
is_a: KISAO:0000064 ! Runge-Kutta based method

[Term]
id: KISAO:0000088
name: Livermore solver for ordinary differential equations with automatic method switching
def: "Petzold LR. Automatic Selection of Methods for Solving Stiff and Nonstiff Systems of Ordinary Differential Equations. SIAM Journal on Scientific and Statistical Computing, Vol. 4 (1), pages 136-148 (1983).\n-\nPetzold LR, Hindmarsh, AC. LSODAR: Livermore solver of ordinary differential equations with automatic method switching and root finding, Computing and Mathematics Research Division, 1-316 Lawerence Livermore National Laboratory (1987)." [dk:30OCT2007, doi:10.1137/0904010]
comment: ''LSODA was written by Linda R Petzold and Alan C Hindmarsh. It solves systems dy/dt = f with a dense or banded Jacobian when the problem is stiff, but it automatically selects between non-stiff (Adams) and stiff (BDF) methods. It uses the non-stiff method initially, and dynamically monitors data in order to decide which method to use'' [COPASI Userguide].
exact_synonym: "LSODA" []
is_a: KISAO:0000094 ! Livermore solver

[Term]
id: KISAO:0000089
name: Ordinary Differential Equation Solver for Stiff or Non-Stiff Systems with rootfinding
def: "LSODAR, written jointly with L. R. Petzold, is a variant of LSODA with a rootfinding capability added. Thus it solves problems dy/dt = f with dense or banded Jacobian and automatic method selection, and at the same time, it finds the roots of any of a set of given functions of the form g(t,y). This is often useful for finding stop conditions, or for finding points at which a switch is to be made in the function f. The LSODAR source is commented extensively to facilitate modification. Both a single-precision version and a double-precision version are available. [http://www.nea.fr/abs/html/uscd1228.html].\nPetzold LR, Hindmarsh, AC. LSODAR: Livermore solver of ordinary differential equations with automatic method switching and root finding, Computing and Mathematics Research Division, 1-316 Lawerence Livermore National Laboratory (1987)." [dk:27OCT2007]
exact_synonym: "LSODAR" []
is_a: KISAO:0000094 ! Livermore solver

[Term]
id: KISAO:0000090
name: Livermore solver for ordinary differential equations, implicit version
def: "LSODI solves systems given in linearly implicit form, including differential-algebraic systems.\nHindmarsh AC. LSODE and LSODI, two new initial value ordinary differnetial equation solvers. SIGNUM Newsletter, Volume 15 (4), pages 10-11 (1980)." [doi:1218052.1218054]
exact_synonym: "LSODI" []
is_a: KISAO:0000094 ! Livermore solver

[Term]
id: KISAO:0000091
name: Livermore solver for ordinary differential equations, implicit sparse version
def: "LSODIS is a set of general-purpose FORTRAN routines solver for the initial value problem for ordinary differential equation systems. It is suitable for both stiff and nonstiff systems. LSODIS treat systems in the linearly implicit form A(t,y) dy/dt = g(t,y), A = a square matrix, i.e. with the derivative dy/dt implicit, but linearly so. [http://www.nea.fr/abs/html/uscd1225.html].\nSeager M, Balsdon S. LSODIS - A sparse implicit ODE solver. 10th World Congress on System Simulation and Scientific Computation, pages 437-439 (1983)." [dk:30OCT2007]
related_synonym: "LSODIS" []
is_a: KISAO:0000094 ! Livermore solver

[Term]
id: KISAO:0000093
name: Livermore solver for ordinary differential equations for stiff and nonstiff systems with krylov corrector iteration
def: "LSODPK, written jointly with Peter N Brown, is a set of FORTRAN subroutines for solving the initial value problem for stiff and nonstiff systems of ordinary differential equations. In solving stiff systems, LSODPK uses a corrector iteration composed of Newton iteration and one of four preconditoned Krylov subspace iteration methods. The user must select the desired Krylov method and supply a pair of routine to evaluate, preprocess, and solve the (left and/or right) preconditioner matrices. Aside from preconditioning, the implementation is matrix-free, meaning that explicit storage of the Jacobian (or related) matrix is not required. The method is experimental because the scope of problems for which it is effective is not well-known, and users are forewarned that LSODPK may or may not be competitive with traditional methods on a given problem. LSODPK also includes an option for a user-supplied linear system solver to be used without Krylov iteration [http://www.nea.fr/abs/html/uscd1231.html]." [NLN:08072008]
exact_synonym: "LSODPK" []
is_a: KISAO:0000094 ! Livermore solver

[Term]
id: KISAO:0000094
name: Livermore solver
def: "Method to solve ordinary differential equations developed at the Lawrence Livermore National Laboratory." [NLN:08072008]
is_a: KISAO:0000018 ! algorithm using continuous variables
is_a: KISAO:0000026 ! algorithm using non-spatial description
is_a: KISAO:0000035 ! algorithm using deterministic rules
is_a: KISAO:0000041 ! algorithm using adaptive timesteps

[Term]
id: KISAO:0000095
name: sub-volume stochastic reaction-diffusion algorithm
def: "Stochastic method using a combination of discretisation of compartment volumes into voxels and Gillespie-like algorithm to simulate the evolution of the system." [NLN:08072008]
is_a: KISAO:0000023 ! algorithm using spatial description
is_a: KISAO:0000025 ! Gillespie-like stochastic simulation method

[Term]
id: KISAO:0000096
name: Gillespie-like exact stochastic simulation method
def: "Gillespie-like algorithm that produces exact realisation of the vector of entity amounts at each time by choosing rigorously time and reaction at each iteration." [NLN:14JUL2008]
is_a: KISAO:0000025 ! Gillespie-like stochastic simulation method
is_a: KISAO:0000042 ! Non-spatial Gillespie-like methods

