Prefix(ont:=<http://www.co-ode.org/ontologies/ont.owl#>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(protege:=<http://protege.stanford.edu/plugins/owl/protege#>)
Prefix(:=<http://www.w3.org/2002/07/owl#>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(kisao:=<http://www.biomodels.net/kisao/KISAO#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(dc:=<http://purl.org/dc/terms/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/TR/skos-reference/skos.html#>)


Ontology(<http://www.biomodels.net/kisao/KISAO#>
Annotation(skos:definition "The Kinetic Simulation Algorithm Ontology (KiSAO) classifies algorithms available for the simulation of models in biology, and their characteristics and the parameters required for their use."@en)
Annotation(rdfs:label "Kinetic Simulation Algorithm Ontology (KiSAO)"@en)
Annotation(rdfs:seeAlso "http://www.biomodels.net/kisao/"^^xsd:anyURI)
Annotation(rdfs:comment "This is a core version which contains all but deprecated classes."@en)
Annotation(owl:versionInfo "2.2")
Annotation(protege:defaultLanguage "en")
Annotation(dc:rights "Artistic License 2.0")

Declaration(Class(kisao:KISAO_0000000))
AnnotationAssertion(rdfs:label kisao:KISAO_0000000 "kinetic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000000 "Algorithm used to instantiate a simulation from a mathematical model, where the variable values evolve over time."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000000 "dk"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000000 "true"^^xsd:boolean)
AnnotationAssertion(dc:created kisao:KISAO_0000000 "2008-05-26"^^xsd:date)
Declaration(Class(kisao:KISAO_0000003))
AnnotationAssertion(dc:created kisao:KISAO_0000003 "24JAN2009"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000003 "weighted SSA"@en)
AnnotationAssertion(Annotation(rdfs:comment "Kuwahara H, Mura I. (2008) An efficient and exact stochastic simulation method to analyse rare events in biochemical systems. J Chem Phys. 129(16):165101."@en) rdfs:seeAlso kisao:KISAO_0000003 "urn:miriam:pubmed:19045316"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000003 "weighted stochastic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000003 "The weighted Stochastic Simulation Algorithm manipulates the probabilities measure of biochemical systems by sampling, in order to increase the fraction of simulation runs exhibiting rare events."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000003 "NLN"@en)
SubClassOf(kisao:KISAO_0000003 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000003 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000003 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
Declaration(Class(kisao:KISAO_0000015))
AnnotationAssertion(dc:creator kisao:KISAO_0000015 "NLN"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. A General Method for Numerically Simulating the Stochastic Time Evolution of Coupled Chemical Reactions. Journal of Computational Physics, Volume 2 , pages 403-434 (1976)."@en) rdfs:seeAlso kisao:KISAO_0000015 "urn:miriam:doi:10.1016/0021-9991(76)90041-3"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000015 "Gillespie's first reaction method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000015 "Cain"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000015 "2007-11-09"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000015 "Gillespie first reaction algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000015 "Stochastic simulation algorithm using the next-reaction density function, giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm calculates a tentative reaction time for each reaction and then select the smallest."@en)
SubClassOf(kisao:KISAO_0000015 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000015 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000015 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
Declaration(Class(kisao:KISAO_0000017))
AnnotationAssertion(rdfs:label kisao:KISAO_0000017 "multi-state agent-based simulation method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000017 "The agent-based simulation method instantiates each molecule as an individual software object. The interactions between those objects are determined by interaction probabilities according to experimental data. The probability is depended on the state the molecule is in at that specific time (molecules have multiple-state). Additionally, ''pseudo-molecules'' are introduced to the system in order to simulate unimolecular reactions. For simulation, continuous time is broken down into discrete, independent ''slices''. During each time slice one molecule is selected randomly, a second molecule or pseudo-molecule is selected afterwards (leading to either a unimolecular or a bimolecular reaction). The reaction will only take place if a produced random number exceeds the reaction probability calculated beforehand. In that case, the system is updated after that reaction."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000017 "Morton-Firth"@en)
AnnotationAssertion(Annotation(rdfs:comment "Morton-Firth, C.J, Bray, D. Predicting temporal fluctuations in an intracellular signalling pathway. Journal of Theoretical Biology, volume 192, pages 117-128 (1998)."@en) rdfs:seeAlso kisao:KISAO_0000017 "urn:miriam:pubmed:9628844"^^xsd:anyURI)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000017 "StochSim"@en)
SubClassOf(kisao:KISAO_0000017 kisao:KISAO_0000363)
SubClassOf(kisao:KISAO_0000017 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000017 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000017 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
Declaration(Class(kisao:KISAO_0000019))
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000019 "BioNetGen"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000019 "urn:miriam:doi:10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Cohen S, Hindmarsh C. Cvode, A Stiff/nonstiff Ode Solver In C. Computers in Physics, Vol. 10 (2), pages 138-143 (1996)."@en) rdfs:seeAlso kisao:KISAO_0000019 "citeulike:1832863"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000019 "code value ordinary differential equation solver"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000019 "code value ordinary differential equation solver"^^xsd:string)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000019 "SBML-SAT"@en)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000019 "VODEPK"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000019 "2007-11-30"^^xsd:date)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000019 "VCell"@en)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000019 "VODE"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000019 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000019 "CVODE"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000019 "JSim"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000019 "The CVODE is a package written in C that solves initial value problems for ODEs. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [urn:miriam:biomodels.kisao:KISAO_0000280] method and the backward differentiation formula [urn:miriam:biomodels.kisao:KISAO_0000288]."@en)
SubClassOf(kisao:KISAO_0000019 kisao:KISAO_0000284)
SubClassOf(kisao:KISAO_0000019 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000019 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000020))
SubClassOf(kisao:KISAO_0000019 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000280))
SubClassOf(kisao:KISAO_0000019 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288))
DisjointClasses(kisao:KISAO_0000019 kisao:KISAO_0000355)
Declaration(Class(kisao:KISAO_0000020))
AnnotationAssertion(Annotation(rdfs:comment "Byrne GD, Hindmarsh AC. PVODE, an ODE Solver for Parallel Computers. International Journal of High Performance Computing Applications, Vol. 13 (4), pages 354-365 (1999)."@en) rdfs:seeAlso kisao:KISAO_0000020 "urn:miriam:doi:10.1177/109434209901300405"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000020 "PVODE is a general-purpose solver for ordinary differential equation (ODE) systems that implements methods for both stiff and nonstiff systems. [...] In the stiff case, PVODE uses a backward differentiation formula method [urn:miriam:biomodels.kisao:KISAO_0000288] combined with preconditioned GMRES [urn:miriam:biomodels.kisao:KISAO_0000253] iteration. Parallelism is achieved by distributing the ODE solution vector into user-specified segments and parallelizing a set of vector kernels accordingly. For PDE-based ODE systems, we provide a module that generates a band block-diagonal preconditioner for use with the GMRES [urn:miriam:biomodels.kisao:KISAO_0000253] iteration. PVODE is based on CVODE [urn:miriam:biomodels.kisao:KISAO_0000019]."@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000020 "urn:miriam:doi:10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000020 "parallel code value ordinary differential equation solver"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000020 "PVODE"@en)
SubClassOf(kisao:KISAO_0000020 kisao:KISAO_0000284)
SubClassOf(kisao:KISAO_0000020 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000020 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000019))
SubClassOf(kisao:KISAO_0000020 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288))
SubClassOf(kisao:KISAO_0000020 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000353))
DisjointClasses(kisao:KISAO_0000020 kisao:KISAO_0000283)
DisjointClasses(kisao:KISAO_0000020 kisao:KISAO_0000356)
Declaration(Class(kisao:KISAO_0000021))
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000021 "Stochsim 1.2 and more recent versions"@en)
AnnotationAssertion(Annotation(rdfs:comment "Le Novere N, Shimizu TS. STOCHSIM: modelling of stochastic biomolecular processes. Bioinformatics, volume 17 (6), pages 575-576 (2001)."@en) rdfs:seeAlso kisao:KISAO_0000021 "urn:miriam:pubmed:11395441"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000021 "StochSim nearest-neighbour algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000021 "The nearest-neighbour algorithm allows for the representation of spatial information, by adding a two-dimensional lattice in the form of a probabilistic cellular automata. That way, nearest neighbour interactions do additionally influence reactions taking place in the systems. Reactions between entities are calculated using the agent-based simulation algorithm [urn:miriam:biomodels.kisao:KISAO_0000017]."@en)
SubClassOf(kisao:KISAO_0000021 kisao:KISAO_0000363)
SubClassOf(kisao:KISAO_0000021 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000021 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000021 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000264))
SubClassOf(kisao:KISAO_0000021 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000017))
Declaration(Class(kisao:KISAO_0000022))
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000022 "SmartCell"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000022 "Elf and Ehrenberg method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000022 "next-subvolume method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000022 "Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [urn:miriam:biomodels.kisao:KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [urn:miriam:biomodels.kisao:KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s)."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000022 "Elf algorithm"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000022 "MesoRD"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000022 "NSM"@en)
AnnotationAssertion(Annotation(rdfs:comment "Elf J, Ehrenberg M. Spontaneous separation of bi-stable biochemical systems into spatial domains of opposite phases. Systems Biology, IEE Proceedings, volume 1 (2), pages 230-236 (2004)."@en) rdfs:seeAlso kisao:KISAO_0000022 "urn:miriam:doi:10.1049/sb:20045021"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000022 kisao:KISAO_0000095)
SubClassOf(kisao:KISAO_0000022 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000027))
SubClassOf(kisao:KISAO_0000022 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000029))
DisjointClasses(kisao:KISAO_0000022 kisao:KISAO_0000076)
Declaration(Class(kisao:KISAO_0000027))
AnnotationAssertion(dc:created kisao:KISAO_0000027 "2007-11-10"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "Gibson-Bruck's next reaction algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "Gillespie-Gibson stochastic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000027 "As with the first reaction method [urn:miriam:biomodels.kisao:KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "next reaction method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "SSA-GB"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000027 "VCell"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000027 "SmartCell"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gibson MA, Bruck J. Efficient Exact Stochastic Simulation of Chemical Systems with Many Species and Many Channels. Journal of Physical Chemistry A, Vol. 104, pages 1876-1889 (2000)."@en) rdfs:seeAlso kisao:KISAO_0000027 "urn:miriam:doi:10.1021/jp993732q"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000027 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000027 "Cain"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "Gibson and Bruck algorithm"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000027 "E-Cell"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000027 "Gibson-Bruck next reaction algorithm"@en)
SubClassOf(kisao:KISAO_0000027 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000027 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000027 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000027 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000015))
Declaration(Class(kisao:KISAO_0000028))
AnnotationAssertion(rdfs:label kisao:KISAO_0000028 "slow-scale stochastic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000028 "Attempt to overcome the problem of stiff systems by developing an ''approximate theory that allows one to stochastically advance the system in time by simulating the firings of only the slow reaction events''."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000028 "ssSSA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000028 "slow-scale stochastic SSA"@en)
AnnotationAssertion(Annotation(rdfs:comment "Cao Y, Gillespie DT, Petzold LR. The slow-scale stochastic simulation algorithm. Journal of Chemical Physics, Vol. 122, No. 1. (1 January 2005)."@en) rdfs:seeAlso kisao:KISAO_0000028 "urn:miriam:pubmed:15638651"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000028 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000028 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000028 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
Declaration(Class(kisao:KISAO_0000029))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "SSA"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000029 "2007-11-10"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "stochastic simulation algorithm"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000029 "ByoDyn"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "Gillespie's direct method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000029 "Cain"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "DM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "Doob-Gillespie method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000029 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000029 "BioNetGen"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000029 "BetaWB"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000029 "Gillespie direct algorithm"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000029 "iBioSim"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Exact stochastic simulation of coupled chemical reactions. Journal of Physical Chemistry, Vol. 81, No. 25. (1977), pp. 2340-2361."@en) rdfs:seeAlso kisao:KISAO_0000029 "urn:miriam:doi:10.1021/j100540a008"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000029 "Stochastic simulation algorithm using the next-reaction density function, giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculate the identity of the reaction and the time it will fire."@en)
SubClassOf(kisao:KISAO_0000029 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000029 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000029 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000029 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000051))
Declaration(Class(kisao:KISAO_0000030))
AnnotationAssertion(rdfs:label kisao:KISAO_0000030 "Euler forward method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000030 "2007-11-10"^^xsd:date)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000030 "iBioSim"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000030 "VCell"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000030 "explicit Gaussian first order Runge-Kutta"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000030 "explicit Euler method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes. Cambridge University Press, New York, 2nd edition (1992)."@en) rdfs:seeAlso kisao:KISAO_0000030 "urn:miriam:isbn:052143064X"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000030 "The Euler method is an explicit one-step method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000030 "dk"@en)
SubClassOf(kisao:KISAO_0000030 kisao:KISAO_0000261)
SubClassOf(kisao:KISAO_0000030 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
DisjointClasses(kisao:KISAO_0000030 kisao:KISAO_0000031)
Declaration(Class(kisao:KISAO_0000031))
AnnotationAssertion(dc:creator kisao:KISAO_0000031 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000031 "GSL"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000031 "The Euler backward method is an implicit one-step method for the numerical integration of ODES with a given initial value. The next state of a system is calculated by solving an equation that considers both, the current state of the system and the later one."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000031 "implicit Gaussian first order Runge-Kutta"@en)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes in Fortran 77. Cambridge University Press (2001)."@en) rdfs:seeAlso kisao:KISAO_0000031 "urn:miriam:isbn:052143064X"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000031 "implicit Euler method"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000031 "Euler backward method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000031 "2007-11-02"^^xsd:date)
SubClassOf(kisao:KISAO_0000031 kisao:KISAO_0000261)
SubClassOf(kisao:KISAO_0000031 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
DisjointClasses(kisao:KISAO_0000031 kisao:KISAO_0000030)
Declaration(Class(kisao:KISAO_0000032))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000032 "ERK4"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000032 "RK4"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000032 "GSL"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000032 "The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval)."@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000032 "VCell"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000032 "JSim"@en)
AnnotationAssertion(Annotation(rdfs:comment "Butcher JC. The Numerical Analysis of Ordinary Differential Equations: Runge-Kutta and General Linear Methods (1987). "@en) rdfs:seeAlso kisao:KISAO_0000032 "urn:miriam:isbn:0-471-91046-5 "^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000032 "explicit fourth-order Runge-Kutta method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000032 "2007-11-12"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000032 "Runge-Kutta method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000032 "dk"@en)
SubClassOf(kisao:KISAO_0000032 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000032 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000032 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000032 DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer))
Declaration(Class(kisao:KISAO_0000033))
AnnotationAssertion(Annotation(rdfs:comment "Rosenbrock HH. Some general implicit processes for the numerical solution of differential equations. The Computer Journal, pages 329-330 (1963)."@en) rdfs:seeAlso kisao:KISAO_0000033 "urn:miriam:doi:10.1093/comjnl/5.4.329"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000033 "Rosenbrock method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000033 "E-Cell"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000033 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes. Cambridge University Press, New York, 2nd edition, pages 742-746 (1992)."@en) rdfs:seeAlso kisao:KISAO_0000033 "urn:miriam:isbn:052143064X"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000033 "2007-11-12"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000033 "Some general implicit processes are given for the solution of simultaneous first-order differential equations. These processes, which use successive substitution, are implicit analogues of the (explicit) Runge-Kutta processes. They require the solution in each time step of one or more set of simultaneous linear equations, usually of a special and simple form. Processes of any required order can be devised, and they can be made to have a wide margin of stability when applied to a linear problem."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000033 "generalized fourth order Runge-Kutta method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000033 "Kaps-Rentrop method"@en)
SubClassOf(kisao:KISAO_0000033 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000033 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000033 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000038))
AnnotationAssertion(skos:definition kisao:KISAO_0000038 "In order to overcome the problem of high complexity of the Stochastic Simulation Algorithm [urn:miriam:biomodels.kisao:KISAO_0000029] when simulating large systems, the sorting direct method maintains a loosely sorted order of the reactions as the simulation executes."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000038 "sorting SSA"@en)
AnnotationAssertion(Annotation(rdfs:comment "McCollum J M, Peterson G D, Cox C D, Simpson M L, Samatova N F. The sorting direct method for stochastic simulation of biochemical systems with varying reaction execution behaviour. Computational Biology and Chemistry, Volume 30 (1), pages 39-49 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000038 "urn:miriam:doi:10.1016/j.compbiolchem.2005.10.007"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000038 "sorting direct method"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000038 "sorting stochastic simulation algorithm"@en)
SubClassOf(kisao:KISAO_0000038 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000038 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000038 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
Declaration(Class(kisao:KISAO_0000039))
AnnotationAssertion(skos:definition kisao:KISAO_0000039 "Approximate acceleration procedure of the Stochastic Simulation Algorithm [urn:miriam:biomodels.kisao:KISAO_0000029] that divides the time into subintervals and ''leaps'' from one to another, firing all the reaction events in each subinterval."@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000039 "Cain"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000039 "NLN"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000039 "ByoDyn"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000039 "2008-07-08"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section V."@en) rdfs:seeAlso kisao:KISAO_0000039 "urn:miriam:doi:10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000039 "tauL"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000039 "SmartCell"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000039 "tau-leaping method"@en)
SubClassOf(kisao:KISAO_0000039 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000039 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000039 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000228))
Declaration(Class(kisao:KISAO_0000040))
AnnotationAssertion(skos:altLabel kisao:KISAO_0000040 "explicit tau-leaping method with basic pre-leap check"^^xsd:string)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section V."@en) rdfs:seeAlso kisao:KISAO_0000040 "urn:miriam:doi:10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000040 "ByoDyn"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000040 "explicit tau-leaping"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000040 "Poisson tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000040 "explicit tau-leaping method with basic preleap check"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000040 "Explicit tau-leaping method with basic pre leap check."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000040 "poisson tau-leaping"@en)
SubClassOf(kisao:KISAO_0000040 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000040 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
Declaration(Class(kisao:KISAO_0000045))
AnnotationAssertion(skos:definition kisao:KISAO_0000045 "Contrary to the explicit tau-leaping [urn:miriam:biomodels.kisao:KISAO_0000039 and urn:miriam:biomodels.kisao:KISAO_0000245 some urn:miriam:biomodels.kisao:KISAO_0000239] , the implicit tau-leaping allows for much larger time-steps when simulating stiff systems."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000045 "2007-10-12"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000045 "implicit tau-leaping method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000045 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "Rathinam M, Petzold L R, Cao Y, Gillespie D T. Stiffness in stochastic chemically reacting systems: The implicit tau-leaping method. The Journal of Chemical Physics, Volume 119 (24), pages 12784-12794 (2003)."@en) rdfs:seeAlso kisao:KISAO_0000045 "urn:miriam:doi:10.1063/1.1627296"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000045 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000045 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000045 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000045 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000248))
Declaration(Class(kisao:KISAO_0000046))
AnnotationAssertion(Annotation(rdfs:comment "Cao Y, Petzold L. Trapezoidal tau-leaping formula for the stochastic simulation of biochemical systems. Foundations of Systems Biology in Engineering (FOSBE), pages 149-152 (2005)."@en) rdfs:seeAlso kisao:KISAO_0000046 "citeulike:1755561"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000046 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000046 "trapezoidal tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000046 "trapezoidal implicit tau-leaping method"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000046 "trapezoidal implicit tau-leaping method"^^xsd:string)
AnnotationAssertion(dc:created kisao:KISAO_0000046 "2007-10-16"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000046 "Formula for accelerated discrete efficient stochastic simulation of chemically reacting system [which] has better accuracy and stiff stability properties than the explicit and implicit [urn:miriam:biomodels.kisao:KISAO_0000045] tau-leaping formulas for discrete stochastic systems, and it limits to the trapezoidal rule in the deterministic regime."@en)
SubClassOf(kisao:KISAO_0000046 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000046 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000046 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000048))
AnnotationAssertion(rdfs:label kisao:KISAO_0000048 "adaptive explicit-implicit tau-leaping method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000048 "Modification of the original tau-selection strategy [urn:miriam:biomodels.kisao:KISAO_0000040], designed for explicit tau-leaping, is modified to apply to implicit tau-leaping, allowing for longer steps when the system is stiff. Further, an adaptive strategy is proposed that identifies stiffness and automatically chooses between the explicit and the (new) implicit tau-selection methods to achieve better efficiency."@en)
AnnotationAssertion(Annotation(rdfs:comment "Cao Y, Gillespie DT, Petzold LR. Adaptive explicit-implicit tau-leaping method with automatic tau selection. The Journal of Chemical Physics, Vol. 126 (22) (2007)."@en) rdfs:seeAlso kisao:KISAO_0000048 "urn:miriam:doi:10.1063/1.2745299"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000048 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000048 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000048 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000048 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000051))
AnnotationAssertion(rdfs:label kisao:KISAO_0000051 "Bortz-Kalos-Lebowitz algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "dynamic Monte Carlo"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000051 "The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "kinetic Monte Carlo method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "n-fold way"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "DMC"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "KMC"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "dynamic Monte Carlo method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "kinetic Monte Carlo"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bortz AB, Kalos MH, Lebowitz JL. A new algorithm for Monte Carlo simulation of Ising spin systems. Journal of Computational Physics, Vol. 17 (1), pages 10-18 (1975)."@en) rdfs:seeAlso kisao:KISAO_0000051 "urn:miriam:doi:10.1016/0021-9991(75)90060-1"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "BKL"@en)
SubClassOf(kisao:KISAO_0000051 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000051 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000051 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000029))
Declaration(Class(kisao:KISAO_0000056))
AnnotationAssertion(skos:definition kisao:KISAO_0000056 "Method based on the Smoluchowski equation."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000056 "true"^^xsd:boolean)
AnnotationAssertion(Annotation(rdfs:comment "Smoluchowski M. Mathematical theory of the kinetics of the coagulation of colloidal solutions. Z. Phys. Chem, Vol. 92, No. 129. (1917)."@en) rdfs:seeAlso kisao:KISAO_0000056 "urn:issn:0942-9352"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000056 "Smoluchowski equation based method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000056 "2007-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000056 "dk"@en)
SubClassOf(kisao:KISAO_0000056 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000056 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
Declaration(Class(kisao:KISAO_0000057))
AnnotationAssertion(Annotation(rdfs:comment "Andrews SS, Bray D. Stochastic simulation of chemical reactions with spatial resolution and single molecule detail. Phys Biol, volume 1 (3-4), pages 137-151 (December 2004)."@en) rdfs:seeAlso kisao:KISAO_0000057 "urn:miriam:pubmed:16204833"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000057 "Brownian diffusion Smoluchowski method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000057 "Smoldyn"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000057 "In the Brownian diffusion Smoluchowski method, ''each molecule is treated as a point-like particle that diffuses freely in three-dimensional space. When a pair of reactive molecules collide, such as an enzyme and its substrate, a reaction occurs and the simulated reactants are replaced by products. [..] Analytic solutions are presented for some simulation parameters while others are calculated using look-up tables''. Supported chemical processes include molecular diffusion, treatment of surfaces, zeroth-order-, unimolecular-, and bimolecular reactions."@en)
SubClassOf(kisao:KISAO_0000057 kisao:KISAO_0000056)
SubClassOf(kisao:KISAO_0000057 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000057 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
SubClassOf(kisao:KISAO_0000057 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000057 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000254))
SubClassOf(kisao:KISAO_0000057 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000257))
SubClassOf(kisao:KISAO_0000057 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000258))
SubClassOf(kisao:KISAO_0000057 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000260))
DisjointClasses(kisao:KISAO_0000057 kisao:KISAO_0000058)
Declaration(Class(kisao:KISAO_0000058))
AnnotationAssertion(rdfs:label kisao:KISAO_0000058 "Greens function reaction dynamics"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000058 "GFRD"@en)
AnnotationAssertion(Annotation(rdfs:comment "Van Zon JS, Ten Wolde PR. Green's-function reaction dynamics: A particle-based approach for simulating biochemical networks in time and space. Journal of Chemical Physics, Volume 123 (23) (2005)."@en) rdfs:seeAlso kisao:KISAO_0000058 "urn:miriam:doi:10.1063/1.2137716"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000058 "Method that simulates biochemical networks on particle level. It considers both changes in time and space by ''exploiting both the exact solution of the Smoluchowski Equation to set up an event-driven algorithm'' which allows for large jumps in time when the considered particles are far away from each other [in space] and thus cannot react. GFRD combines the propagation of particles in space with the reactions taking place between them in one simulation step."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000058 "Green's function reaction dynamics"@en)
SubClassOf(kisao:KISAO_0000058 kisao:KISAO_0000056)
SubClassOf(kisao:KISAO_0000058 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000058 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
SubClassOf(kisao:KISAO_0000058 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000058 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
DisjointClasses(kisao:KISAO_0000058 kisao:KISAO_0000057)
Declaration(Class(kisao:KISAO_0000064))
AnnotationAssertion(rdfs:label kisao:KISAO_0000064 "Runge-Kutta based method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000064 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000064 "ByoDyn"@en)
AnnotationAssertion(Annotation(rdfs:comment "Butcher JC. The Numerical Analysis of Ordinary Differential Equations: Runge-Kutta and General Linear Methods (1987)."@en) rdfs:seeAlso kisao:KISAO_0000064 "urn:miriam:isbn:0-471-91046-5"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000064 "2007-11-12"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000064 "A method of numerically integrating ordinary differential equations, which uses a sampling of slopes through an interval and takes a weighted average to determine the right end point. This averaging gives a very accurate approximation."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000064 "true"^^xsd:boolean)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000064 "modified Euler method"@en)
SubClassOf(kisao:KISAO_0000064 kisao:KISAO_0000377)
SubClassOf(kisao:KISAO_0000064 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000064 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000064 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000064 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000261))
SubClassOf(kisao:KISAO_0000064 DataSomeValuesFrom(kisao:KISAO_0000275 xsd:integer))
Declaration(Class(kisao:KISAO_0000068))
AnnotationAssertion(Annotation(rdfs:comment "Burks, Arthur W (Editor). Essays on Cellular Automata. University of Illinois Press (1970)."@en) rdfs:seeAlso kisao:KISAO_0000068 "urn:miriam:isbn:978-0252000232"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000068 "dk"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000068 "2007-11-30"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000068 "A cellular automaton is a discrete model of a regular grid of cells with a finite number of dimensions. Each cell has a finite number of defined states. The automaton changes its state in a discrete manner, meaning that the state of a cell at time t is determined by a function of the states of its neighbours at time t - 1. These neighbours are a selection of cells relative to the specified cell. Famous examples for deterministic cellular automata are Conway's game of life or Wolfram's elementary cellular automata."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000068 "deterministic cellular automata update algorithm"@en)
SubClassOf(kisao:KISAO_0000068 kisao:KISAO_0000264)
SubClassOf(kisao:KISAO_0000068 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
Declaration(Class(kisao:KISAO_0000071))
AnnotationAssertion(dc:creator kisao:KISAO_0000071 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000071 "Livermore solver for ordinary differential equations"@en)
AnnotationAssertion(Annotation(rdfs:comment "Radhakrishnan K, Hindmarsh AC. Description and Use of LSODE, the Livermore Solver for Ordinary Differential Equations. Lawrence Livermore National Laboratory Report, Vol. UCRL-ID-113855 (1993)."@en) rdfs:seeAlso kisao:KISAO_0000071 "citeulike:1774586"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000071 "LSODE"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000071 "2007-11-16"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000071 "LSODE solves stiff and nonstiff systems of the form dy/dt = f.  In the stiff case, it treats the Jacobian matrix sf/dy as either a dense (full) or a banded matrix, and as either user-supplied or internally approximated by difference quotients. It uses Adams methods (predictor-corrector) [urn:miriam:biomodels.kisao:KISAO_0000364] in the nonstiff case, and Backward Differentiation Formula (BDF) methods (the Gear methods) [urn:miriam:biomodels.kisao:KISAO_0000288] in the stiff case."@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh AC. LSODE and LSODI, two new initial value ordinary differential equation solvers. SIGNUM Newsletter, Volume 15 (4), pages 10-11 (1980)."@en) rdfs:seeAlso kisao:KISAO_0000071 "urn:miriam:doi:10.1145/1218052.1218054"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000071 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000071 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000071 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288))
SubClassOf(kisao:KISAO_0000071 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000364))
Declaration(Class(kisao:KISAO_0000074))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000074 "BtauL"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000074 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "Marquez-Lago T., Burrage K. Binomial tau-leap spatial stochastic simulation algorithm for applications in chemical kinetics. The Journal of Chemical Physics, Vol. 127 (10) (2007)."@en) rdfs:seeAlso kisao:KISAO_0000074 "urn:miriam:doi:10.1063/1.2771548"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000074 "binomial tau-leaping method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000074 "Coarse grained modified version of the next subvolume method [urn:miriam:biomodels.kisao:KISAO_0000022] that allows the user to consider both diffusion and reaction events in relatively long simulation time spans as compared with the original method and other commonly used fully stochastic computational methods."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000074 "binomial tau-leap spatial stochastic simulation algorithm"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000074 "2007-10-16"^^xsd:date)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000074 "binomial tau-leap spatial stochastic simulation algorithm"^^xsd:string)
SubClassOf(kisao:KISAO_0000074 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000074 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000095))
SubClassOf(kisao:KISAO_0000074 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000253))
Declaration(Class(kisao:KISAO_0000075))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000075 "particle-based spatial stochastic method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000075 "Combination of the multiparticle method for diffusion [urn:miriam:biomodels.kisao:KISAO_0000334] and the SSA [urn:miriam:biomodels.kisao:KISAO_0000029]."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000075 "Gillespie's multi-particle method"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000075 "Gillespie multi-particle method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000075 "GMP"@en)
AnnotationAssertion(Annotation(rdfs:comment "Rodriguez VJ, Kaandorp JA, Dobrzynski M, Blom JG. Spatial stochastic modelling of the phosphoenolpyruvate-dependent phosphotransferase (PTS) pathway in Escherichia coli. Bioinformatics, Vol. 22 (15), pages 1895-1901 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000075 "urn:miriam:pubmed:16731694"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000075 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000075 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000075 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000029))
SubClassOf(kisao:KISAO_0000075 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000334))
Declaration(Class(kisao:KISAO_0000076))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000076 "reaction-diffusion stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000076 "RD SSA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000076 "Sub-volume stochastic reaction-diffusion method that using Green's function to link the bulk diffusion coefficient D in Fick's differential law to the corresponding transition rate probability for diffusion of a particle between finite volume elements. This generalized stochastic algorithm enables to numerically calculate the time evolution of a spatially inhomogeneous mixture of reaction-diffusion species in a finite volume. The time step is stochastic and is generated by a probability distribution determined by the intrinsic reaction kinetics and diffusion dynamics."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000076 "Stundzia and Lumsden method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Stundzia AB, Lumsden CJ. Stochastic simulation of coupled reaction-diffusion processes. J Comput Phys, Vol. 127 (1), pages 196-207 (1996)."@en) rdfs:seeAlso kisao:KISAO_0000076 "urn:miriam:doi:10.1006/jcph.1996.0168"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000076 kisao:KISAO_0000095)
DisjointClasses(kisao:KISAO_0000076 kisao:KISAO_0000022)
Declaration(Class(kisao:KISAO_0000081))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000081 "explicit tau-leaping method with estimated-mid point technique"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000081 "estimated midpoint tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section VI."@en) rdfs:seeAlso kisao:KISAO_0000081 "urn:miriam:doi:10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000081 "Estimated-Midpoint tau-Leap Method: For the selected leaping time tau which satisfies the Leap Condition, compute the expected state change lambda' = tau sumj( aj(x)vj ) during [t, t + tau). Then, with x' =x + [lambda'/2], generate for each j = 1,...,M a sample value kj of the Poisson random variable P(aj(x'), tau). Compute the actual state change, lambda = sumj( kjvj ), and effect the leap by replacing t by t + tau and x by x + lambda."@en)
SubClassOf(kisao:KISAO_0000081 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000081 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
Declaration(Class(kisao:KISAO_0000082))
AnnotationAssertion(rdfs:label kisao:KISAO_0000082 "k-alpha leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section VIII."@en) rdfs:seeAlso kisao:KISAO_0000082 "urn:miriam:doi:10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000082 "Alternative to the tau-leaping [urn:miriam:biomodels.kisao:KISAO_0000039], where one leaps a fixed number of reaction-events."@en)
SubClassOf(kisao:KISAO_0000082 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000082 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000082 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000039))
Declaration(Class(kisao:KISAO_0000084))
AnnotationAssertion(skos:definition kisao:KISAO_0000084 "The explicit tau-leaping procedure attempts to speed up the stochastic simulation of a chemically reacting system by approximating the number of firings of each reaction channel during a chosen time increment Tau as a Poisson random variable. Since the Poisson random variable can have arbitrarily large sample values, there is always the possibility that this procedure will cause one or more reaction channels to fire so many times during Tau that the population of some reactant species will be driven negative. Two recent papers have shown how that unacceptable occurrence can be avoided by replacing the Poisson random variables with binomial random variables, whose values are naturally bounded. This paper describes a modified Poisson tau-leaping procedure that also avoids negative populations, but is easier to implement than the binomial procedure. The new Poisson procedure also introduces a second control parameter, whose value essentially dials the procedure from the original Poisson tau-leaping at one extreme to the exact stochastic simulation algorithm at the other; therefore, the modified Poisson procedure will generally be more accurate than the original Poisson procedure [urn:miriam:biomodels.kisao:KISAO_0000040]."@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000084 "modified poisson tau-leaping"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000084 "nonnegative Poisson tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Cao Y, Gillespie DT, Petzold LR. Avoiding negative populations in explicit Poisson tau-leaping. Journal of Chemical Physics, Vol. 123, 4104 (2005)."@en) rdfs:seeAlso kisao:KISAO_0000084 "urn:miriam:doi:10.1063/1.1992473"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000084 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000084 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000084 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000040))
SubClassOf(kisao:KISAO_0000084 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000249))
Declaration(Class(kisao:KISAO_0000086))
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000086 "VCell"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000086 "iBioSim"@en)
AnnotationAssertion(Annotation(rdfs:comment "Erwin Fehlberg (1970). Klassische Runge-Kutta-Formeln vierter und niedrigerer Ordnung mit Schrittweiten-Kontrolle und ihre Anwendung auf Wärmeleitungsprobleme, Computing (Arch. Elektron. Rechnen), vol. 6, pp. 61–71."@de) rdfs:seeAlso kisao:KISAO_0000086 "urn:miriam:doi:10.1007/BF02241732
"^^xsd:anyURI)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000086 "JSim"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000086 "RKF45"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000086 "GSL"@en)
AnnotationAssertion(Annotation(rdfs:comment "Takahashi K, Kaizu K, Hu B, Tomita M. A multi-algorithm, multi-timescale method for cell simulation. Bioinformatics volume 20(4), pages 538-46 (2004)."@en) rdfs:seeAlso kisao:KISAO_0000086 "urn:miriam:pubmed:14990450"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000086 "Fehlberg method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000086 "E-Cell"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000086 "Runge-Kutta-Fehlberg method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000086 "The method was developed by the German mathematician Erwin Fehlberg and is based on the class of Runge-Kutta methods. The Runge-Kutta-Fehlberg method uses an O(h4) method together with an O(h5) method that uses all of the points of the O(h4) method, and hence is often referred to as an RKF45 method. Similar schemes with different orders have since been developed. By performing one extra calculation that would be required for an RK5 method, the error in the solution can be estimated and controlled and an appropriate step size can be determined automatically, making this method efficient for ordinary problems of automated numerical integration of ordinary differential equations."@en)
SubClassOf(kisao:KISAO_0000086 kisao:KISAO_0000302)
SubClassOf(kisao:KISAO_0000086 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer) kisao:KISAO_0000064)))
SubClassOf(kisao:KISAO_0000086 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(DataHasValue(kisao:KISAO_0000275 "5"^^xsd:integer) kisao:KISAO_0000064)))
Declaration(Class(kisao:KISAO_0000087))
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000087 "Matlab"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000087 "GSL"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000087 "ECell3"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000087 "2007-11-12"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000087 "Dormand-Prince method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000087 "Dormand-Prince is an explicit method for the numerical integration of ODES with a given initial value."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000087 "Prince-Dormand method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Dormand J, Prince P. A family of embedded Runge-Kutta formulae. Journal of Computational and Applied Mathematics, Volume 6, pages 19-26 (1980)."@en) rdfs:seeAlso kisao:KISAO_0000087 "urn:miriam:doi:10.1016/0771-050X(80)90013-3"^^xsd:anyURI)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000087 "iBioSim"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000087 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "Takahashi K, Kaizu K, Hu B, Tomita M. A multi-algorithm, multi-timescale method for cell simulation. Bioinformatics volume 20(4), pages 538-46 (2004)."@en) rdfs:seeAlso kisao:KISAO_0000087 "urn:miriam:pubmed:14990450"^^xsd:anyURI)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000087 "JSim"@en)
SubClassOf(kisao:KISAO_0000087 kisao:KISAO_0000302)
Declaration(Class(kisao:KISAO_0000088))
AnnotationAssertion(Annotation(rdfs:comment "Petzold LR. Automatic Selection of Methods for Solving Stiff and Nonstiff Systems of Ordinary Differential Equations. SIAM Journal on Scientific and Statistical Computing, Vol. 4 (1), pages 136-148 (1983)."@en) rdfs:seeAlso kisao:KISAO_0000088 "urn:miriam:doi:10.1137/0904010"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000088 "Livermore solver for ordinary differential equations with automatic method switching"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000088 "2007-11-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000088 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000088 "urn:miriam:isbn:978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Petzold LR, Hindmarsh, AC. LSODAR: Livermore solver of ordinary differential equations with automatic method switching and root finding, Computing and Mathematics Research Division, 1-316 Lawerence Livermore National Laboratory (1987)."@en) rdfs:seeAlso kisao:KISAO_0000088 "http://www.nea.fr/abs/html/uscd1227.html"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000088 "LSODA solves systems dy/dt = f with a dense or banded Jacobian when the problem is stiff, but it automatically selects between non-stiff (Adams [urn:miriam:biomodels.kisao:KISAO_0000289]) and stiff (BDF [urn:miriam:biomodels.kisao:KISAO_0000288]) methods. It uses the non-stiff method initially, and dynamically monitors data in order to decide which method to use."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000088 "LSODA"@en)
SubClassOf(kisao:KISAO_0000088 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000088 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
SubClassOf(kisao:KISAO_0000088 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288))
SubClassOf(kisao:KISAO_0000088 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000289))
SubClassOf(kisao:KISAO_0000088 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000209))
SubClassOf(kisao:KISAO_0000088 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000211))
SubClassOf(kisao:KISAO_0000088 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000219))
SubClassOf(kisao:KISAO_0000088 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000220))
Declaration(Class(kisao:KISAO_0000089))
AnnotationAssertion(Annotation(rdfs:comment "Petzold LR, Hindmarsh, AC. LSODAR: Livermore solver of ordinary differential equations with automatic method switching and root finding, Computing and Mathematics Research Division, 1-316 Lawerence Livermore National Laboratory (1987)."@en) rdfs:seeAlso kisao:KISAO_0000089 "http://www.nea.fr/abs/html/uscd1228.html"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000089 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000089 "ordinary differential equation solver for stiff or non-stiff systems with root finding"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000089 "2007-10-27"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000089 "LSODAR is a variant of LSODA [urn:miriam:biomodels.kisao:KISAO_0000088] with a root finding capability added. Thus it solves problems dy/dt = f with dense or banded Jacobian and automatic method selection, and at the same time, it finds the roots of any of a set of given functions of the form g(t,y). This is often useful for finding stop conditions, or for finding points at which a switch is to be made in the function f."@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000089 "urn:miriam:isbn:978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000089 "Livermore solver for ordinary differential equations with automatic method switching and root finding"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000089 "LSODAR"@en)
SubClassOf(kisao:KISAO_0000089 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000089 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000088))
Declaration(Class(kisao:KISAO_0000090))
AnnotationAssertion(rdfs:label kisao:KISAO_0000090 "LSODI"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000090 "LSODI solves systems given in linearly implicit form, including differential-algebraic systems."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000090 "Livermore solver for ordinary differential equations, implicit version"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh AC. LSODE and LSODI, two new initial value ordinary differential equation solvers. SIGNUM Newsletter, Volume 15 (4), pages 10-11 (1980)."@en) rdfs:seeAlso kisao:KISAO_0000090 "urn:miriam:doi:10.1145/1218052.1218054"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000090 "urn:miriam:isbn:978-0444866073"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000090 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000090 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000090 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
Declaration(Class(kisao:KISAO_0000091))
AnnotationAssertion(rdfs:label kisao:KISAO_0000091 "LSODIS"@en)
AnnotationAssertion(Annotation(rdfs:comment "Seager M, Balsdon S. LSODIS - A sparse implicit ODE solver. 10th World Congress on System Simulation and Scientific Computation, pages 437-439 (1983)."@en) rdfs:seeAlso kisao:KISAO_0000091 "http://www.nea.fr/abs/html/uscd1225.html"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000091 "urn:miriam:isbn:978-0444866073"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000091 "LSODIS is a set of general-purpose FORTRAN routines solver for the initial value problem for ordinary differential equation systems. It is suitable for both stiff and nonstiff systems. LSODIS treat systems in the linearly implicit form A(t,y) dy/dt = g(t,y), A = a square matrix, i.e. with the derivative dy/dt implicit, but linearly so."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000091 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000091 "Livermore solver for ordinary differential equations, implicit sparse version"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000091 "2007-11-30"^^xsd:date)
SubClassOf(kisao:KISAO_0000091 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000091 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000091 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
Declaration(Class(kisao:KISAO_0000093))
AnnotationAssertion(dc:creator kisao:KISAO_0000093 "NLN"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000093 "2008-07-08"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000093 "LSODPK"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000093 "urn:miriam:isbn:978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000093 "Livermore solver for ordinary differential equations for stiff and nonstiff systems with krylov corrector iteration"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000093 "LSODPK is a set of FORTRAN subroutines for solving the initial value problem for stiff and nonstiff systems of ordinary differential equations. In solving stiff systems, LSODPK uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods [urn:miriam:biomodels.kisao:KISAO_0000354]. The user must select the desired Krylov method and supply a pair of routine to evaluate, preprocess, and solve the (left and/or right) preconditioner matrices. Aside from preconditioning, the implementation is matrix-free, meaning that explicit storage of the Jacobian (or related) matrix is not required. The method is experimental because the scope of problems for which it is effective is not well-known, and users are forewarned that LSODPK may or may not be competitive with traditional methods on a given problem. LSODPK also includes an option for a user-supplied linear system solver to be used without Krylov iteration."@en)
SubClassOf(kisao:KISAO_0000093 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000093 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
SubClassOf(kisao:KISAO_0000093 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000354))
Declaration(Class(kisao:KISAO_0000094))
AnnotationAssertion(skos:definition kisao:KISAO_0000094 "Method to solve ordinary differential equations developed at the Lawrence Livermore National Laboratory."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000094 "2008-07-08"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000094 "Livermore solver"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000094 "NLN"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000094 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000094 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000094 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000094 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000094 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000094 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000094 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
Declaration(Class(kisao:KISAO_0000095))
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000095 "true"^^xsd:boolean)
AnnotationAssertion(skos:definition kisao:KISAO_0000095 "Stochastic method using a combination of discretisation of compartment volumes into voxels and Gillespie-like algorithm [urn:miriam:biomodels.kisao:KISAO_0000241] to simulate the evolution of the system."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000095 "2008-07-08"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000095 "sub-volume stochastic reaction-diffusion algorithm"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000095 "NLN"@en)
SubClassOf(kisao:KISAO_0000095 kisao:KISAO_0000335)
SubClassOf(kisao:KISAO_0000095 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
DisjointClasses(kisao:KISAO_0000095 kisao:KISAO_0000336)
Declaration(Class(kisao:KISAO_0000097))
AnnotationAssertion(rdfs:label kisao:KISAO_0000097 "kinetic simulation algorithm characteristic"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000097 "Simulation algorithm property, which can, for example, describe the model, such as the type of variables (discrete or continuous), and information on the treatment of spatial descriptions, or can be a numerical characteristic, such as the system's behaviour (deterministic or stochastic) as well as the progression mechanism (fixed or adaptive time steps)."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000097 "true"^^xsd:boolean)
AnnotationAssertion(dc:creator kisao:KISAO_0000097 "AZ"@en)
Declaration(Class(kisao:KISAO_0000098))
AnnotationAssertion(rdfs:label kisao:KISAO_0000098 "type of variable"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000098 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000098 "Type of variables used for the simulation."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000098 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000098 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000099))
AnnotationAssertion(skos:definition kisao:KISAO_0000099 "A characteristic describing the rules the algorithm uses to simulate the temporal evolution of a system, specifically whether or not the final state is uniquely determined from a precise initial state."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000099 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000099 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000099 "type of system behaviour"@en)
SubClassOf(kisao:KISAO_0000099 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000100))
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000100 "true"^^xsd:boolean)
AnnotationAssertion(skos:definition kisao:KISAO_0000100 "Type of time steps used by the algorithm."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000100 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000100 "type of progression time step"@en)
SubClassOf(kisao:KISAO_0000100 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000102))
AnnotationAssertion(rdfs:label kisao:KISAO_0000102 "spatial description"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000102 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000102 "NLN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000102 "Algorithm, possessing this characteristic, takes into account the location of the reacting components."@en)
SubClassOf(kisao:KISAO_0000102 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000103))
AnnotationAssertion(dc:created kisao:KISAO_0000103 "2008-07-08"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000103 "deterministic system behaviour"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000103 "Algorithm, possessing this characteristic, simulates the temporal evolution of a system deterministically, so that from a precise initial state the algorithm will always end up in the same final state."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000103 "NLN"@en)
SubClassOf(kisao:KISAO_0000103 kisao:KISAO_0000099)
DisjointClasses(kisao:KISAO_0000103 kisao:KISAO_0000104)
Declaration(Class(kisao:KISAO_0000104))
AnnotationAssertion(rdfs:label kisao:KISAO_0000104 "stochastic system behaviour"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000104 "NLN"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000104 "2008-07-08"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000104 "Algorithm, possessing this characteristic, simulates the temporal evolution of a system using probabilistic rules, so that between two simulations, the same precise initial state may result in a different final state."@en)
SubClassOf(kisao:KISAO_0000104 kisao:KISAO_0000099)
DisjointClasses(kisao:KISAO_0000104 kisao:KISAO_0000103)
Declaration(Class(kisao:KISAO_0000105))
AnnotationAssertion(skos:definition kisao:KISAO_0000105 "Algorithm, possessing this characteristic, allows values of system's variables to change by discrete (integral) amounts."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000105 "discrete variable"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000105 "NLN"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000105 "2008-07-08"^^xsd:date)
SubClassOf(kisao:KISAO_0000105 kisao:KISAO_0000098)
DisjointClasses(kisao:KISAO_0000105 kisao:KISAO_0000106)
Declaration(Class(kisao:KISAO_0000106))
AnnotationAssertion(dc:creator kisao:KISAO_0000106 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000106 "continuous variable"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000106 "Algorithm, possessing this characteristic, allows the values of a system's variables to change by continuous (non-integral) amounts."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000106 "2008-07-08"^^xsd:date)
SubClassOf(kisao:KISAO_0000106 kisao:KISAO_0000098)
DisjointClasses(kisao:KISAO_0000106 kisao:KISAO_0000105)
Declaration(Class(kisao:KISAO_0000107))
AnnotationAssertion(dc:creator kisao:KISAO_0000107 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000107 "progression with adaptive time step"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000107 "Algorithm, possessing this characteristic, does not use fixed time steps to update the state of a system during the whole simulation, but on the contrary adapts the length of the time steps to the local situation."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000107 "2008-07-08"^^xsd:date)
SubClassOf(kisao:KISAO_0000107 kisao:KISAO_0000100)
DisjointClasses(kisao:KISAO_0000107 kisao:KISAO_0000108)
Declaration(Class(kisao:KISAO_0000108))
AnnotationAssertion(dc:created kisao:KISAO_0000108 "2008-07-08"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000108 "Algorithm, possessing this characteristic, uses time steps of constant length to update the state of a system during the whole simulation."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000108 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000108 "progression with fixed time step"@en)
SubClassOf(kisao:KISAO_0000108 kisao:KISAO_0000100)
DisjointClasses(kisao:KISAO_0000108 kisao:KISAO_0000107)
Declaration(Class(kisao:KISAO_0000201))
AnnotationAssertion(skos:definition kisao:KISAO_0000201 "Parameter that can be used in the simulation experiment settings."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000201 "true"^^xsd:boolean)
AnnotationAssertion(dc:creator kisao:KISAO_0000201 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000201 "kinetic simulation algorithm parameter"@en)
SubClassOf(kisao:KISAO_0000201 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000000))
SubClassOf(kisao:KISAO_0000201 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000000))
Declaration(Class(kisao:KISAO_0000203))
AnnotationAssertion(skos:definition kisao:KISAO_0000203 "This parameter of 'Pahle hybrid method' [urn:miriam:biomodels.kisao:KISAO_0000231] is a double value specifying the lower limit for particle numbers. Species with a particle number below this value are considered as having a low particle number. The 'particle number lower limit' cannot be higher than the 'particle number upper limit' [urn:miriam:biomodels.kisao:KISAO_0000204]."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000203 "particle number lower limit"@en)
SubClassOf(kisao:KISAO_0000203 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000203 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000231))
SubClassOf(kisao:KISAO_0000203 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000204))
AnnotationAssertion(skos:definition kisao:KISAO_0000204 "This parameter of 'Pahle hybrid method' [urn:miriam:biomodels.kisao:KISAO_0000231] is a double value specifying the upper limit for particle numbers. Species with a particle number above this value are considered as having a high particle number. The 'particle number upper limit' cannot be lower than the 'particle number lower limit' [urn:miriam:biomodels.kisao:KISAO_0000203]."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000204 "particle number upper limit"@en)
SubClassOf(kisao:KISAO_0000204 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000204 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000231))
SubClassOf(kisao:KISAO_0000204 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000205))
AnnotationAssertion(skos:definition kisao:KISAO_0000205 "This positive integer value specifies after how many steps the internal partitioning of the system should be recalculated."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000205 "partitioning interval"@en)
SubClassOf(kisao:KISAO_0000205 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000205 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322) kisao:KISAO_0000000)))
SubClassOf(kisao:KISAO_0000205 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000209))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000209 "RTOL"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000209 "This parameter is a numeric value specifying the desired relative tolerance the user wants to achieve. A smaller value means that the trajectory is calculated more accurately."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000209 "relative tolerance"@en)
SubClassOf(kisao:KISAO_0000209 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000209 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237)))
SubClassOf(kisao:KISAO_0000209 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000211))
AnnotationAssertion(skos:definition kisao:KISAO_0000211 "This parameter is a positive numeric value specifying the desired absolute tolerance the user wants to achieve."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000211 "ATOL"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000211 "absolute tolerance"@en)
SubClassOf(kisao:KISAO_0000211 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000211 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237)))
SubClassOf(kisao:KISAO_0000211 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000216))
AnnotationAssertion(rdfs:label kisao:KISAO_0000216 "integrate reduced model"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000216 "This parameter is a boolean value to determine whether the integration shall be performed using the mass conservation laws (true), i.e., reducing the number of system variables or to use the complete model (false)."@en)
SubClassOf(kisao:KISAO_0000216 kisao:KISAO_0000243)
SubClassOf(kisao:KISAO_0000216 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000088))
SubClassOf(kisao:KISAO_0000216 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:boolean))
Declaration(Class(kisao:KISAO_0000219))
AnnotationAssertion(rdfs:label kisao:KISAO_0000219 "LSODA maximum non-stiff order"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000219 "This parameter is a positive integer value specifying the maximal order the non-stiff Adams integration method [urn:miriam:biomodels.kisao:KISAO_0000289] shall attempt before switching to the stiff BDF method [urn:miriam:biomodels.kisao:KISAO_0000288]."@en)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000219 "Adams max order"@en)
SubClassOf(kisao:KISAO_0000219 kisao:KISAO_0000243)
SubClassOf(kisao:KISAO_0000219 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000088))
SubClassOf(kisao:KISAO_0000219 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000220))
AnnotationAssertion(skos:definition kisao:KISAO_0000220 "This parameter is a positive integer value specifying the maximal order the stiff BDF integration method [urn:miriam:biomodels.kisao:KISAO_0000288] shall attempt before switching to smaller internal step sizes."@en)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000220 "BDF max order"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000220 "LSODA maximum stiff order"@en)
SubClassOf(kisao:KISAO_0000220 kisao:KISAO_0000243)
SubClassOf(kisao:KISAO_0000220 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000088))
SubClassOf(kisao:KISAO_0000220 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000223))
AnnotationAssertion(skos:definition kisao:KISAO_0000223 "The 'number of history bins' is only enabled for models that contain delayed or multistep reactions for specifying the granularity with which the delayed reaction solver should retain the history of species values, for species that participate in delayed reactions."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000223 "number of history bins"@en)
SubClassOf(kisao:KISAO_0000223 kisao:KISAO_0000244)
SubClassOf(kisao:KISAO_0000223 ObjectSomeValuesFrom(kisao:KISAO_0000250 ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000375) kisao:KISAO_0000000)))
SubClassOf(kisao:KISAO_0000223 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000228))
AnnotationAssertion(skos:definition kisao:KISAO_0000228 "The leap condition is chosen such that the expected change in the propensity function aj(x) is bounded by Epsilon * a0 where Epsilon is an error control parameter between 0 and 1. This parameter is the basic error control mechanism for the Tau-Leaping algorithm [urn:miriam:biomodels.kisao:KISAO_0000039]. As Epsilon decreases the leaps become shorter and the simulation is more accurate."@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000228 "tolerance"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section V."@en) rdfs:seeAlso kisao:KISAO_0000228 "urn:miriam:doi:10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000228 "epsilon"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000228 "tau-leaping epsilon"@en)
SubClassOf(kisao:KISAO_0000228 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000228 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000039))
SubClassOf(kisao:KISAO_0000228 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000230))
AnnotationAssertion(skos:definition kisao:KISAO_0000230 "'minimum reactions per leap' parameter is used in hybrid methods, which adaptively switch between the tau-leaping algorithm [urn:miriam:biomodels.kisao:KISAO_0000039] to the SSA Direct Method [urn:miriam:biomodels.kisao:KISAO_0000029] when the number of reactions in a single tau-leaping leap step is less than the threshold."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000230 "minimum reactions per leap"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000230 "threshold"@en)
SubClassOf(kisao:KISAO_0000230 kisao:KISAO_0000243)
SubClassOf(kisao:KISAO_0000230 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000039) ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000029))))
SubClassOf(kisao:KISAO_0000230 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000231))
AnnotationAssertion(rdfs:label kisao:KISAO_0000231 "Pahle hybrid method"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI--a COmplex PAthway SImulator. Hoops S, Sahle S, Gauges R, Lee C, Pahle J, Simus N, Singhal M, Xu L, Mendes P, Kummer U. Bioinformatics. 2006 Dec 15;22(24):3067-74. Epub 2006 Oct 10."@en) rdfs:seeAlso kisao:KISAO_0000231 "urn:miriam:doi:10.1093/bioinformatics/btl485"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000231 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000231 "COPASI"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000231 "The hybrid method combines the stochastic 'Gibson-Bruck's next reaction method' [urn:miriam:biomodels.kisao:KISAO_0000027] with different algorithms for the numerical integration of ODEs [urn:miriam:biomodels.kisao:KISAO_0000245 some urn:miriam:biomodels.kisao:KISAO_0000374]. The biochemical network is dynamically partitioned into a deterministic and a stochastic subnet depending on the current particle numbers in the system. The user can define limits for when a particle number should be considered low or high. The stochastic subnet contains reactions involving low numbered species as substrate or product. All the other reactions form the deterministic subnet. The two subnets are then simulated in parallel using the stochastic and deterministic solver, respectively. The reaction probabilities in the stochastic subnet are approximated as constant between two stochastic reaction events."@en)
SubClassOf(kisao:KISAO_0000231 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000231 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000231 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000231 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322))
SubClassOf(kisao:KISAO_0000231 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000027))
SubClassOf(kisao:KISAO_0000231 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374) kisao:KISAO_0000000)))
SubClassOf(kisao:KISAO_0000231 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000203))
SubClassOf(kisao:KISAO_0000231 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000204))
Declaration(Class(kisao:KISAO_0000232))
AnnotationAssertion(rdfs:label kisao:KISAO_0000232 "LSOIBT"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000232 "LSOIBT solves linearly implicit systems in which the matrices involved are all assumed to be block-tridiagonal. Linear systems are solved by the LU method."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000232 "Livermore solver for ordinary differential equations given in implicit form, with block-tridiagonal Jacobian treatment"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000232 "urn:miriam:isbn:978-0444866073"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000232 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000232 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000232 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
Declaration(Class(kisao:KISAO_0000233))
AnnotationAssertion(skos:definition kisao:KISAO_0000233 "LSODES solves systems dy/dt = f and in the stiff case treats the Jacobian matrix in general sparse form. It determines the sparsity structure on its own, or optionally accepts this information from the user. It then uses parts of the Yale Sparse Matrix Package (YSMP) to solve the linear systems that arise, by a sparse (direct) LU factorization/backsolve method."@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000233 "urn:miriam:isbn:978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000233 "Livermore solver for ordinary differential equations with general sparse Jacobian matrix"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000233 "LSODES"@en)
SubClassOf(kisao:KISAO_0000233 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000233 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
Declaration(Class(kisao:KISAO_0000234))
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000234 "urn:miriam:isbn:978-0444866073"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000234 "LSODKR is an initial value ODE solver for stiff and nonstiff systems. It is a variant of the LSODPK [urn:miriam:biomodels.kisao:KISAO_0000093] and LSODE [urn:miriam:biomodels.kisao:KISAO_0000071] solvers, intended mainly for large stiff systems. The main differences between LSODKR and LSODE [urn:miriam:biomodels.kisao:KISAO_0000071] are the following: a) for stiff systems, LSODKR uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods. The user must supply routines for the preconditioning operations, b) within the corrector iteration, LSODKR does automatic switching between functional (fixpoint) iteration and modified Newton iteration, c) LSODKR includes the ability to find roots of given functions of the solution during the integration."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000234 "Livermore solver for ordinary differential equations, with preconditioned Krylov iteration methods for the Newton correction linear systems, and with root finding."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000234 "LSODKR"@en)
SubClassOf(kisao:KISAO_0000234 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000234 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
SubClassOf(kisao:KISAO_0000234 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000093))
SubClassOf(kisao:KISAO_0000234 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000354))
Declaration(Class(kisao:KISAO_0000235))
AnnotationAssertion(skos:definition kisao:KISAO_0000235 "A characteristic describing the type of the solution produced by the method, specifically whether it is exact or approximate."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000235 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000235 "type of solution"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000235 "AZ"@en)
SubClassOf(kisao:KISAO_0000235 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000236))
AnnotationAssertion(rdfs:label kisao:KISAO_0000236 "exact solution"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000236 "Algorithm, possessing this characteristic, provides an exact solution to the initial problem."@en)
SubClassOf(kisao:KISAO_0000236 kisao:KISAO_0000235)
DisjointClasses(kisao:KISAO_0000236 kisao:KISAO_0000237)
Declaration(Class(kisao:KISAO_0000237))
AnnotationAssertion(skos:definition kisao:KISAO_0000237 "Approximation algorithms are algorithms used to find approximate solutions to optimization problems. Approximation algorithms are often associated with NP-hard problems; since it is unlikely that there can ever be efficient polynomial time exact algorithms solving NP-hard problems, one settles for polynomial time sub-optimal solutions. Unlike heuristics, which usually only find reasonably good solutions reasonably fast, one wants provable solution quality and provable run time bounds. Ideally, the approximation is optimal up to a small constant factor (for instance within 5% of the optimal solution). Approximation algorithms are increasingly being used for problems where exact polynomial-time algorithms are known but are too expensive due to the input size."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000237 "approximate solution"@en)
SubClassOf(kisao:KISAO_0000237 kisao:KISAO_0000235)
DisjointClasses(kisao:KISAO_0000237 kisao:KISAO_0000236)
Declaration(Class(kisao:KISAO_0000238))
AnnotationAssertion(rdfs:label kisao:KISAO_0000238 "type of method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000238 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000238 "A characteristic describing the way the method finds a solution, specifically whether it solves an equation involving only the current state of the system (explicit) or both the current and the later one (implicit). "@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000238 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000238 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000239))
AnnotationAssertion(skos:definition kisao:KISAO_0000239 "Explicit methods calculate the state of a system at a later time from the state of the system at the current time. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an explicit method Y(t+delta t) = F(Y(t)), to find Y(t+delta t)."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000239 "explicit method type"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000239 "AZ"@en)
SubClassOf(kisao:KISAO_0000239 kisao:KISAO_0000238)
DisjointClasses(kisao:KISAO_0000239 kisao:KISAO_0000240)
Declaration(Class(kisao:KISAO_0000240))
AnnotationAssertion(rdfs:label kisao:KISAO_0000240 "implicit method type"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000240 "Implicit methods find a solution by solving an equation involving both the current state of the system and the later one. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an implicit method one solves an equation G(Y(t), Y(t+delta t))=0, to find Y(t+delta t)."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000240 "AZ"@en)
SubClassOf(kisao:KISAO_0000240 kisao:KISAO_0000238)
DisjointClasses(kisao:KISAO_0000240 kisao:KISAO_0000239)
Declaration(Class(kisao:KISAO_0000241))
AnnotationAssertion(rdfs:label kisao:KISAO_0000241 "Gillespie-like method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000241 "Stochastic simulation algorithm using an approach alike the one described in Gillespie's papers of 1976 and 1977."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000241 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000241 kisao:KISAO_0000319)
SubClassOf(kisao:KISAO_0000241 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000241 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
SubClassOf(kisao:KISAO_0000241 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
Declaration(Class(kisao:KISAO_0000242))
AnnotationAssertion(rdfs:label kisao:KISAO_0000242 "error control parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000242 "Parameter controlling method accuracy."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000242 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000242 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000242 kisao:KISAO_0000201)
Declaration(Class(kisao:KISAO_0000243))
AnnotationAssertion(skos:definition kisao:KISAO_0000243 "Parameters describing threshold conditions for algorithms that switch between different methods."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000243 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000243 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000243 "method switching control parameter"@en)
SubClassOf(kisao:KISAO_0000243 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000243 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000000)))
Declaration(Class(kisao:KISAO_0000244))
AnnotationAssertion(dc:creator kisao:KISAO_0000244 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000244 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000244 "granularity control parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000244 "Parameter controlling granularity."@en)
SubClassOf(kisao:KISAO_0000244 kisao:KISAO_0000201)
Declaration(Class(kisao:KISAO_0000248))
AnnotationAssertion(skos:definition kisao:KISAO_0000248 "Tau-leaping delta specifies how close two symmetric transition rates must be before we classify them as in partial-equilibrium. Only applies to the implicit tau routine [urn:miriam:biomodels.kisao:KISAO_0000045]."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000248 "tau-leaping delta"@en)
SubClassOf(kisao:KISAO_0000248 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000248 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000045))
SubClassOf(kisao:KISAO_0000248 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000249))
AnnotationAssertion(skos:definition kisao:KISAO_0000249 "The 'nonnegative Poisson tau-leaping method' [urn:miriam:biomodels.kisao:KISAO_0000084] is based on the fact that negative populations typically arise from multiple firings of reactions that are only a few firings away from consuming all the molecules of one of their reactants. To focus on those reaction channels, the modified tau-leaping algorithm introduces a second control parameter nc, a positive integer that is usually set somewhere between 5 and 20. Any reaction channel with a positive propensity function that is currently within nc firings of exhausting one of its reactants is then classified as a critical reaction. The modified algorithm chooses tau in such a way that no more than one firing of all the critical reactions can occur during the leap."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000249 "critical firing threshold"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000249 "nonnegative tau-leaping second control parameter"@en)
SubClassOf(kisao:KISAO_0000249 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000249 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000084))
SubClassOf(kisao:KISAO_0000249 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000252))
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000252 "true"^^xsd:boolean)
AnnotationAssertion(dc:creator kisao:KISAO_0000252 "Parameter describing partitioning of the system."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000252 "partitioning control parameter"@en)
SubClassOf(kisao:KISAO_0000252 kisao:KISAO_0000201)
Declaration(Class(kisao:KISAO_0000253))
AnnotationAssertion(skos:definition kisao:KISAO_0000253 "The time in each Monte-Carlo iteration of 'binomial tau-leaping method' [urn:miriam:biomodels.kisao:KISAO_0000074] is updated with the time increments tau=f/(a1+a2+...+aM). Here 1/(a1+a2+...+aM) is the averaged microscopic increment of the SSA [urn:miriam:biomodels.kisao:KISAO_0000029] and f is a coarse-graining factor, controlling the speed-up."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000253 "coarse-graining factor"@en)
AnnotationAssertion(Annotation(rdfs:comment "Chatterjee A, Vlachos DG, Katsoulakis MA. Binomial distribution based tau-leap accelerated stochastic simulation. J Chem Phys. 2005;122(2):024112."@en) rdfs:seeAlso kisao:KISAO_0000253 "urn:miriam:pubmed:15638577"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000253 kisao:KISAO_0000244)
SubClassOf(kisao:KISAO_0000253 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000074))
SubClassOf(kisao:KISAO_0000253 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000254))
AnnotationAssertion(skos:definition kisao:KISAO_0000254 "Accuracy code of 'Brownian diffusion Smoluchowski method' [urn:miriam:biomodels.kisao:KISAO_0000057], which sets which neighbouring boxes are checked for potential bi-molecular reactions. Consider the reaction A + B -> C and suppose that A and B are within a binding radius of each other. This reaction will always be performed if A and B are in the same virtual box. If accuracy is set to at least 3, then it will also occur if A and B are in nearest-neighbour virtual boxes. If it is at least 7, then the reaction will happen if they are in nearest-neighbour boxes that are separated by periodic boundary conditions. And if it is 9 or 10, then all edge and corner boxes are checked for reactions, which means that no potential reactions are overlooked."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000254 "Brownian diffusion accuracy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000254 "Smoldyn"@en)
SubClassOf(kisao:KISAO_0000254 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000254 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000057))
SubClassOf(kisao:KISAO_0000254 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000255))
AnnotationAssertion(skos:definition kisao:KISAO_0000255 "Target molecules per virtual box is a parameter of 'Brownian diffusion Smoluchowski method' [urn:miriam:biomodels.kisao:KISAO_0000057], which sets the box sizes so that the average number of molecules per box, at simulation initiation, is close to the requested number."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000255 "molecules per virtual box"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000255 "Smoldyn"@en)
SubClassOf(kisao:KISAO_0000255 kisao:KISAO_0000260)
SubClassOf(kisao:KISAO_0000255 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
DisjointClasses(kisao:KISAO_0000255 kisao:KISAO_0000256)
Declaration(Class(kisao:KISAO_0000256))
AnnotationAssertion(rdfs:label kisao:KISAO_0000256 "virtual box side length"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000256 "The 'virtual box side length' is a parameter of 'Brownian diffusion Smoluchowski method' [urn:miriam:biomodels.kisao:KISAO_0000057]. It requests the length of one side of a box."@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000256 "Smoldyn"@en)
SubClassOf(kisao:KISAO_0000256 kisao:KISAO_0000260)
SubClassOf(kisao:KISAO_0000256 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
DisjointClasses(kisao:KISAO_0000256 kisao:KISAO_0000255)
Declaration(Class(kisao:KISAO_0000257))
AnnotationAssertion(skos:definition kisao:KISAO_0000257 "A parameter of 'Brownian diffusion Smoluchowski method' [urn:miriam:biomodels.kisao:KISAO_0000057]. Molecules that are bound to a surface are given locations that are extremely close to that surface. However, this position does not need to be exactly at the surface, and in fact it usually cannot be exactly at the surface due to round-off error. The tolerance for how  far a surface-bound molecule is allowed to be away from the surface can be set with the epsilon statement."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000257 "surface-bound epsilon"@en)
SubClassOf(kisao:KISAO_0000257 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000257 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000057))
SubClassOf(kisao:KISAO_0000257 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000258))
AnnotationAssertion(skos:definition kisao:KISAO_0000258 "A parameter of 'Brownian diffusion Smoluchowski method' [urn:miriam:biomodels.kisao:KISAO_0000057]. When a surface-bound molecule diffuses off of one surface panel, it can sometimes diffuse onto the neighbouring surface tile. It does so only if the neighbouring panel is declared to be a neighbour and also the neighbour is within a distance that is set with the neighbour distance statement."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000258 "neighbour distance"@en)
SubClassOf(kisao:KISAO_0000258 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000258 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000057))
SubClassOf(kisao:KISAO_0000258 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000260))
AnnotationAssertion(rdfs:label kisao:KISAO_0000260 "virtual box size"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000260 "Target size of virtual boxes for 'Brownian diffusion Smoluchowski method' [urn:miriam:biomodels.kisao:KISAO_0000057]."@en)
SubClassOf(kisao:KISAO_0000260 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000260 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000057))
Declaration(Class(kisao:KISAO_0000261))
AnnotationAssertion(rdfs:label kisao:KISAO_0000261 "Euler method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000261 "The Euler method, named after Leonhard Euler, is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value."@en)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes in Fortran 77. Cambridge University Press (2001)."@en) rdfs:seeAlso kisao:KISAO_0000261 "urn:miriam:isbn:052143064X"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000261 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000261 "ByoDyn"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000261 "JSim"@en)
SubClassOf(kisao:KISAO_0000261 kisao:KISAO_0000377)
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000359 ObjectIntersectionOf(DataHasValue(kisao:KISAO_0000275 "1"^^xsd:integer) kisao:KISAO_0000064)))
Declaration(Class(kisao:KISAO_0000263))
AnnotationAssertion(dc:created kisao:KISAO_0000263 "2011-04-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000263 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000263 "NFSim agent-based simulation method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000263 "NFSim"@en)
AnnotationAssertion(Annotation(rdfs:comment "Sneddon MW, Faeder JR and Emonet T. Efficient modelling, simulation and coarse-graining of biological complexity with NFsim. Nature Methods (2011) 8(2):177-83."@en) rdfs:seeAlso kisao:KISAO_0000263 "urn:miriam:doi:10.1038/nmeth.1546"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000263 "A generalization a rule-based version of 'Gillespie's direct method' (SSA) [urn:miriam:biomodels.kisao:KISAO_0000029]. The method is guaranteed to produce the same results as the exact SSA [urn:miriam:biomodels.kisao:KISAO_0000029] by cycling over three primary steps. First, NFsim calculates the probability or propensity for each rule to take effect given the current molecular states. Second, it samples the time to the next reaction event and selects the corresponding reaction rule. Finally, NFsim executes the selected reaction by applying the rule and updating the molecular agents accordingly."@en)
SubClassOf(kisao:KISAO_0000263 kisao:KISAO_0000017)
SubClassOf(kisao:KISAO_0000263 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000263 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000029))
DisjointClasses(kisao:KISAO_0000263 kisao:KISAO_0000362)
Declaration(Class(kisao:KISAO_0000264))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "cellular automata"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "tessellation automata"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000264 "cellular automata update method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000264 "2011-04-07"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "iterative arrays"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000264 "Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "cellular spaces"@en)
AnnotationAssertion(Annotation(rdfs:comment "Wolfram, Stephen (1983) Statistical mechanics of cellular automata. Reviews of Modern Physics 55 (3): 601–644."^^xsd:string) rdfs:seeAlso kisao:KISAO_0000264 "urn:miriam:doi:10.1103/RevModPhys.55.601"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "cellular structures"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "tessellation structures"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "CA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "homogeneous structures"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000264 "AZ"@en)
SubClassOf(kisao:KISAO_0000264 kisao:KISAO_0000363)
SubClassOf(kisao:KISAO_0000264 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000264 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
Declaration(Class(kisao:KISAO_0000273))
AnnotationAssertion(rdfs:label kisao:KISAO_0000273 "hard-particle molecular dynamics"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000273 "A collision-driven molecular dynamics algorithm for a system of non-spherical particles."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000273 "2011-05-05"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000273 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "Aleksandar Donev, Salvatore Torquato, Frank H. Stillinger, Neighbor list collision-driven molecular dynamics simulation for nonspherical hard particles. I. Algorithmic details, Journal of Computational Physics, v.202 n.2, p.737-764, 20 January 2005"@en) rdfs:seeAlso kisao:KISAO_0000273 "urn:miriam:doi:10.1016/j.jcp.2004.08.014"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000273 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000273 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000273 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
Declaration(Class(kisao:KISAO_0000274))
AnnotationAssertion(dc:creator kisao:KISAO_0000274 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000274 "AED DKMC"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000274 "first-passage Monte Carlo algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000274 "We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000274 "AED diffusion kinetic Monte Carlo method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000274 "2011-05-05"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000274 "asynchronous event-driven diffusion Monte Carlo"@en)
AnnotationAssertion(Annotation(rdfs:comment "T. Oppelstrup, V. V. Bulatov, G. H. Gilmer, M. H. Kalos, and B. Sadigh. First-passage Monte- Carlo algorithm: Diffusion without all the hops. Physical Review Letters, 97(23):230602, 2006."@en) rdfs:seeAlso kisao:KISAO_0000274 "urn:miriam:doi:10.1103/PhysRevLett.97.230602"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000274 kisao:KISAO_0000319)
SubClassOf(kisao:KISAO_0000274 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000274 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000274 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000274 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
Declaration(Class(kisao:KISAO_0000276))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000276 "Runge-Kutta-Gill method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000276 "Gill's fourth order method is a Runge-Kutta method for approximating the solution of the initial value problem y'(x) = f(x,y);  y(x0) = y0 which evaluates the integrand,f(x,y), four times per step. This method is a fourth order procedure for which Richardson extrapolation can be used."@en)
AnnotationAssertion(Annotation(rdfs:comment "Gill, S. 1951. A process for the step-by-step integration of differential equations in an automatic digital computing machine. Proc. Cambridge Philos. Soc., 47, pp 96-108."@en) rdfs:seeAlso kisao:KISAO_0000276 "urn:miriam:doi:10.1017/S0305004100026414"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000276 "Gill method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000276 "2011-05-09"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000276 "Gill's method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000276 "AZ"@en)
SubClassOf(kisao:KISAO_0000276 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000276 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000276 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000276 DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer))
Declaration(Class(kisao:KISAO_0000278))
AnnotationAssertion(rdfs:label kisao:KISAO_0000278 "Metropolis Monte Carlo algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000278 "Metropolis–Hastings algorithm"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000278 "CompuCell3D"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000278 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000278 "Metropolis algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Metropolis, N.; Rosenbluth, A.W.; Rosenbluth, M.N.; Teller, A.H.; Teller, E. (1953). Equations of State Calculations by Fast Computing Machines. Journal of Chemical Physics 21 (6): 1087–1092."@en) rdfs:seeAlso kisao:KISAO_0000278 "urn:miriam:doi:10.1063/1.1699114"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000278 "A general method, suitable for fast computing machines, for investigating such properties as equations of state for substances consisting of interacting individual molecules is described. The method consists of a modified Monte Carlo integration [urn:miriam:biomodels.kisao:KISAO_0000051] over configuration space."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000278 "2011-05-09"^^xsd:date)
SubClassOf(kisao:KISAO_0000278 kisao:KISAO_0000319)
SubClassOf(kisao:KISAO_0000278 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000278 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000278 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000278 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
Declaration(Class(kisao:KISAO_0000279))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000279 "explicit Adams method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000279 "urn:miriam:isbn:978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000279 "Given an initial value problem: y' = f(x,y),  y(x0) = y0 together with additional starting values y1 = y(x0 + h), . . . , yk-1 = y(x0 + (k-1) h) the k-step Adams-Bashforth method is an explicit linear multistep method that approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( a0 f(xk - 1,yk - 1) + a1 f(xk - 2,yk - 2) + . . . + ak - 1 f(x0,y0) ), where a0, a1, . . . , ak - 1 are constants."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000279 "2011-05-09"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000279 "Adams–Bashforth method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000279 "AZ"@en)
SubClassOf(kisao:KISAO_0000279 kisao:KISAO_0000289)
SubClassOf(kisao:KISAO_0000279 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
Declaration(Class(kisao:KISAO_0000280))
AnnotationAssertion(dc:created kisao:KISAO_0000280 "2011-05-09"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000280 "urn:miriam:isbn:978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000280 "Adams-Moulton method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000280 "VCell"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000280 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000280 "implicit Adams method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000280 "The (k-1)-step Adams-Moulton method is an implicit linear multistep method that iteratively approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( b0 f(xk,yk) + b1 f(xk - 1,yk - 1) + . . . + bk - 1 f(x1,y1) ), where b1, . . . , bk - 1 are constants."@en)
SubClassOf(kisao:KISAO_0000280 kisao:KISAO_0000289)
SubClassOf(kisao:KISAO_0000280 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000281))
AnnotationAssertion(skos:definition kisao:KISAO_0000281 "A numerical method for differential equations which is based on several values of the solution."@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000281 "urn:miriam:isbn:978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000281 "multi-value method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000281 "2011-05-09"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000281 "multistep method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000281 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000281 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000281 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000281 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000281 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000281 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000281 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
Declaration(Class(kisao:KISAO_0000282))
AnnotationAssertion(dc:created kisao:KISAO_0000282 "2011-05-09"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000282 "KINSOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "BROWN, P. N. AND SAAD, Y. 1990. Hybrid Krylov methods for nonlinear systems of equations. SIAM  J. Sci. Stat. Comput. 11, 450–481."@en) rdfs:seeAlso kisao:KISAO_0000282 "urn:miriam:doi:10.1137/0911026"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "RELATIVE"@en) skos:altLabel kisao:KISAO_0000282 "Newton-Krylov solver for nonlinear algebraic systems"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000282 "KINSOL is a solver for nonlinear algebraic systems based on Newton-Krylov solver technology [urn:miriam:biomodels.kisao:KISAO_0000354]. It is newly rewritten in the C language, based on the previous Fortran package NKSOL of Brown and Saad."@en)
AnnotationAssertion(Annotation(rdfs:comment "RELATIVE"@en) skos:altLabel kisao:KISAO_0000282 "FKINSOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "RELATIVE"@en) skos:altLabel kisao:KISAO_0000282 "NKSOL"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000282 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000282 "urn:miriam:doi:10.1145/1089014.1089020"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000282 kisao:KISAO_0000284)
SubClassOf(kisao:KISAO_0000282 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376)))
SubClassOf(kisao:KISAO_0000282 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))
SubClassOf(kisao:KISAO_0000282 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000354))
Declaration(Class(kisao:KISAO_0000283))
AnnotationAssertion(dc:created kisao:KISAO_0000283 "2011-05-09"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000283 "implicit differential-algebraic solver"@en)
AnnotationAssertion(Annotation(rdfs:comment "BROWN, P. N., HINDMARSH, A. C., AND PETZOLD, L. R. 1994. Using Krylov methods in the solution of large-scale differential-algebraic systems. SIAM J. Sci. Comput. 15, 1467–1488."@en) rdfs:seeAlso kisao:KISAO_0000283 "urn:miriam:doi:10.1137/0915088"^^xsd:anyURI)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000283 "VCell"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000283 "urn:miriam:doi:10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000283 "IDA"@en)
AnnotationAssertion(Annotation(rdfs:comment "RELATIVE"@en) skos:altLabel kisao:KISAO_0000283 "solver for differential-algebraic equation systems"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000283 "IDA is a package for the solution of differential-algebraic equation (DAE) systems in the form F(t,y,y')=0. It is written in C, but derived from the package DASPK [urn:miriam:biomodels.kisao:KISAO_0000355] which is written in Fortran."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000283 "AZ"@en)
SubClassOf(kisao:KISAO_0000283 kisao:KISAO_0000284)
SubClassOf(kisao:KISAO_0000283 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376)))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000355))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000354))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000386))
DisjointClasses(kisao:KISAO_0000283 kisao:KISAO_0000020)
Declaration(Class(kisao:KISAO_0000284))
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000284 "urn:miriam:doi:10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000284 "One of the methods, implemented in SUNDIALS (a suite of advanced computational codes for solving large-scale problems that can be modeled as a system of nonlinear algebraic equations, or as initial-value problems in ordinary differential or differential-algebraic equations)."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000284 "SUNDIALS method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000284 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000284 "2011-05-09"^^xsd:date)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000284 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000284 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000284 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000284 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000284 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000284 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000284 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
Declaration(Class(kisao:KISAO_0000285))
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000285 "VCell"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000285 "The finite volume method is a method for representing and evaluating partial differential equations in the form of algebraic equations, which attempts to emulate continuous conservation laws of physics."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000285 "2011-05-09"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000285 "finite volume method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Y. Saad. 2003. Iterative Methods for Sparse Linear Systems (2nd ed.). Soc. for Industrial and Applied Math., Philadelphia, PA, USA."@en) rdfs:seeAlso kisao:KISAO_0000285 "urn:miriam:isbn:0898715342"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000285 "FVM"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000285 "AZ"@en)
SubClassOf(kisao:KISAO_0000285 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000285 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000346))
Declaration(Class(kisao:KISAO_0000286))
AnnotationAssertion(Annotation(rdfs:comment "Burrage, K., Burrage, P.M. and Tian, T. (2004) Numerical methods for strong solutions of stochastic differential equations: an overview. Proceedings of the Royal Society of London Series A: Mathematical, Physical and Engineering Sciences, 460 (2041). pp. 373-402."@en) rdfs:seeAlso kisao:KISAO_0000286 "urn:miriam:doi:10.1098/rspa.2003.1247"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000286 "stochastic Euler scheme"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000286 "Euler–Maruyama method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000286 "2011-05-09"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000286 "The Euler–Maruyama method is a method for the approximate numerical solution of a stochastic differential equation, which truncates the Ito and Stratonovich Taylor series of the exact solution after the first order stochastic terms. This converges to the Ito solution with strong global order accuracy 1/2 or weak global order accuracy 1. It is a simple generalization of the Euler method [urn:miriam:biomodels.kisao:KISAO_0000261] for ordinary differential equations to stochastic differential equations."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000286 "AZ"@en)
SubClassOf(kisao:KISAO_0000286 kisao:KISAO_0000377)
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000371))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000261))
Declaration(Class(kisao:KISAO_0000287))
AnnotationAssertion(dc:created kisao:KISAO_0000287 "2011-05-10"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Milstein M. G. Numerical Integration of Stochastic Differential Equations (Mathematics and Its Applications) Springer, 2004."@en) rdfs:seeAlso kisao:KISAO_0000287 "urn:miriam:isbn:079233213X"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000287 "The Milstein method is a technique for the approximate numerical solution of a stochastic differential equation."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000287 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000287 "Milstein method"@en)
SubClassOf(kisao:KISAO_0000287 kisao:KISAO_0000281)
SubClassOf(kisao:KISAO_0000287 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000287 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000287 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000371))
Declaration(Class(kisao:KISAO_0000288))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000288 "Gear's method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000288 "The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000288 "2011-05-10"^^xsd:date)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000288 "ByoDyn"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000288 "GSL"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000288 "Gear method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000288 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "C. William Gear. 1971. Numerical Initial Value Problems in Ordinary Differential Equations. Prentice Hall PTR, Upper Saddle River, NJ, USA."@en) rdfs:seeAlso kisao:KISAO_0000288 "urn:miriam:isbn:0136266061"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000288 "backward differentiation formula"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000288 "BDF"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000288 "iBioSim"@en)
SubClassOf(kisao:KISAO_0000288 kisao:KISAO_0000281)
SubClassOf(kisao:KISAO_0000288 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000288 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000288 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000288 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376))
DisjointClasses(kisao:KISAO_0000288 kisao:KISAO_0000289)
Declaration(Class(kisao:KISAO_0000289))
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000289 "urn:miriam:isbn:978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000289 "ByoDyn"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000289 "2011-05-10"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000289 "Adams method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000289 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000289 "Adams' methods are multi-step methods used for the numerical integration of initial value problems in Ordinary Differential Equations (ODE's). Adams' algorithm consists of two parts: firstly, a starting procedure which provides y1, ... , yk-1 ( approximations to the exact solution at the points x0 + h, ... , x0 + (k - 1)h ) and, secondly, a multistep formula to obtain an approximation to the exact solution y(x0 + kh). This is then applied recursively, based on the numerical approximation of k successive steps, to compute y(x0 + (k + 1)h)."@en)
SubClassOf(kisao:KISAO_0000289 kisao:KISAO_0000281)
SubClassOf(kisao:KISAO_0000289 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000289 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000289 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376))
DisjointClasses(kisao:KISAO_0000289 kisao:KISAO_0000288)
Declaration(Class(kisao:KISAO_0000290))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000290 "Kutta–Merson method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000290 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000290 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000290 "JSim"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000290 "Merson's method"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000290 "Merson method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000290 "KM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000290 "Runge-Kutta–Merson method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000290 "A five-stage Runge–Kutta method with fourth-order accuracy."@en)
AnnotationAssertion(Annotation(rdfs:comment "R.H. Merson, An operational method for the study of integration processes, in: Proceedings of the Symposium on Data Processing, Weapons Research Establishment, Salisbury, Australia, 1957, pp. 110-1-110-25."@en) rdfs:seeAlso kisao:KISAO_0000290 "http://nla.gov.au/nla.cat-vn870866"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000290 kisao:KISAO_0000302)
SubClassOf(kisao:KISAO_0000290 DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer))
Declaration(Class(kisao:KISAO_0000296))
AnnotationAssertion(dc:created kisao:KISAO_0000296 "2011-05-10"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000296 "Hammer-Hollingsworth method"@en)
AnnotationAssertion(Annotation(rdfs:comment "P. C. Hammer & J. W. Hollingsworth, Trapezoidal methods of approximating solutions of differential equations, MTAC, v. 9, 1955, pp. 92-96. MR 17, 302."@en) rdfs:seeAlso kisao:KISAO_0000296 "urn:issn:0891-6837"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000296 "The numerical integration of ordinary differential equations by the use of Gaussian quadrature methods."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000296 "AZ"@en)
SubClassOf(kisao:KISAO_0000296 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000296 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000296 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000297))
AnnotationAssertion(dc:creator kisao:KISAO_0000297 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000297 "2011-05-10"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "J. C. Butcher, Integration processes based on Radau quadrature formulas, Math. Comp., v. 18, 1964, pp. 233-244."@en) rdfs:seeAlso kisao:KISAO_0000297 "urn:issn:1088-6842(e)"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000297 "Lobatto method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000297 "There are three families of Lobatto methods, called IIIA, IIIB and IIIC. These are named after Rehuel Lobatto. All are implicit Runge-Kutta methods, have order 2s − 2 and they all have c1 = 0 and cs = 1."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000297 "implicit Runge-Kutta method based on Lobatto quadrature"@en)
SubClassOf(kisao:KISAO_0000297 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000297 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366)))
SubClassOf(kisao:KISAO_0000297 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000297 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000299))
AnnotationAssertion(Annotation(rdfs:comment "Butcher, J. C. (1964) Implicit Runge-Kutta processes. Math. Comput. 18, 50-64."@en) rdfs:seeAlso kisao:KISAO_0000299 "urn:issn:1088-6842(e)"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000299 "Butcher–Kuntzmann method"@en)
AnnotationAssertion(Annotation(rdfs:comment "F. Ceschin, J. Kuntzmann, Problèmes différentiels de conditions initiales. Paris 1963. Dunod."@fr) rdfs:seeAlso kisao:KISAO_0000299 "urn:miriam:doi:10.1002/zamm.19660460519"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000299 "Gauss method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000299 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000299 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000299 "From a theoretical point of view, the Butcher–Kuntzmann Runge–Kutta methods belong to the best step-by-step methods for nonstiff problems. These methods integrate first-order initial-value problems by means of formulas based on Gauss–Legendre quadrature, and combine excellent stability features with the property of superconvergence at the step points."@en)
SubClassOf(kisao:KISAO_0000299 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000299 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000299 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000299 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366))
Declaration(Class(kisao:KISAO_0000301))
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000301 "urn:miriam:isbn:978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000301 "Heun's method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000301 "2011-05-10"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000301 "Heun method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000301 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000301 "The method is named after Karl L. W. M. Heun and is a numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It can be seen as extension of the Euler method [urn:miriam:biomodels.kisao:KISAO_0000261] into two-stage second-order Runge–Kutta method."@en)
SubClassOf(kisao:KISAO_0000301 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000301 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000301 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000301 DataHasValue(kisao:KISAO_0000275 "2"^^xsd:integer))
Declaration(Class(kisao:KISAO_0000302))
AnnotationAssertion(dc:created kisao:KISAO_0000302 "2011-05-10"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000302 "embedded Runge-Kutta method"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000302 "true"^^xsd:boolean)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000302 "urn:miriam:isbn:978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000302 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000302 "embedded RK"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000302 "An embedded Runge-Kutta method is a method in which two Runge-Kutta estimates are obtained using the same auxiliary functions ki but with a different linear combination of these functions so that one estimate has an order one greater than the other."@en)
SubClassOf(kisao:KISAO_0000302 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000302 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000302 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
Declaration(Class(kisao:KISAO_0000303))
AnnotationAssertion(dc:creator kisao:KISAO_0000303 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000303 "An embedded Runge-Kutta method, proposed by J.A. Zonneveld in 1964."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000303 "Zonneveld method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000303 "2011-05-10"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Zonneveld, J. A (1970). Automatic numerical integration Mathematisch Centrum, Amsterdam"@en) rdfs:seeAlso kisao:KISAO_0000303 "http://trove.nla.gov.au/work/21424455"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000303 kisao:KISAO_0000302)
Declaration(Class(kisao:KISAO_0000304))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000304 "implicit Runge-Kutta method based on Radau quadrature"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000304 "2011-05-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000304 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000304 "JSim"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000304 "Implicit Runge-Kutta methods based on Radau quadrature."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000304 "Radau method"@en)
AnnotationAssertion(Annotation(rdfs:comment "J. C. Butcher, Integration processes based on Radau quadrature formulas, Math. Comput., 18(1964), 233–244."@en) rdfs:seeAlso kisao:KISAO_0000304 "urn:issn:1088-6842(e)"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000304 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000304 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000304 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000305))
AnnotationAssertion(skos:definition kisao:KISAO_0000305 "The first high order embedded Runge-Kutta formulas that avoid the drawback of giving identically zero error estimates for quadrature problems y' = f(x) were constructed by Verner in 1978."@en)
AnnotationAssertion(Annotation(rdfs:comment "J.H. Verner, Some Runge–Kutta formula pairs, SIAM J. Numer. Anal 28 (1991) 496–511"@en) rdfs:seeAlso kisao:KISAO_0000305 "urn:miriam:doi:10.1137/0728027"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000305 "Verner method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000305 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000305 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000305 "Verner's method"@en)
SubClassOf(kisao:KISAO_0000305 kisao:KISAO_0000302)
Declaration(Class(kisao:KISAO_0000306))
AnnotationAssertion(dc:created kisao:KISAO_0000306 "2011-05-11"^^xsd:date)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000306 "JSim"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000306 "Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption."@en)
AnnotationAssertion(Annotation(rdfs:comment "Bassingthwaighte JB, Chan IS, and Wang CY. Computationally efficient algorithms for capillary convection-permeation-diffusion models for blood-tissue exchange. Ann Biomed Eng 20: 687-725, 1992."@en) rdfs:seeAlso kisao:KISAO_0000306 "urn:miriam:pubmed:1449234"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000306 "BTEX"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000306 "blood-tissue exchange method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000306 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000306 "Lagrangian sliding fluid element algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000306 "LSFEA"@en)
SubClassOf(kisao:KISAO_0000306 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000372))
Declaration(Class(kisao:KISAO_0000307))
AnnotationAssertion(rdfs:label kisao:KISAO_0000307 "finite difference method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000307 "2011-05-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000307 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "Y. Saad. 2003. Iterative Methods for Sparse Linear Systems (2nd ed.). Soc. for Industrial and Applied Math., Philadelphia, PA, USA."@en) rdfs:seeAlso kisao:KISAO_0000307 "urn:miriam:isbn:0898715342"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000307 "FDM"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000307 "The finite difference method is based on local approximations of the partial derivatives in a Partial Differential Equation, which are derived by low order Taylor series expansions."@en)
SubClassOf(kisao:KISAO_0000307 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000307 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000307 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000307 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000307 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000346))
Declaration(Class(kisao:KISAO_0000308))
AnnotationAssertion(dc:creator kisao:KISAO_0000308 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "MacCormack, R. W., The Effect of viscosity in hypervelocity impact cratering, AIAA Paper, 69-354 (1969)."@en) rdfs:seeAlso kisao:KISAO_0000308 "urn:miriam:doi:10.2514/2.6901"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000308 "2011-05-11"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000308 "In computational fluid dynamics, the MacCormack method is a widely used discretization scheme for the numerical solution of hyperbolic partial differential equations. This second-order finite difference method [urn:miriam:biomodels.kisao:KISAO_0000307] is introduced by R. W. MacCormack in 1969."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000308 "MacCormack method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000308 "JSim"@en)
SubClassOf(kisao:KISAO_0000308 kisao:KISAO_0000307)
DisjointClasses(kisao:KISAO_0000308 kisao:KISAO_0000309)
Declaration(Class(kisao:KISAO_0000309))
AnnotationAssertion(Annotation(rdfs:comment "Crank, J.; Nicolson, P. (1947). A practical method for numerical evaluation of solutions of partial differential equations of the heat conduction type. Proc. Camb. Phil. Soc. 43 (1): 50–67."@en) rdfs:seeAlso kisao:KISAO_0000309 "urn:miriam:doi:10.1007/BF02127704"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000309 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000309 "Crank–Nicolson method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000309 "In numerical analysis, the Crank–Nicolson method is a finite difference method [urn:miriam:biomodels.kisao:KISAO_0000307] used for numerically solving the heat equation and similar partial differential equations. It is a second-order method in time, implicit in time, and is numerically stable. The method was developed by John Crank and Phyllis Nicolson in the mid 20th century."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000309 "2011-05-11"^^xsd:date)
SubClassOf(kisao:KISAO_0000309 kisao:KISAO_0000307)
SubClassOf(kisao:KISAO_0000309 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
DisjointClasses(kisao:KISAO_0000309 kisao:KISAO_0000308)
Declaration(Class(kisao:KISAO_0000310))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000310 "NMOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) rdfs:label kisao:KISAO_0000310 "method of lines"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000310 "The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000310 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000310 "2011-05-11"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000310 "MOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000310 "NUMOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "Schiesser, W. E. (1991). The Numerical Method of Lines. Academic Press."@en) rdfs:seeAlso kisao:KISAO_0000310 "urn:miriam:isbn:0126241309"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000310 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000310 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000310 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000310 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000346))
Declaration(Class(kisao:KISAO_0000311))
AnnotationAssertion(dc:creator kisao:KISAO_0000311 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000311 "type of domain geometry handling"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000311 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000311 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000314))
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000314 "E-Cell"@en)
AnnotationAssertion(Annotation(rdfs:comment "Irvine, D.H. and Savageau, M.A., Efficient solution of nonlinear ordinary differential equations expressed in S-System canonical form, Siam. J. Numer. Anal., 27:704–735, 1990."@en) rdfs:seeAlso kisao:KISAO_0000314 "urn:miriam:urn:doi:10.1137/0727042"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000314 "2011-05-20"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000314 "S-System power-law canonical differential equations solver"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000314 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000314 "ESSYNS GMA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000314 "Ordinary differential equations can be recast into a nonlinear canonical form called an S-system. Evidence for the generality of this class comes from extensive empirical examples that have been recast and from the discovery that sets of differential equations and functions, recognized as among the most general, are special cases of S-systems. Identification of this nonlinear canonical form suggests a radically different approach to numerical solution of ordinary differential equations. By capitalizing on the regular structure of S-systems, efficient formulas for a variable-order, variable-step Taylor-series method are developed. "@en)
SubClassOf(kisao:KISAO_0000314 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000314 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000314 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000314 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000314 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
Declaration(Class(kisao:KISAO_0000315))
AnnotationAssertion(Annotation(rdfs:comment "Dieter A. Wolf-Gladrow (2000). Lattice-Gas Cellular Automata and Lattice Boltzmann Models. Springer."@en) rdfs:seeAlso kisao:KISAO_0000315 "urn:miriam:isbn:3-540-66973-6"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000315 "lattice gas automata"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000315 "lattice gas cellular automata"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000315 "2011-05-23"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000315 "Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000315 "LGA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000315 "LGCA"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000315 "AZ"@en)
SubClassOf(kisao:KISAO_0000315 kisao:KISAO_0000068)
SubClassOf(kisao:KISAO_0000315 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
DisjointClasses(kisao:KISAO_0000315 kisao:KISAO_0000334)
Declaration(Class(kisao:KISAO_0000316))
AnnotationAssertion(skos:definition kisao:KISAO_0000316 "GFRD [urn:miriam:biomodels.kisao:KISAO_0000058] decomposes the multi­body reaction diffusion problem to a set of single and two body problems. Analytical solutions for two body reaction diffusion are available via Smoluchowski equation. eGFRD allows to solve each sub­problem asynchronously by introducing the concept of first passage processes."@en)
AnnotationAssertion(Annotation(rdfs:comment "K. Takahashi, An exact Brownian dynamics method for cell simulation, in Computational Methods in Systems Biology, vol. 5307/2008."@en) rdfs:seeAlso kisao:KISAO_0000316 "urn:miriam:doi:10.1007/978-3-540-88562-7_3"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000316 "enhanced Greens function reaction dynamics"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000316 "enhanced Greens function reaction dynamics"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000316 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000316 "2011-05-23"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000316 "eGFRD"@en)
SubClassOf(kisao:KISAO_0000316 kisao:KISAO_0000056)
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000058))
Declaration(Class(kisao:KISAO_0000317))
AnnotationAssertion(Annotation(rdfs:comment "Takahashi, K., Kaizu, K., Hu, B., and Tomita, M., A multi-algorithm, multi-timescale method for cell simulation. Bioinformatics, in press."@en) rdfs:seeAlso kisao:KISAO_0000317 "urn:miriam:pubmed:14990450"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000317 "2011-05-23"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000317 "A modular meta-algorithm with a discrete event scheduler that can incorporate any type of time-driven simulation algorithm. It was shown that this meta-algorithm can efficiently drive simulation models with different simulation algorithms with little intrusive modification to the algorithms themselves. Only a few additional methods to handle communications between computational modules are required."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000317 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000317 "E-Cell multi-algorithm simulation method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000317 "E-Cell"@en)
SubClassOf(kisao:KISAO_0000317 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000317 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322))
Declaration(Class(kisao:KISAO_0000318))
AnnotationAssertion(Annotation(rdfs:comment "Maitree Podisuk, Sirirat Khuntidilokwongsa, and Witchaya Rattanametawee. 2006. Gauss-Legendre Quadrature formula in Runge-Kutta method with modified model of Newton cooling law. In Proceedings of the 8th WSEAS international conference on Mathematical methods and computational techniques in electrical engineering (MMACTEE'06). World Scientific and Engineering Academy and Society (WSEAS), Stevens Point, Wisconsin, USA, 312-317."@en) rdfs:seeAlso kisao:KISAO_0000318 "urn:miriam:isbn:960-8457-54-8"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000318 "Open Formula"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000318 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000318 "2011-05-26"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000318 "So called 'Open Formula', two points formula, three points formula, four points formula, five points formula and six points formula of the Runge-Kutta method to solve the initial value problem of the ordinary differential equation. These formulas use the points and weights from the Gauss-Legendre Quadrature formulas for finding the value of the definite integral."@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000318 "iBioSim"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000318 "Gauss-Legendre Runge-Kutta method"@en)
SubClassOf(kisao:KISAO_0000318 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000318 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000318 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000318 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000319))
AnnotationAssertion(rdfs:label kisao:KISAO_0000319 "Monte Carlo method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Metropolis, N.; Ulam, S. (1949). \"The Monte Carlo Method\". Journal of the American Statistical Association (American Statistical Association) 44 (247): 335–341."@en) rdfs:seeAlso kisao:KISAO_0000319 "urn:miriam:doi:10.2307/2280232"^^xsd:anyURI)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000319 "true"^^xsd:boolean)
AnnotationAssertion(dc:created kisao:KISAO_0000319 "2011-05-26"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000319 "Monte Carlo methods (or Monte Carlo experiments) are a class of computational algorithms that rely on repeated random sampling to compute their results."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000319 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000319 "MC"@en)
SubClassOf(kisao:KISAO_0000319 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000319 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000319 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
SubClassOf(kisao:KISAO_0000319 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000371))
Declaration(Class(kisao:KISAO_0000320))
AnnotationAssertion(rdfs:label kisao:KISAO_0000320 "BioRica hybrid method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000320 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000320 "2011-05-26"^^xsd:date)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000320 "BioRica"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000320 "The simulation schema for a given BioRica node is given by a hybrid algorithm that deals with continuous time and allows for discrete events that roll back the time according to these discrete interruptions."@en)
AnnotationAssertion(Annotation(rdfs:comment "Cvijovic M, Soueidan H, Sherman DJ, Klipp E, Nikolski M. Exploratory simulation of cell ageing using hierarchical models. Genome Inform. 2008;21:114-25."@en) rdfs:seeAlso kisao:KISAO_0000320 "urn:miriam:pubmed:19425152"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000320 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000320 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000320 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322))
SubClassOf(kisao:KISAO_0000320 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000000))
Declaration(Class(kisao:KISAO_0000321))
AnnotationAssertion(dc:created kisao:KISAO_0000321 "2011-05-26"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "J. R. Cash, A. H. Karp. \"A variable order Runge-Kutta method for initial value problems with rapidly varying right-hand sides\", ACM Transactions on Mathematical Software 16: 201-222, 1990."@en) rdfs:seeAlso kisao:KISAO_0000321 "urn:miriam:doi:10.1145/79505.79507"^^xsd:anyURI)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000321 "Cain"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000321 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000321 "An family of explicit Runge-Kutta formulas, which are very efficient for problems with smooth solution as well as problems having rapidly varying solutions. Each member of this family consists of a fifty-order formula that contains embedded formulas of all orders 1 through 4. By computing solutions at several different orders, it is possible to detect sharp fronts or discontinuities before all the function evaluations defining the full Runge-Kutta step have been computed."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000321 "Cash–Karp method"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000321 "GSL"@en)
SubClassOf(kisao:KISAO_0000321 kisao:KISAO_0000302)
SubClassOf(kisao:KISAO_0000321 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer) kisao:KISAO_0000064)))
SubClassOf(kisao:KISAO_0000321 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(DataHasValue(kisao:KISAO_0000275 "5"^^xsd:integer) kisao:KISAO_0000064)))
Declaration(Class(kisao:KISAO_0000322))
AnnotationAssertion(rdfs:label kisao:KISAO_0000322 "hybridity"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000322 "The basic idea of hybrid simulation methods is to combine the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000322 "2011-05-27"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000322 "AZ"@en)
SubClassOf(kisao:KISAO_0000322 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000323))
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000323 "urn:miriam:doi:10.1063/1.2131050"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000323 "2011-06-02")
AnnotationAssertion(skos:definition kisao:KISAO_0000323 "We present a probabilistic steady-state approximation that separates the time scales of an arbitrary reaction network, detects the convergence of a marginal distribution to a quasi-steady-state, directly samples the underlying distribution, and uses those samples to accurately predict the state of the system, including the effects of the slow dynamics, at future times. The numerical method produces an accurate solution of both the fast and slow reaction dynamics while, for stiff systems, reducing the computational time by orders of magnitude. The developed theory makes no approximations on the shape or form of the underlying steady-state distribution and only assumes that it is ergodic. <...> The developed theory may be applied to any type of kinetic Monte Carlo simulation to more efficiently simulate dynamically stiff systems, including existing exact, approximate, or hybrid stochastic simulation techniques.
"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000323 "equation-free probabilistic steady-state approximation"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000323 "AZ"@en)
SubClassOf(kisao:KISAO_0000323 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000323 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000325))
SubClassOf(kisao:KISAO_0000323 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000326))
SubClassOf(kisao:KISAO_0000323 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000327))
SubClassOf(kisao:KISAO_0000323 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000328))
Declaration(Class(kisao:KISAO_0000324))
AnnotationAssertion(dc:created kisao:KISAO_0000324 "2011-06-02"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000324 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "E W., Liu D. and Vanden-Eijnden E. Nested stochastic simulation algorithm for chemical kinetic systems with disparate rates. J Chem Phys. 2005 Nov 15;123(19):194107.
"@en) rdfs:seeAlso kisao:KISAO_0000324 "urn:miriam:pubmed:16321076"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000324 "This multiscale method is a small modification of the Gillespie's direct method [urn:miriam:biomodels.kisao:KISAO_0000029], in the form of a nested SSA, with inner loops for the fast reactions, and outer loop for the slow reactions. The number of groups can be more than two, and the grouping into fast and slow  variables can be done dynamically in an adaptive version of the scheme."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000324 "nested SSA"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000324 "nested stochastic simulation algorithm"@en)
SubClassOf(kisao:KISAO_0000324 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000324 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000324 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000029))
Declaration(Class(kisao:KISAO_0000325))
AnnotationAssertion(dc:creator kisao:KISAO_0000325 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000325 "minimum fast/discrete reaction occurrences number"@en)
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000325 "urn:miriam:doi:10.1063/1.2131050"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000325 "Parameter of 'equation-free probabilistic steady-state approximation' method  [urn:miriam:biomodels.kisao:KISAO_0000323], which describes the minimum number of fast/discrete reaction occurrences before their effects cause convergence to a quasi-steady-state distribution."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000325 "2011-06-02")
SubClassOf(kisao:KISAO_0000325 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000325 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000323))
SubClassOf(kisao:KISAO_0000325 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000326))
AnnotationAssertion(skos:definition kisao:KISAO_0000326 "Parameter of 'equation-free probabilistic steady-state approximation' method [urn:miriam:biomodels.kisao:KISAO_0000323], which determines the number of samples taken from the distribution."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000326 "number of samples"@en)
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000326 "urn:miriam:doi:10.1063/1.2131050"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000326 "2011-06-02")
AnnotationAssertion(dc:creator kisao:KISAO_0000326 "AZ"@en)
SubClassOf(kisao:KISAO_0000326 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000326 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000323))
SubClassOf(kisao:KISAO_0000326 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000327))
AnnotationAssertion(skos:definition kisao:KISAO_0000327 "Parameter of 'equation-free probabilistic steady-state approximation' method [urn:miriam:biomodels.kisao:KISAO_0000323], which controls the maximum number of molecules of some reactant species in order for the reaction to be considered discrete."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000327 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000327 "maximum discrete number"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000327 "2011-06-02")
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000327 "urn:miriam:doi:10.1063/1.2131050"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000327 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000327 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000323))
SubClassOf(kisao:KISAO_0000327 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000328))
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000328 "urn:miriam:doi:10.1063/1.2131050"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000328 "Parameter of 'equation-free probabilistic steady-state approximation' method [urn:miriam:biomodels.kisao:KISAO_0000323], which controls the minimum rate of the reaction in order for it to be considered fast."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000328 "2011-06-02")
AnnotationAssertion(rdfs:label kisao:KISAO_0000328 "minimum fast rate"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000328 "AZ"@en)
SubClassOf(kisao:KISAO_0000328 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000328 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000323))
SubClassOf(kisao:KISAO_0000328 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))
Declaration(Class(kisao:KISAO_0000329))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000329 "SSA-CR"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000329 "The computational cost of the original SSA [urn:miriam:biomodels.kisao:KISAO_0000029] scaled linearly with the number of reactions in the network. Gibson and Bruck developed a logarithmic scaling version of the SSA which uses a priority queue or binary tree for more efficient reaction selection [urn:miriam:biomodels.kisao:KISAO_0000027]. More generally, this problem is one of dynamic discrete random variate generation which finds many uses in kinetic Monte Carlo and discrete event simulation. We present here a constant-time algorithm, whose cost is independent of the number of reactions, enabled by a slightly more complex underlying data structure."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000329 "2011-06-03"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000329 "constant-time kinetic Monte Carlo algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Slepoy A, Thompson AP, Plimpton SJ. A constant-time kinetic Monte Carlo algorithm for simulation of large biochemical reaction networks. J Chem Phys. 2008 May 28;128(20):205101."@en) rdfs:seeAlso kisao:KISAO_0000329 "urn:miriam:pubmed:18513044"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000329 "AZ"@en)
SubClassOf(kisao:KISAO_0000329 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000329 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000329 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
Declaration(Class(kisao:KISAO_0000330))
AnnotationAssertion(rdfs:label kisao:KISAO_0000330 "R-leaping algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Auger A, Chatelain P, Koumoutsakos P. R-leaping: accelerating the stochastic simulation algorithm by reaction leaps. J Chem Phys. 2006 Aug 28;125(8):084103."@en) rdfs:seeAlso kisao:KISAO_0000330 "urn:miriam:pubmed:16964997"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000330 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000330 "A novel algorithm is proposed for the acceleration of the exact stochastic simulation algorithm by a predefined number of reaction firings (R-leaping) that may occur across several reaction channels. In the present approach, the numbers of reaction firings are correlated binomial distributions and the sampling procedure is independent of any permutation of the reaction channels. This enables the algorithm to efficiently handle large systems with disparate rates, providing substantial computational savings in certain cases."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000330 "2011-06-03"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000330 "R-leap method"@en)
SubClassOf(kisao:KISAO_0000330 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000330 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
Declaration(Class(kisao:KISAO_0000331))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000331 "exact R-leap method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Eric Mjolsness, David Orendorff, Philippe Chatelain, and Petros Koumoutsakos. An exact accelerated stochastic simulation algorithm. J Chem Phys. 2009 April 14; 130(14): 144110."@en) rdfs:seeAlso kisao:KISAO_0000331 "urn:miriam:pubmed:2852436"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000331 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000331 "exact R-leaping algorithm"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000331 "2011-06-03"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000331 "ER-leap method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000331 "exact accelerated stochastic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000331 "We present a SSA which, similar to R-leap [urn:miriam:biomodels.kisao:KISAO_0000330], accelerates SSA [urn:miriam:biomodels.kisao:KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA."@en)
SubClassOf(kisao:KISAO_0000331 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000331 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000331 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000330))
Declaration(Class(kisao:KISAO_0000332))
AnnotationAssertion(dc:creator kisao:KISAO_0000332 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000332 "L"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000332 "ER-leap initial leap"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000332 "2011-06-03"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Eric Mjolsness, David Orendorff, Philippe Chatelain, and Petros Koumoutsakos. An exact accelerated stochastic simulation algorithm. J Chem Phys. 2009 April 14; 130(14): 144110."@en) rdfs:seeAlso kisao:KISAO_0000332 "urn:miriam:pubmed:2852436"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000332 "L (initial step) is a parameter of 'exact R-leaping method' [urn:miriam:biomodels.kisao:KISAO_0000331]. ''We will assume that the reaction event to be bounded occurs within a run of L events in the SSA algorithm[urn:miriam:biomodels.kisao:KISAO_0000029], in order to execute L reactions at once in the manner of the R-leap algorithm[urn:miriam:biomodels.kisao:KISAO_0000230]''."@en)
SubClassOf(kisao:KISAO_0000332 kisao:KISAO_0000244)
SubClassOf(kisao:KISAO_0000332 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000331))
SubClassOf(kisao:KISAO_0000332 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
Declaration(Class(kisao:KISAO_0000333))
AnnotationAssertion(skos:definition kisao:KISAO_0000333 "An algorithm, which accelerates SSA [urn:miriam:biomodels.kisao:KISAO_0000029] either at the expense of its accuracy or exact."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000333 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000333 "accelerated SSA"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000333 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000333 "accelerated stochastic simulation algorithm"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000333 "2011-06-03"^^xsd:date)
SubClassOf(kisao:KISAO_0000333 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000333 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000029))
Declaration(Class(kisao:KISAO_0000334))
AnnotationAssertion(rdfs:label kisao:KISAO_0000334 "multiparticle lattice gas automata"@en)
AnnotationAssertion(Annotation(rdfs:comment "Chopard B., et al.Multiparticle lattice gas automata for reaction diffusion systems. Int. J. Mod. Phys. C 1994;5:47-63."@en) rdfs:seeAlso kisao:KISAO_0000334 "urn:miriam:doi:10.1142/S0129183194000052"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000334 "multiparticle lattice gas cellular automata"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000334 "An algorithm which allows  for an arbitrary number of particles, while keeping the benefits of the cellular automata approach [urn:miriam:biomodels.kisao:KISAO_0000315]."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000334 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000334 "2011-06-03"^^xsd:date)
SubClassOf(kisao:KISAO_0000334 kisao:KISAO_0000068)
SubClassOf(kisao:KISAO_0000334 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000334 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000315))
DisjointClasses(kisao:KISAO_0000334 kisao:KISAO_0000315)
Declaration(Class(kisao:KISAO_0000335))
AnnotationAssertion(rdfs:label kisao:KISAO_0000335 "generalized stochastic simulation algorithm"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000335 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000335 "true"^^xsd:boolean)
AnnotationAssertion(dc:created kisao:KISAO_0000335 "2011-06-03"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000335 "Gillespie direct method [urn:miriam:biomodels.kisao:KISAO_0000029] follows unit-by-unit changes in the total numbers of each reactant species, it is especially well suited to the study of systems in which reactant densities are low and the application of methods based on continuum approximations, such as the traditional ordinary differential equations of chemical kinetics, is questionable. The 'generalized stochastic simulation algorithm' branch presents methods, which extend Gillespie direct method [urn:miriam:biomodels.kisao:KISAO_0000029] to suit to systems with other characteristics."@en)
SubClassOf(kisao:KISAO_0000335 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000335 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000029))
Declaration(Class(kisao:KISAO_0000336))
AnnotationAssertion(skos:definition kisao:KISAO_0000336 "We propose a novel, accelerated algorithm for the approximate stochastic simulation of biochemical systems with delays. The present work extends existing accelerated algorithms by distributing, in a time adaptive fashion, the delayed reactions so as to minimize the computational effort while preserving their accuracy."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000336 "2011-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000336 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bayati B, Chatelain P, Koumoutsakos. D-leaping: Accelerating stochastic simulation algorithms for reactions with delays. Journal of Computational Physics. 2009 Sept;228(16):5909-5918."@en) rdfs:seeAlso kisao:KISAO_0000336 "urn:miriam:doi:10.1016/j.jcp.2009.05.004"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000336 "D-leaping method"@en)
SubClassOf(kisao:KISAO_0000336 kisao:KISAO_0000335)
SubClassOf(kisao:KISAO_0000336 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
DisjointClasses(kisao:KISAO_0000336 kisao:KISAO_0000095)
Declaration(Class(kisao:KISAO_0000337))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000337 "FEA"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000337 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000337 "A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [urn:miriam:biomodels.kisao:KISAO_0000261], Runge-Kutta [urn:miriam:biomodels.kisao:KISAO_0000064], etc."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000337 "finite element analysis"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000337 "finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000337 "FEM"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000337 "2011-06-07"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Pelosi G. The finite-element method, Part I: R. L. Courant: Historical Corner. IEEE Antennas and Propagation Magazine, Vol. 49, No. 2. (April 2007), pp. 180-182."@en) rdfs:seeAlso kisao:KISAO_0000337 "urn:miriam:doi:10.1109/MAP.2007.376627"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000337 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000337 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000337 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000337 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000346))
Declaration(Class(kisao:KISAO_0000338))
AnnotationAssertion(rdfs:label kisao:KISAO_0000338 "h-version of the finite element method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000338 "Classical form of the 'finite element method' [urn:miriam:biomodels.kisao:KISAO_0000337], in which polynomials of fixed degree p are used and the mesh is refined to increase accuracy. Can be considered as a special case of the h-p version [urn:miriam:biomodels.kisao:KISAO_0000340]."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000338 "2011-06-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000338 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000338 "h-FEM"@en)
AnnotationAssertion(Annotation(rdfs:comment "Babuska, I., T. Strouboulis, A. Mathur, C. S. Upadhyay, Pollution error in the h-version of the finite element method and the local quality of a-posteriori error estimators, Finite Elements in Analysis and Design, 17: 273-321, 1994."@en) rdfs:seeAlso kisao:KISAO_0000338 "urn:miriam:doi:10.1016/0168-874X(94)90003-5"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000338 "h-method"@en)
SubClassOf(kisao:KISAO_0000338 kisao:KISAO_0000337)
Declaration(Class(kisao:KISAO_0000339))
AnnotationAssertion(dc:creator kisao:KISAO_0000339 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000339 "p-FEM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000339 "p-method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Babuska, I., B.A. Szabo and I.N. Katz, The p-version of the finite element method, SIAM J. Numer. Anal., 18: 515-545, 1981."@en) rdfs:seeAlso kisao:KISAO_0000339 "urn:miriam:doi:10.1137/0718033"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000339 "The p version of 'finite element method' [urn:miriam:biomodels.kisao:KISAO_0000337] uses a fixed mesh but increases the polynomial degree p to increase accuracy. Can be considered as a special case of the h-p version [urn:miriam:biomodels.kisao:KISAO_0000340]."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000339 "p-version of the finite element method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000339 "2011-06-07"^^xsd:date)
SubClassOf(kisao:KISAO_0000339 kisao:KISAO_0000337)
Declaration(Class(kisao:KISAO_0000340))
AnnotationAssertion(rdfs:label kisao:KISAO_0000340 "h-p version of the finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000340 "hp-method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Babuska, I., and B. Guo, The h-p version of the finite element method, Comput. Mech., 1: 203-220, 1986."@en) rdfs:seeAlso kisao:KISAO_0000340 "urn:miriam:doi:10.1007/BF00272624"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000340 "In h-p version of 'finite difference method' [urn:miriam:biomodels.kisao:KISAO_0000337] the two approaches of mesh refinement and degree enchacement are combined."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000340 "2011-06-07"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000340 "hp-FEM"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000340 "AZ"@en)
SubClassOf(kisao:KISAO_0000340 kisao:KISAO_0000337)
SubClassOf(kisao:KISAO_0000340 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000338))
SubClassOf(kisao:KISAO_0000340 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000339))
DisjointClasses(kisao:KISAO_0000340 kisao:KISAO_0000341)
Declaration(Class(kisao:KISAO_0000341))
AnnotationAssertion(rdfs:label kisao:KISAO_0000341 "mixed finite element method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000341 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000341 "A 'finite element method' [urn:miriam:biomodels.kisao:KISAO_0000337] in which both stress and displacement fields are approximated as primary variables."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000341 "2011-06-07"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "D. N. Arnold. 1990. Mixed finite element methods for elliptic problems. Comput. Methods Appl. Mech. Eng. 82, 1-3 (September 1990), 281-300."@en) rdfs:seeAlso kisao:KISAO_0000341 "urn:miriam:doi:10.1016/0045-7825(90)90168-L"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000341 kisao:KISAO_0000337)
DisjointClasses(kisao:KISAO_0000341 kisao:KISAO_0000340)
Declaration(Class(kisao:KISAO_0000342))
AnnotationAssertion(skos:definition kisao:KISAO_0000342 "An algorithm for moving surfaces under their curvature. This algorithm rely on numerically solving Hamilton-Jacobi equations with viscous terms, using approximation techniques from hyperbolic conservation laws."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000342 "level set method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Osher, S.; Sethian, J. A. (1988), \"Fronts propagating with curvature-dependent speed: Algorithms based on Hamilton-Jacobi formulations\", J. Comput. Phys. 79: 12–49."@en) rdfs:seeAlso kisao:KISAO_0000342 "urn:miriam:doi:10.1016/0021-9991(88)90002-2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000342 "level-set method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000342 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000342 "2011-06-07"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000342 "LSM"@en)
SubClassOf(kisao:KISAO_0000342 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000342 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376)))
Declaration(Class(kisao:KISAO_0000343))
AnnotationAssertion(dc:created kisao:KISAO_0000343 "2011-06-07"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000343 "generalized finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000343 "GFEM"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000343 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000343 "partition of unity method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000343 "The GFEM is a generalization of the classical 'finite element method' [urn:miriam:biomodels.kisao:KISAO_0000337] — in its h [urn:miriam:biomodels.kisao:KISAO_0000338], p [urn:miriam:biomodels.kisao:KISAO_0000339], and h-p versions [urn:miriam:biomodels.kisao:KISAO_0000340]— as well as of the various forms of meshless methods used in engineering."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000343 "PUM"@en)
AnnotationAssertion(Annotation(rdfs:comment "Babuska, Ivo; Uday Banerjee, John E. Osborn (June 2004). Generalized Finite Element Methods: Main Ideas, Results, and Perspective. International Journal of Computational Methods 1 (1): 67–103."@en) rdfs:seeAlso kisao:KISAO_0000343 "urn:miriam:doi:10.1142/S0219876204000083"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000343 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000347))
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000337))
Declaration(Class(kisao:KISAO_0000345))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000345 "h-p clouds"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000345 "h-p cloud method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000345 "method of clouds"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000345 "2011-06-09"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Duarte, C. A. and Oden, J. T. (1996), H-p clouds—an h-p meshless method. Numerical Methods for Partial Differential Equations, 12: 673–705."@en) rdfs:seeAlso kisao:KISAO_0000345 "urn:miriam:doi:10.1002/(SICI)1098-2426(199611)12:6<673::AID-NUM3>3.0.CO;2-P"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000345 "A meshless method, which uses a partition of unity to construct the family of h-p cloud functions. "@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000345 "AZ"@en)
SubClassOf(kisao:KISAO_0000345 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000345 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000345 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000345 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000345 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000347))
Declaration(Class(kisao:KISAO_0000346))
AnnotationAssertion(rdfs:label kisao:KISAO_0000346 "mesh-based"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000346 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000346 "In most large-scale numerical simulations of physical phenomena, a large percentage of the overall computational effort is expended on technical details connected with meshing. These details include, in particular, grid generation, mesh adaptation to domain geometry, element or cell connectivity, grid motion and separation to model fracture, fragmentation, free surfaces, etc."@en)
SubClassOf(kisao:KISAO_0000346 kisao:KISAO_0000311)
DisjointClasses(kisao:KISAO_0000346 kisao:KISAO_0000347)
Declaration(Class(kisao:KISAO_0000347))
AnnotationAssertion(dc:creator kisao:KISAO_0000347 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000347 "meshless"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000347 "Most meshless methods require a scattered set of nodal points in the domain of interest. In these methods, there may be no fixed connectivities between the nodes, unlike the finite element or finite difference methods. This feature has significant implications in modeling some physical phenomena that are characterized by a continuous change in the geometry of the domain under analysis. "@en)
SubClassOf(kisao:KISAO_0000347 kisao:KISAO_0000311)
DisjointClasses(kisao:KISAO_0000347 kisao:KISAO_0000346)
Declaration(Class(kisao:KISAO_0000348))
AnnotationAssertion(skos:definition kisao:KISAO_0000348 "A numerical method to model arbitrary discontinuities in continuous bodies that does not require the mesh to conform to the discontinuities nor significant mesh refinement near singularities. In X-FEM the standard finite element approximation [urn:miriam:biomodels.kisao:KISAO_0000337] is enriched and the approximation space is extended by an additional family of functions."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000348 "XFEM"@en)
AnnotationAssertion(Annotation(rdfs:comment "Stazi, F. L.; Budyn, E.; Chessa, J.; Belytschko, T. An extended finite element method with higher-order elements for curved cracks. Computational Mechanics, Volume 31, Issue 1-2, pp. 38-48 (2003)."@en) rdfs:seeAlso kisao:KISAO_0000348 "urn:miriam:doi:10.1007/s00466-002-0391-2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000348 "X-FEM"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000348 "2011-06-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000348 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000348 "extended finite element method"@en)
SubClassOf(kisao:KISAO_0000348 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000348 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000348 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000348 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000347))
SubClassOf(kisao:KISAO_0000348 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000337))
Declaration(Class(kisao:KISAO_0000349))
AnnotationAssertion(dc:creator kisao:KISAO_0000349 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000349 "2011-06-09"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000349 "method of finite spheres"@en)
AnnotationAssertion(Annotation(rdfs:comment "S. De and K. J. Bathe. The method of finite spheres. Computational Mechanics, Volume 25, Number 4, 329-345."@en) rdfs:seeAlso kisao:KISAO_0000349 "urn:miriam:doi:10.1007/s004660050481"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000349 "Method of finite spheres is truly meshless in the sense that the nodes are placed and the numerical integration is performed without a mesh. Some of the novel features of the method of finite spheres are the numerical integration scheme and the way in which the Dirichlet boundary conditions are incorporated."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000349 "MFS"@en)
SubClassOf(kisao:KISAO_0000349 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000349 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000349 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000349 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000347))
Declaration(Class(kisao:KISAO_0000350))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000350 "PW-DMC"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000350 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000350 "probability-weighted DMC"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000350 "We have developed a probability-weighted DMC method by incorporating the weighted sampling algorithm of equilibrium molecular simulations. This new algorithm samples the slow reactions very efficiently and makes it possible to simulate in a computationally efficient manner the reaction kinetics of physical systems in which the rates of reactions vary by several orders of magnitude."@en)
AnnotationAssertion(Annotation(rdfs:comment "Resat H, Wiley HS, Dixon DA. Probability-weighted dynamic Monte Carlo method for reaction kinetics simulations. J Phys Chem B. 2001;105:11026–11034."@en) rdfs:seeAlso kisao:KISAO_0000350 "urn:miriam:doi:10.1021/jp011404w"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000350 "2011-06-09"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000350 "probability-weighted dynamic Monte Carlo method"@en)
SubClassOf(kisao:KISAO_0000350 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000350 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
Declaration(Class(kisao:KISAO_0000351))
AnnotationAssertion(skos:definition kisao:KISAO_0000351 "The multinomial tau-leaping method  is an extension of the binomial tau-leaping method [urn:miriam:biomodels.kisao:KISAO_0000074] to networks with arbitrary multiple-channel reactant dependencies. Improvements were achieved by a combination of three factors: First, tau-leaping steps are determined simply and efficiently using a-priori information and Poisson distribution based estimates of expectation values for reaction numbers. Second, networks are partitioned into closed groups of reactions and corresponding reactants in which no group reactant set is found in any other group. Third, product formation is factored into upper bound estimation of the number of times a particular reaction occurs."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000351 "2011-06-09"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Pettigrew MF, Resat H. Multinomial tau-leaping method for stochastic kinetic simulations. J Chem Phys. 2007 Feb 28;126(8):084101."@en) rdfs:seeAlso kisao:KISAO_0000351 "urn:miriam:pubmed:17343434"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000351 "MtauL"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000351 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000351 "multinomial tau-leaping method"@en)
SubClassOf(kisao:KISAO_0000351 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000351 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000074))
Declaration(Class(kisao:KISAO_0000352))
AnnotationAssertion(dc:created kisao:KISAO_0000352 "2011-06-09"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000352 "A simulation methods which combines the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000352 "true"^^xsd:boolean)
AnnotationAssertion(dc:creator kisao:KISAO_0000352 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000352 "hybrid method"@en)
EquivalentClasses(kisao:KISAO_0000352 ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322) kisao:KISAO_0000000))
SubClassOf(kisao:KISAO_0000352 kisao:KISAO_0000000)
Declaration(Class(kisao:KISAO_0000353))
AnnotationAssertion(dc:creator kisao:KISAO_0000353 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000353 "2011-06-10"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000353 "An iterative method for solving linear systems, which has the property of minimizing at every step the norm of the residual vector over a Krylov subspace. The generalized minimal residual method extends the minimal residual method (MINRES) [urn:miriam:biomodels.kisao:KISAO_0000388], which is only applicable to symmetric systems, to non-symmetric systems."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000353 "generalized minimal residual algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000353 "GMRES"@en)
AnnotationAssertion(Annotation(rdfs:comment "Youcef Saad and Martin H. Schultz, GMRES: A Generalized Minimal Residual Algorithm for Solving Nonsymmetric Linear Systems. SIAM J. Sci. and Stat. Comput. 7, 856 (1986)."@en) rdfs:seeAlso kisao:KISAO_0000353 "urn:miriam:doi:10.1137/0907058"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000353 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000353 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000353 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000388))
Declaration(Class(kisao:KISAO_0000354))
AnnotationAssertion(skos:definition kisao:KISAO_0000354 "Krylov subspace method is an iterative linear equation method, which builds up Krylov subspaces and look for good approximations to eigenvectors and invariant subspaces within the Krylov spaces."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000354 "2011-06-10"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Y. Saad. 2003. Iterative Methods for Sparse Linear Systems (2nd ed.). Soc. for Industrial and Applied Math., Philadelphia, PA, USA."@en) rdfs:seeAlso kisao:KISAO_0000354 "urn:miriam:isbn:0898715342"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000354 "Krylov subspace projection method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000354 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000354 "Krylov subspace method"@en)
SubClassOf(kisao:KISAO_0000354 kisao:KISAO_0000398)
SubClassOf(kisao:KISAO_0000354 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000354 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
Declaration(Class(kisao:KISAO_0000355))
AnnotationAssertion(skos:definition kisao:KISAO_0000355 "In DASPK, we have combined the time-stepping methods of DASSL [urn:miriam:biomodels.kisao:KISAO_0000255] with preconditioned iterative method GMRES [urn:miriam:biomodels.kisao:KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000355 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000355 "DDASPK"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000355 "differential algebraic system solver with Krylov preconditioning"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000355 "2011-06-10"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000355 "DASPK"@en)
AnnotationAssertion(Annotation(rdfs:comment "Peter N. Brown, Alan C. Hindmarsh, and Linda R. Petzold. 1994. Using Krylov methods in the solution of large-scale differential-algebraic systems. SIAM J. Sci. Comput. 15, 6 (November 1994), 1467-1488."@en) rdfs:seeAlso kisao:KISAO_0000355 "urn:miriam:doi:10.1137/0915088"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000355 "SDASPK"@en)
SubClassOf(kisao:KISAO_0000355 kisao:KISAO_0000284)
SubClassOf(kisao:KISAO_0000355 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))
SubClassOf(kisao:KISAO_0000355 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000353))
SubClassOf(kisao:KISAO_0000355 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000356))
SubClassOf(kisao:KISAO_0000355 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000386))
DisjointClasses(kisao:KISAO_0000355 kisao:KISAO_0000019)
Declaration(Class(kisao:KISAO_0000356))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000356 "differential algebraic system solver"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000356 "DASSL"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000356 "2011-06-10"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000356 "DDASSL"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000356 "DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given."@en)
AnnotationAssertion(Annotation(rdfs:comment "Linda R. Petzold: A Description of DASSL: A Differential/Algebraic System Solver, SAND82-8637 (September 1982)."@en) rdfs:seeAlso kisao:KISAO_0000356 "http://www.nea.fr/abs/html/nesc9918.html"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000356 "SDASSL"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000356 "AZ"@en)
SubClassOf(kisao:KISAO_0000356 kisao:KISAO_0000284)
SubClassOf(kisao:KISAO_0000356 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))
DisjointClasses(kisao:KISAO_0000356 kisao:KISAO_0000020)
Declaration(Class(kisao:KISAO_0000357))
AnnotationAssertion(rdfs:label kisao:KISAO_0000357 "conjugate gradient method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000357 "Conjugate gradient method is an algorithm for the numerical solution of particular systems of linear equations, namely those whose matrix is symmetric and positive-definite. The conjugate gradient method is an iterative method, so it can be applied to sparse systems that are too large to be handled by direct methods. Such systems often arise when numerically solving partial differential equations."@en)
AnnotationAssertion(Annotation(rdfs:comment "M. R. Hestenes and E. L. Stiefel , Methods of conjugate gradients for solving linear systems. J. Res. Natl. Bur. Stand. 49 (1952), p. 409."@en) rdfs:seeAlso kisao:KISAO_0000357 "urn:issn:0091-0635"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000357 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000357 "2011-06-10"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000357 "CG"@en)
SubClassOf(kisao:KISAO_0000357 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000357 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000404))
Declaration(Class(kisao:KISAO_0000358))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000358 "Bi-CG"@en)
AnnotationAssertion(Annotation(rdfs:comment "Fletcher, R. (1976). \"Conjugate gradient methods for indefinite systems\". Numerical Analysis. Lecture Notes in Mathematics (Springer Berlin / Heidelberg) 506: 73–89."@en) rdfs:seeAlso kisao:KISAO_0000358 "urn:miriam:doi:10.1007/BFb0080109"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000358 "The biconjugate gradient method provides a generalization of conjugate gradient method [urn:miriam:biomodels.kisao:KISAO_0000357] to non-symmetric matrices."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000358 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000358 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000358 "BiCG"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000358 "BCG"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000358 "biconjugate gradient method"@en)
SubClassOf(kisao:KISAO_0000358 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000358 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000357))
Declaration(Class(kisao:KISAO_0000362))
AnnotationAssertion(rdfs:label kisao:KISAO_0000362 "implicit-state Doob-Gillespie algorithm"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000362 "2011-06-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000362 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "V. Danos, J. Feret, W. Fontana, and J. Krivine. 2007. Scalable simulation of cellular signalling networks. In Proceedings of the 5th Asian conference on Programming languages and systems (APLAS'07), Zhong Shao (Ed.). Springer-Verlag, Berlin, Heidelberg, 139-157."@en) rdfs:seeAlso kisao:KISAO_0000362 "urn:miriam:isbn:3-540-76636-7 978-3-540-76636-0"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000362 "The algorithm uses a representation of the system together with a super-approximation of its ‘event horizon’ (all events that may happen next), and a specific correction scheme to obtain exact timings. Being completely local and not based on any kind of enumeration, this algorithm has a per event time cost which is independent of (i) the size of the set of generable species (which can even be infinite), and (ii) independent of the size of the system (ie, the number of agent instances). The algorithm can be refined, using concepts derived from the classical notion of causality, so that in addition to the above one also has that the even cost is depending (iii) only logarithmically on the size of the model (ie, the number of rules).
"@en)
SubClassOf(kisao:KISAO_0000362 kisao:KISAO_0000017)
SubClassOf(kisao:KISAO_0000362 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000021))
SubClassOf(kisao:KISAO_0000362 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000029))
DisjointClasses(kisao:KISAO_0000362 kisao:KISAO_0000263)
Declaration(Class(kisao:KISAO_0000363))
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000363 "true"^^xsd:boolean)
AnnotationAssertion(dc:created kisao:KISAO_0000363 "2011-06-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000363 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000363 "Rule-based models provide a powerful alternative to approaches that require explicit enumeration of all possible molecular species of a system. Such models consist of formal rules governing interactive behaviour. Rule-based simulation methods are methods, used to simulated such models."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000363 "rule-based simulation method"@en)
SubClassOf(kisao:KISAO_0000363 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000363 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
Declaration(Class(kisao:KISAO_0000364))
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000364 "GSL"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000364 "2011-06-16"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000364 "Adams predictor-corrector method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000364 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "Moulton, Forest R. (1926), New methods in exterior ballistics, University of Chicago Press."@en) rdfs:seeAlso kisao:KISAO_0000364 "urn:asin:B0000EFQ8B"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000364 "The combination of evaluating a single explicit integration method ('Adams–Bashforth method' [urn:miriam:biomodels.kisao:KISAO_0000279]) (the predictor step) in order to provide a good initial guess for the successive evaluation of an implicit method ('Adams-Moulton method' [urn:miriam:biomodels.kisao:KISAO_0000280]) (the corrector step) using iteration."@en)
SubClassOf(kisao:KISAO_0000364 kisao:KISAO_0000289)
SubClassOf(kisao:KISAO_0000364 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000279))
SubClassOf(kisao:KISAO_0000364 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000280))
Declaration(Class(kisao:KISAO_0000365))
AnnotationAssertion(rdfs:label kisao:KISAO_0000365 "NDSolve method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000365 "2011-06-16"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000365 "The Mathematica computation system function NDSolve is a general numerical differential equation solver. It can handle a wide range of ordinary differential equations as well as some partial differential equations. NDSolve can also solve some differential-algebraic equations, which are typically a mix of differential and algebraic equations."@en)
AnnotationAssertion(Annotation(rdfs:comment "Advanced Numerical Differential Equation Solving in Mathematica, Wolfram Mathematica Tutorial Collection, 2008."@en) rdfs:seeAlso kisao:KISAO_0000365 "urn:miriam:isbn:978-1-57955-058-5"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000365 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000365 "Mathematica"@en)
SubClassOf(kisao:KISAO_0000365 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000288))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000302))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000310))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000364))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000367))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240) kisao:KISAO_0000064)))
Declaration(Class(kisao:KISAO_0000366))
AnnotationAssertion(dc:creator kisao:KISAO_0000366 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000366 "symplecticness"@en)
AnnotationAssertion(Annotation(rdfs:comment " J. M. Sanz-Serna (1992). Symplectic integrators for Hamiltonian problems: an overview. Acta Numerica, 1, pp 243-286"@en) rdfs:seeAlso kisao:KISAO_0000366 "urn:miriam:doi:10.1017/S0962492900002282"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000366 "2011-06-16"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000366 "Roughly speaking, ‘symplecticness’ is a characteristic property possessed by the solutions of Hamiltonian problems. A numerical method is called symplectic if, when applied to Hamiltonian problems, it generates numerical solutions which inherit the property of symplecticness (phase volume preservation)."@en)
SubClassOf(kisao:KISAO_0000366 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000367))
AnnotationAssertion(dc:creator kisao:KISAO_0000367 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "P. Rentrop (1985): Partitioned Runge-Kutta methods with stiffness detection and stepsize control. Numer. Math., Vol. 47, p.545-564."@en) rdfs:seeAlso kisao:KISAO_0000367 "urn:miriam:doi:10.1007/BF01389456"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000367 "2011-06-16"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000367 "symplectic partitioned Runge-Kutta method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000367 "PRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000367 "SPRK"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000367 "If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000367 "partitioned Runge-Kutta method"@en)
SubClassOf(kisao:KISAO_0000367 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000367 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366))
SubClassOf(kisao:KISAO_0000367 ObjectMinCardinality(2 kisao:KISAO_0000360 kisao:KISAO_0000064))
Declaration(Class(kisao:KISAO_0000369))
AnnotationAssertion(rdfs:label kisao:KISAO_0000369 "partial differential equation discretization method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000369 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000369 "true"^^xsd:boolean)
AnnotationAssertion(dc:created kisao:KISAO_0000369 "2011-06-27"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000369 "A method which solves partial differential equations by discretizing them, i.e. approximating them by equations that involve a finite number of unknowns."@en)
SubClassOf(kisao:KISAO_0000369 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000369 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000369 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000372))
Declaration(Class(kisao:KISAO_0000370))
AnnotationAssertion(dc:created kisao:KISAO_0000370 "2011-06-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000370 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000370 "type of problem"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000370 "A characteristic describing the type of the problems which can be solved by the algorithm."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000370 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000370 kisao:KISAO_0000097)
Declaration(Class(kisao:KISAO_0000371))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000371 "SDE problem"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000371 "stochastic differential equation problem"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000371 "AZ"@en)
SubClassOf(kisao:KISAO_0000371 kisao:KISAO_0000405)
Declaration(Class(kisao:KISAO_0000372))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000372 "PDE problem"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000372 "partial differential equation problem"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000372 "AZ"@en)
SubClassOf(kisao:KISAO_0000372 kisao:KISAO_0000405)
Declaration(Class(kisao:KISAO_0000373))
AnnotationAssertion(dc:creator kisao:KISAO_0000373 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000373 "DAE"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000373 "differential-algebraic equation problem"@en)
SubClassOf(kisao:KISAO_0000373 kisao:KISAO_0000405)
Declaration(Class(kisao:KISAO_0000374))
AnnotationAssertion(rdfs:label kisao:KISAO_0000374 "ordinary differential equation problem"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000374 "ODE problem"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000374 "AZ"@en)
SubClassOf(kisao:KISAO_0000374 kisao:KISAO_0000405)
Declaration(Class(kisao:KISAO_0000375))
AnnotationAssertion(skos:altLabel kisao:KISAO_0000375 "DDE problem"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000375 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000375 "delay differential equation problem"@en)
SubClassOf(kisao:KISAO_0000375 kisao:KISAO_0000405)
Declaration(Class(kisao:KISAO_0000376))
AnnotationAssertion(dc:created kisao:KISAO_0000376 "2011-07-19"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000376 "linearity of equation"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000376 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000376 "Linear differential equations are of the form Ly = f, where the differential operator L is a linear operator, y is the unknown function, and the right hand side f is a given function of the same nature as y."@en)
SubClassOf(kisao:KISAO_0000376 kisao:KISAO_0000370)
Declaration(Class(kisao:KISAO_0000377))
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000377 "urn:miriam:isbn:978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000377 "true"^^xsd:boolean)
AnnotationAssertion(dc:creator kisao:KISAO_0000377 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000377 "one-step method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000377 "A numerical method for differential equations which uses one starting value at each step."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000377 "2011-06-30"^^xsd:date)
SubClassOf(kisao:KISAO_0000377 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000377 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000377 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
Declaration(Class(kisao:KISAO_0000378))
AnnotationAssertion(dc:created kisao:KISAO_0000378 "2011-06-30"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000378 "implicit Gaussian second order Runge-Kutta method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag."@en) rdfs:seeAlso kisao:KISAO_0000378 "urn:miriam:isbn:978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000378 "implicit midpoint rule"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000378 "GSL"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000378 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000378 "The implicit midpoint rule is a second-order case of the more general implicit s-stage Runge–Kutta methods [urn:miriam:biomodels.kisao:KISAO_0000064 and (urn:miriam:biomodels.kisao:KISAO_0000245 some urn:miriam:biomodels.kisao:KISAO_0000240)]."@en)
SubClassOf(kisao:KISAO_0000378 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000378 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000378 DataHasValue(kisao:KISAO_0000275 "2"^^xsd:integer))
Declaration(Class(kisao:KISAO_0000379))
AnnotationAssertion(dc:creator kisao:KISAO_0000379 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000379 "Bulirsch-Stoer algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000379 "GBS"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bulirsch R. and Stoer J. (1966) Numerical treatment of ordinary differential equations by extrapolation methods, Numerische Mathematik, Volume 8, Number 1, 1-13."@en) rdfs:seeAlso kisao:KISAO_0000379 "urn:miriam:doi:10.1007/BF02165234"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000379 "2011-07-01"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000379 "The Bulirsch-Stoer method is an adaptive method which uses Gragg's modified midpoint method [urn:miriam:biomodels.kisao:KISAO_0000382] to estimate the solution of an initial value problem for various step sizes. The estimates are fit to a \"diagonal\" rational function or a polynomial as a function of the step size and the limit as the step size tends to zero is taken as the final estimate."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000379 "Gragg-Bulirsch-Stoer algorithm"@en)
SubClassOf(kisao:KISAO_0000379 kisao:KISAO_0000380)
SubClassOf(kisao:KISAO_0000379 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000379 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000379 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000382))
Declaration(Class(kisao:KISAO_0000380))
AnnotationAssertion(rdfs:label kisao:KISAO_0000380 "Richardson extrapolation based method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Richardson, L. F. (1911). The approximate arithmetical solution by finite differences of physical problems including differential equations, with an application to the stresses in a masonry dam. Philosophical Transactions of the Royal Society of London, Series A 210 (459-470): 307–357."@en) rdfs:seeAlso kisao:KISAO_0000380 "urn:miriam:doi:10.1098/rsta.1911.0009"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000380 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000380 "A method based on ideas of Richardson extrapolation, which is a process for obtaining increased accuracy in a discretized approximation by extrapolating results from coarse discretizations to an arbitrarily fine one."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000380 "2011-07-01"^^xsd:date)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000380 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000380 kisao:KISAO_0000377)
Declaration(Class(kisao:KISAO_0000381))
AnnotationAssertion(skos:definition kisao:KISAO_0000381 "The midpoint method is an explicit method for approximating the solution of the initial value problem y' = f(x,y);  y(x0) = y0 at x for a given step size h. For the midpoint method the derivative of y(x) is approximated by the symmetric difference y'(x) = ( y(x+h) - y(x-h) ) / 2h + O(h2)."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000381 "2011-07-01"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000381 "midpoint method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag."@en) rdfs:seeAlso kisao:KISAO_0000381 "urn:miriam:isbn:978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000381 "AZ"@en)
SubClassOf(kisao:KISAO_0000381 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000381 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000381 DataHasValue(kisao:KISAO_0000275 "2"^^xsd:integer))
Declaration(Class(kisao:KISAO_0000382))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000382 "Gragg's method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000382 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000382 "2011-07-01"^^xsd:date)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000382 "Gragg's modified midpoint method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000382 "The modified midpoint method is globally a second order method for approximating the solution of the initial value problem y' = f(x, y), y(x0) = y0, which advances a vector of dependent variables y(x) from a point x to a point x + H by a sequence of n substeps each of size h, h = H/n.
"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000382 "modified midpoint method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes in Fortran 77. Cambridge University Press (2001)."@en) rdfs:seeAlso kisao:KISAO_0000382 "urn:miriam:isbn:052143064X"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000382 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000382 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
Declaration(Class(kisao:KISAO_0000383))
AnnotationAssertion(skos:definition kisao:KISAO_0000383 "The Bader-Deuflhard method is an extrapolation method based on a semi-implicit discretization [urn:miriam:biomodels.kisao:KISAO_0000387]. It is a generalization of the Bulirsch-Stoer algorithm [urn:miriam:biomodels.kisao:KISAO_0000379] for solving ordinary differential equations."@en)
AnnotationAssertion(Annotation(rdfs:comment "Bader, G. and Deuflhard, P. \"A Semi-Implicit Mid-Point Rule for Stiff Systems of Ordinary Differential Equations.\" Numer. Math. 41, 373-398, 1983."@en) rdfs:seeAlso kisao:KISAO_0000383 "urn:miriam:doi:10.1007/BF01418331"^^xsd:anyURI)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000383 "GSL"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000383 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000383 "Bader-Deuflhard method"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000383 "2011-07-01"^^xsd:date)
SubClassOf(kisao:KISAO_0000383 kisao:KISAO_0000380)
SubClassOf(kisao:KISAO_0000383 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000383 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000384))
SubClassOf(kisao:KISAO_0000383 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000379))
Declaration(Class(kisao:KISAO_0000384))
AnnotationAssertion(rdfs:label kisao:KISAO_0000384 "semi-implicit midpoint rule"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bader, G. and Deuflhard, P. \"A Semi-Implicit Mid-Point Rule for Stiff Systems of Ordinary Differential Equations.\" Numer. Math. 41, 373-398, 1983."@en) rdfs:seeAlso kisao:KISAO_0000384 "urn:miriam:doi:10.1007/BF01418331"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000384 "2011-07-01"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000384 "A semi-implicit version of the midpoint method that has an even error series [urn:miriam:biomodels.kisao:KISAO_0000381]."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000384 "AZ"@en)
SubClassOf(kisao:KISAO_0000384 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000384 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000386))
AnnotationAssertion(dc:created kisao:KISAO_0000386 "2011-07-18"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "Peter N. Brown, Alan C. Hindmarsh, and Linda R. Petzold. 1994. Using Krylov methods in the solution of large-scale differential-algebraic systems. SIAM J. Sci. Comput. 15, 6 (November 1994), 1467-1488."@en) rdfs:seeAlso kisao:KISAO_0000386 "urn:miriam:doi:10.1137/0915088"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000386 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000386 "A scaled preconditioned version of 'generalized minimal residual algorithm' [urn:miriam:biomodels.kisao:KISAO_0000353]. For linear system Ax = b a preconditioner matrix P that approximates A is sought, for which linear system Px = b can be solved easily. Preconditioning is applied on the left only. Scaling is done using diagonal matrix D whose diagonal elements are weights w^i = rtol|y^i| +atol^i, where rtol is 'relative tolerance' [urn:miriam:biomodels.kisao:KISAO_0000209] and atol is 'absolute tolerance' [urn:miriam:biomodels.kisao:KISAO_0000211]."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000386 "SPGMR"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000386 "scaled preconditioned generalized minimal residual method"@en)
SubClassOf(kisao:KISAO_0000386 kisao:KISAO_0000353)
SubClassOf(kisao:KISAO_0000386 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000397))
Declaration(Class(kisao:KISAO_0000388))
AnnotationAssertion(rdfs:label kisao:KISAO_0000388 "minimal residual method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Paige C.C., Saunders M.A. Solution of sparse indefinite systems of linear equations, SIAM Journal on Numerical Analysis (1975) Volume: 12, Issue: 4, Publisher: SIAM, Pages: 617-629."@en) rdfs:seeAlso kisao:KISAO_0000388 "urn:miriam:doi:10.1137/0712047"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000388 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000388 "2011-07-18"^^xsd:date)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000388 "MINRES"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000388 "The 'minimal residual method' is an algorithm for the numerical solution of indefinite symmertic systems of linear equations."@en)
SubClassOf(kisao:KISAO_0000388 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000388 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000404))
Declaration(Class(kisao:KISAO_0000389))
AnnotationAssertion(rdfs:label kisao:KISAO_0000389 "quasi-minimal residual method"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000389 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000389 "QMR"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000389 "The QMR algorithm is a robust iterative solver for general nonsingular non-Hermitian linear systems. The method uses a robust implementation of the look-ahead Lanczos algorithm to generate basis vectors for the Krylov subspaces Kn(r0, A). The QMR iterates are characterized by a quasi-minimal residual property over Kn(r0, A)."@en)
AnnotationAssertion(Annotation(rdfs:comment "Roland W. Freund and Noël M. Nachtigal. QMR: a quasi-minimal residual method for non-Hermitian linear systems. NUMERISCHE MATHEMATIK Volume 60, Number 1, 315-339.
"@en) rdfs:seeAlso kisao:KISAO_0000389 "urn:miriam:doi:10.1007/BF01385726"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000389 "2011-07-18"^^xsd:date)
SubClassOf(kisao:KISAO_0000389 kisao:KISAO_0000393)
Declaration(Class(kisao:KISAO_0000392))
AnnotationAssertion(rdfs:label kisao:KISAO_0000392 "biconjugate gradient stabilized method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Van der Vorst, H. A. (1992). Bi-CGSTAB: A Fast and Smoothly Converging Variant of Bi-CG for the Solution of Nonsymmetric Linear Systems. SIAM Journal on Scientific and Statistical Computing 13: 631–644."@en) rdfs:seeAlso kisao:KISAO_0000392 "urn:miriam:doi:10.1137/0913035"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000392 "An iterative method for the numerical solution of nonsymmetric linear systems. It is a variant of the biconjugate gradient method (BiCG) [urn:miriam:biomodels.kisao:KISAO_0000358] and has faster and smoother convergence than the original BiCG."@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000392 "Bi-CGSTAB"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000392 "BiCGSTAB"@en)
SubClassOf(kisao:KISAO_0000392 kisao:KISAO_0000395)
DisjointClasses(kisao:KISAO_0000392 kisao:KISAO_0000393)
Declaration(Class(kisao:KISAO_0000393))
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000393 "CGS"@en)
AnnotationAssertion(Annotation(rdfs:comment "Peter Sonneveld. 1989. CGS, a fast Lanczos-type solver for nonsymmetric linear systems. SIAM J. Sci. Stat. Comput. 10, 1 (January 1989), 36-52."@en) rdfs:seeAlso kisao:KISAO_0000393 "urn:miriam:doi:10.1137/0910004"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000393 "2011-07-18"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000393 "ingenious conjugate gradients-squared method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000393 "A Lanczos-type method for nonsymmetric sparse linear systems. The method is based on a polynomial variant of the conjugate gradients algorithm [urn:miriam:biomodels.kisao:KISAO_0000357]. Although related to the so-called bi-conjugate gradients (Bi-CG) algorithm [urn:miriam:biomodels.kisao:KISAO_0000358], it does not involve adjoint matrix-vector multiplications, and the expected convergence rate is about twice that of the Bi-CG algorithm."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000393 "AZ"@en)
SubClassOf(kisao:KISAO_0000393 kisao:KISAO_0000395)
DisjointClasses(kisao:KISAO_0000393 kisao:KISAO_0000392)
Declaration(Class(kisao:KISAO_0000394))
AnnotationAssertion(Annotation(rdfs:comment "T. F. Chan, E. Gallopoulos, V. Simoncini, T. Szeto, and C. H. Tong. 1994. A quasi-minimal residual variant of the Bi-CGSTAB algorithm for nonsymmetric systems. SIAM J. Sci. Comput. 15, 2 (March 1994), 338-347."@en) rdfs:seeAlso kisao:KISAO_0000394 "urn:miriam:doi:10.1137/0915023"^^xsd:anyURI)
AnnotationAssertion(dc:creator kisao:KISAO_0000394 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000394 "quasi-minimal residual variant of biconjugate gradient stabilized method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000394 "QMRCGSTAB"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000394 "2011-07-19"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000394 "QMRCGSTAB is a quasi-minimal residual (QMR) variant of the Bi-CGSTAB algorithm [urn:miriam:biomodels.kisao:KISAO_0000394] of van der Vorst for solving nonsymmetric linear systems. The motivation for the QMR variant is to obtain smoother convergence behavior of the underlying method.
"@en)
SubClassOf(kisao:KISAO_0000394 kisao:KISAO_0000392)
Declaration(Class(kisao:KISAO_0000395))
AnnotationAssertion(dc:created kisao:KISAO_0000395 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000395 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000395 "An 'improved biconjugate gradient method' branch contains algorithms which can be viewed as improvements over some of drawbacks of BCG [urn:miriam:biomodels.kisao:KISAO_0000358], such as (1) the need for matrix-vector multiplications with A^T (which can be inconvenient as well as doubling the number of matrix-vector multiplications compared to CG [urn:miriam:biomodels.kisao:KISAO_0000357] for each increase in the degree of the underlying Krylov subspace), (2) the possibility of breakdowns and (3) erratic convergence behavior.
"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000395 "improved biconjugate gradient method"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000395 "true"^^xsd:boolean)
SubClassOf(kisao:KISAO_0000395 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000395 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000358))
Declaration(Class(kisao:KISAO_0000396))
AnnotationAssertion(skos:definition kisao:KISAO_0000396 "A version of CGS [urn:miriam:biomodels.kisao:KISAO_0000393] which 'quasi-minimizes' the residual in the space spanned by the vectors generated by the CGS iteration.
"@en)
AnnotationAssertion(Annotation(rdfs:comment "Roland W. Freund. 1993. A transpose-free quasi-minimal residual algorithm for non-Hermitian linear systems. SIAM J. Sci. Comput. 14, 2 (March 1993), 470-482."@en) rdfs:seeAlso kisao:KISAO_0000396 "urn:miriam:doi:10.1137/0914029"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000396 "transpose-free quasi-minimal residual algorithm"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000396 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000396 "TFQMR"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000396 "2011-07-19"^^xsd:date)
SubClassOf(kisao:KISAO_0000396 kisao:KISAO_0000389)
Declaration(Class(kisao:KISAO_0000397))
AnnotationAssertion(rdfs:label kisao:KISAO_0000397 "preconditioning technique"@en)
AnnotationAssertion(Annotation(rdfs:comment "Saad, Yousef (2003). Iterative methods for sparse linear systems (2nd ed.). SIAM."@en) rdfs:seeAlso kisao:KISAO_0000397 "urn:miriam:isbn:0898715342"^^xsd:anyURI)
AnnotationAssertion(dc:created kisao:KISAO_0000397 "2011-07-19"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000397 "Preconditioning is simply a means of transforming the original linear system into one which has the same solution, but which is likely to be easier to solve with an iterative solver."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000397 "AZ"@en)
SubClassOf(kisao:KISAO_0000397 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000397 ObjectSomeValuesFrom(kisao:KISAO_0000399 kisao:KISAO_0000398))
Declaration(Class(kisao:KISAO_0000398))
AnnotationAssertion(Annotation(rdfs:comment "Saad, Yousef (2003). Iterative methods for sparse linear systems (2nd ed.). SIAM."@en) rdfs:seeAlso kisao:KISAO_0000398 "urn:miriam:isbn:0898715342"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000398 "iterative method for linear system"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000398 "true"^^xsd:boolean)
AnnotationAssertion(dc:creator kisao:KISAO_0000398 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000398 "2011-07-19"^^xsd:date)
SubClassOf(kisao:KISAO_0000398 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000398 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000398 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))
SubClassOf(kisao:KISAO_0000398 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376))
Declaration(Class(kisao:KISAO_0000403))
AnnotationAssertion(rdfs:label kisao:KISAO_0000403 "homogeneousness of equation"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000403 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000403 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000403 "Homogeneous equations are of the form Ly = 0, where the differential operator L is a linear operator and y is the unknown function."@en)
SubClassOf(kisao:KISAO_0000403 kisao:KISAO_0000376)
Declaration(Class(kisao:KISAO_0000404))
AnnotationAssertion(skos:definition kisao:KISAO_0000404 "In linear algebra, a symmetric matrix is a square matrix that is equal to its transpose."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000404 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000404 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000404 "symmetricity of matrix"@en)
SubClassOf(kisao:KISAO_0000404 kisao:KISAO_0000370)
Declaration(Class(kisao:KISAO_0000405))
AnnotationAssertion(dc:creator kisao:KISAO_0000405 "AZ"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000405 "2011-07-19"^^xsd:date)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000405 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000405 "type of differential equation"@en)
SubClassOf(kisao:KISAO_0000405 kisao:KISAO_0000370)
Declaration(ObjectProperty(kisao:KISAO_0000245))
AnnotationAssertion(rdfs:label kisao:KISAO_0000245 "has characteristic"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000245 "'has characteristic' links algorithms to the characteristics, they possess."@en)
InverseObjectProperties(kisao:KISAO_0000268 kisao:KISAO_0000245)
ObjectPropertyDomain(kisao:KISAO_0000245 kisao:KISAO_0000000)
ObjectPropertyRange(kisao:KISAO_0000245 kisao:KISAO_0000097)
DisjointObjectProperties(kisao:KISAO_0000245 kisao:KISAO_0000250 kisao:KISAO_0000259 kisao:KISAO_0000268 kisao:KISAO_0000359 kisao:KISAO_0000360)
Declaration(ObjectProperty(kisao:KISAO_0000246))
AnnotationAssertion(rdfs:label kisao:KISAO_0000246 "is hybrid of"@en)
AnnotationAssertion(Annotation(rdfs:comment "Biochemical simulations: stochastic, approximate stochastic and hybrid approaches. Pahle J. Brief Bioinform. 2009 Jan;10(1):53-64. Epub 2009 Jan 16."@en) rdfs:seeAlso kisao:KISAO_0000246 "urn:miriam:doi:10.1093/bib/bbn050"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000246 "The basic idea of hybrid simulation methods is to combine the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time.
'is hybrid of' is a relation between the complex simulation method and algorithms it applies to the different parts of the system."@en)
SubObjectPropertyOf(kisao:KISAO_0000246 kisao:KISAO_0000360)
ObjectPropertyDomain(kisao:KISAO_0000246 ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322) kisao:KISAO_0000000))
ObjectPropertyRange(kisao:KISAO_0000246 kisao:KISAO_0000000)
Declaration(ObjectProperty(kisao:KISAO_0000250))
AnnotationAssertion(skos:definition kisao:KISAO_0000250 "'is parameter of' is an inverse of 'has parameter' and links parameters to the algorithms which use them."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000250 "is parameter of"@en)
InverseObjectProperties(kisao:KISAO_0000259 kisao:KISAO_0000250)
ObjectPropertyDomain(kisao:KISAO_0000250 kisao:KISAO_0000201)
ObjectPropertyRange(kisao:KISAO_0000250 kisao:KISAO_0000000)
DisjointObjectProperties(kisao:KISAO_0000245 kisao:KISAO_0000250 kisao:KISAO_0000259 kisao:KISAO_0000268 kisao:KISAO_0000359 kisao:KISAO_0000360)
Declaration(ObjectProperty(kisao:KISAO_0000259))
AnnotationAssertion(skos:definition kisao:KISAO_0000259 "'has parameter' links algorithms to the parameters they use."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000259 "has parameter"@en)
InverseObjectProperties(kisao:KISAO_0000259 kisao:KISAO_0000250)
ObjectPropertyDomain(kisao:KISAO_0000259 kisao:KISAO_0000000)
ObjectPropertyRange(kisao:KISAO_0000259 kisao:KISAO_0000201)
DisjointObjectProperties(kisao:KISAO_0000245 kisao:KISAO_0000250 kisao:KISAO_0000259 kisao:KISAO_0000268 kisao:KISAO_0000359 kisao:KISAO_0000360)
Declaration(ObjectProperty(kisao:KISAO_0000268))
AnnotationAssertion(skos:definition kisao:KISAO_0000268 "'is characteristic of' is an inverse of 'has characteristic' and links characteristics to the algorithms which possess them."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000268 "is characteristic of"@en)
InverseObjectProperties(kisao:KISAO_0000268 kisao:KISAO_0000245)
ObjectPropertyDomain(kisao:KISAO_0000268 kisao:KISAO_0000097)
ObjectPropertyRange(kisao:KISAO_0000268 kisao:KISAO_0000000)
DisjointObjectProperties(kisao:KISAO_0000245 kisao:KISAO_0000250 kisao:KISAO_0000259 kisao:KISAO_0000268 kisao:KISAO_0000359 kisao:KISAO_0000360)
Declaration(ObjectProperty(kisao:KISAO_0000359))
AnnotationAssertion(rdfs:label kisao:KISAO_0000359 "is similar to"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000359 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000359 "AZ"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000359 "A relationship indicating that two entities are similar to each other."@en)
SymmetricObjectProperty(kisao:KISAO_0000359)
ReflexiveObjectProperty(kisao:KISAO_0000359)
DisjointObjectProperties(kisao:KISAO_0000245 kisao:KISAO_0000250 kisao:KISAO_0000259 kisao:KISAO_0000268 kisao:KISAO_0000359 kisao:KISAO_0000360)
Declaration(ObjectProperty(kisao:KISAO_0000360))
AnnotationAssertion(rdfs:label kisao:KISAO_0000360 "uses"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000360 "2011-06-10"^^xsd:date)
AnnotationAssertion(skos:definition kisao:KISAO_0000360 "A relation between algorithms indicating that one algorithm uses another one (for example, if the algorithm switches between several algorithms)."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000360 "AZ"@en)
InverseObjectProperties(kisao:KISAO_0000399 kisao:KISAO_0000360)
ObjectPropertyDomain(kisao:KISAO_0000360 kisao:KISAO_0000000)
ObjectPropertyRange(kisao:KISAO_0000360 kisao:KISAO_0000000)
DisjointObjectProperties(kisao:KISAO_0000245 kisao:KISAO_0000250 kisao:KISAO_0000259 kisao:KISAO_0000268 kisao:KISAO_0000359 kisao:KISAO_0000360)
Declaration(ObjectProperty(kisao:KISAO_0000361))
AnnotationAssertion(skos:definition kisao:KISAO_0000361 "A relation between kinetic simulation algorithms, indicating that one is a generalization of another (e.g.if one extends another to suit systems with more general characteristics )."@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000361 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000361 "is generalization of"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000361 "2011-06-10"^^xsd:date)
SubObjectPropertyOf(kisao:KISAO_0000361 kisao:KISAO_0000359)
ObjectPropertyDomain(kisao:KISAO_0000361 kisao:KISAO_0000000)
ObjectPropertyRange(kisao:KISAO_0000361 kisao:KISAO_0000000)
Declaration(ObjectProperty(kisao:KISAO_0000399))
AnnotationAssertion(dc:created kisao:KISAO_0000399 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000399 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000399 "is used by"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000399 "A relation between algorithms indicating that one algorithm is used by another one (for example, if the algorithm switches between several algorithms). 'is used by' is inverse of 'uses'."@en)
InverseObjectProperties(kisao:KISAO_0000399 kisao:KISAO_0000360)
Declaration(DataProperty(kisao:KISAO_0000251))
AnnotationAssertion(rdfs:label kisao:KISAO_0000251 "has type"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000251 "Indicates the type of algorithm parameter value, such as, for example, xsd:double for 'absolute tolerance'."@en)
FunctionalDataProperty(kisao:KISAO_0000251)
DataPropertyDomain(kisao:KISAO_0000251 kisao:KISAO_0000201)
Declaration(DataProperty(kisao:KISAO_0000275))
AnnotationAssertion(rdfs:label kisao:KISAO_0000275 "has Runge-Kutta method order"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000275 "Indicates the order of a 'Runge-Kutta based method' [urn.miriam.biomodels.kisao:KISAO_0000064]. A 'Runge-Kutta based method' has order p if for sufficiently smooth initial value problems (y'=f(x,y), y(x0)=y0),  ||y(x0 + h)-y1||<=Kh^(p+h)."@en)
DataPropertyDomain(kisao:KISAO_0000275 kisao:KISAO_0000064)
DataPropertyRange(kisao:KISAO_0000275 xsd:int)
Declaration(AnnotationProperty(protege:defaultLanguage))
Declaration(AnnotationProperty(dc:created))
Declaration(AnnotationProperty(dc:creator))
Declaration(AnnotationProperty(dc:rights))
Declaration(AnnotationProperty(kisao:isImplementedIn))
Declaration(AnnotationProperty(kisao:isOrganizational))
Declaration(AnnotationProperty(skos:altLabel))
Declaration(AnnotationProperty(skos:definition))
Declaration(Datatype(xsd:date))
SubClassOf(ObjectIntersectionOf(kisao:KISAO_0000064 ObjectComplementOf(kisao:KISAO_0000367) ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239)) ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366)))
DisjointClasses(kisao:KISAO_0000376 kisao:KISAO_0000404 kisao:KISAO_0000405)
DisjointClasses(kisao:KISAO_0000203 kisao:KISAO_0000204 kisao:KISAO_0000205 kisao:KISAO_0000248 kisao:KISAO_0000249 kisao:KISAO_0000257 kisao:KISAO_0000258 kisao:KISAO_0000260 kisao:KISAO_0000327 kisao:KISAO_0000328)
AnnotationAssertion(kisao:isOrganizational owl:Thing "true"^^xsd:boolean)
DisjointClasses(kisao:KISAO_0000098 kisao:KISAO_0000099 kisao:KISAO_0000100 kisao:KISAO_0000102 kisao:KISAO_0000235 kisao:KISAO_0000238 kisao:KISAO_0000311 kisao:KISAO_0000322 kisao:KISAO_0000366 kisao:KISAO_0000370)
DisjointClasses(kisao:KISAO_0000209 kisao:KISAO_0000211 kisao:KISAO_0000228 kisao:KISAO_0000254 kisao:KISAO_0000325 kisao:KISAO_0000326)
DisjointClasses(kisao:KISAO_0000231 kisao:KISAO_0000317 kisao:KISAO_0000320 kisao:KISAO_0000365)
DisjointClasses(kisao:KISAO_0000029 kisao:KISAO_0000075 kisao:KISAO_0000333 kisao:KISAO_0000335)
DisjointClasses(kisao:KISAO_0000020 kisao:KISAO_0000282 kisao:KISAO_0000355)
SubClassOf(ObjectIntersectionOf(kisao:KISAO_0000064 ObjectComplementOf(kisao:KISAO_0000367) ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366)) ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
DisjointClasses(kisao:KISAO_0000241 kisao:KISAO_0000274 kisao:KISAO_0000278)
DisjointClasses(kisao:KISAO_0000285 kisao:KISAO_0000307 kisao:KISAO_0000310 kisao:KISAO_0000337 kisao:KISAO_0000342 kisao:KISAO_0000343 kisao:KISAO_0000345 kisao:KISAO_0000348 kisao:KISAO_0000349)
DisjointClasses(kisao:KISAO_0000086 kisao:KISAO_0000087 kisao:KISAO_0000290 kisao:KISAO_0000303 kisao:KISAO_0000305 kisao:KISAO_0000321)
DisjointClasses(kisao:KISAO_0000279 kisao:KISAO_0000280 kisao:KISAO_0000364)
DisjointClasses(kisao:KISAO_0000216 kisao:KISAO_0000219 kisao:KISAO_0000220 kisao:KISAO_0000230)
DisjointClasses(kisao:KISAO_0000040 kisao:KISAO_0000045 kisao:KISAO_0000046 kisao:KISAO_0000048 kisao:KISAO_0000074 kisao:KISAO_0000081 kisao:KISAO_0000084 kisao:KISAO_0000351)
DisjointClasses(kisao:KISAO_0000051 kisao:KISAO_0000075 kisao:KISAO_0000333 kisao:KISAO_0000335)
DisjointClasses(kisao:KISAO_0000088 kisao:KISAO_0000089 kisao:KISAO_0000090 kisao:KISAO_0000091 kisao:KISAO_0000093 kisao:KISAO_0000232 kisao:KISAO_0000233 kisao:KISAO_0000234)
DisjointClasses(kisao:KISAO_0000353 kisao:KISAO_0000357 kisao:KISAO_0000358 kisao:KISAO_0000388 kisao:KISAO_0000395)
DisjointClasses(kisao:KISAO_0000032 kisao:KISAO_0000033 kisao:KISAO_0000276 kisao:KISAO_0000296 kisao:KISAO_0000297 kisao:KISAO_0000299 kisao:KISAO_0000301 kisao:KISAO_0000302 kisao:KISAO_0000304 kisao:KISAO_0000318 kisao:KISAO_0000367 kisao:KISAO_0000378 kisao:KISAO_0000381 kisao:KISAO_0000382 kisao:KISAO_0000384)
DisjointClasses(kisao:KISAO_0000287 kisao:KISAO_0000288 kisao:KISAO_0000289)
DisjointClasses(kisao:KISAO_0000371 kisao:KISAO_0000372 kisao:KISAO_0000373 kisao:KISAO_0000374)
DisjointClasses(kisao:KISAO_0000017 kisao:KISAO_0000021 kisao:KISAO_0000264)
DisjointClasses(kisao:KISAO_0000056 kisao:KISAO_0000094 kisao:KISAO_0000273 kisao:KISAO_0000281 kisao:KISAO_0000284 kisao:KISAO_0000306 kisao:KISAO_0000314 kisao:KISAO_0000319 kisao:KISAO_0000363 kisao:KISAO_0000369 kisao:KISAO_0000377 kisao:KISAO_0000397 kisao:KISAO_0000398)
DisjointClasses(kisao:KISAO_0000064 kisao:KISAO_0000261 kisao:KISAO_0000286 kisao:KISAO_0000380)
DisjointClasses(kisao:KISAO_0000000 kisao:KISAO_0000097 kisao:KISAO_0000201)
DisjointClasses(kisao:KISAO_0000019 kisao:KISAO_0000282 kisao:KISAO_0000356)
DisjointClasses(kisao:KISAO_0000003 kisao:KISAO_0000015 kisao:KISAO_0000027 kisao:KISAO_0000028 kisao:KISAO_0000038 kisao:KISAO_0000039 kisao:KISAO_0000082 kisao:KISAO_0000323 kisao:KISAO_0000324 kisao:KISAO_0000329 kisao:KISAO_0000330 kisao:KISAO_0000331 kisao:KISAO_0000350)
EquivalentClasses(ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000000) ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322))
DisjointClasses(kisao:KISAO_0000242 kisao:KISAO_0000243 kisao:KISAO_0000244 kisao:KISAO_0000252)
DisjointClasses(kisao:KISAO_0000019 kisao:KISAO_0000282 kisao:KISAO_0000283)
SubClassOf(ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000311) kisao:KISAO_0000000) ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
DisjointClasses(kisao:KISAO_0000338 kisao:KISAO_0000339 kisao:KISAO_0000341)
)
